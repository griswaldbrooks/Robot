
picoBoard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000cc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800100  00800100  00000140  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  00000140  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000027  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000b7  00000000  00000000  00000187  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000007d  00000000  00000000  0000023e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000000a5  00000000  00000000  000002bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000030  00000000  00000000  00000360  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000006e  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ec       	ldi	r30, 0xCC	; 204
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
  8a:	11 e0       	ldi	r17, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 30       	cpi	r26, 0x01	; 1
  96:	b1 07       	cpc	r27, r17
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  9e:	0c 94 61 00 	jmp	0xc2	; 0xc2 <exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <f>:

unsigned char i;
void f(){
	/* Define pull-ups and set outputs high */
	/* Define directions for port pins */
	PORTB = (1<<PORTB7)|(1<<PORTB6)|(1<<PORTB1)|(1<<PORTB0);
  a6:	83 ec       	ldi	r24, 0xC3	; 195
  a8:	85 b9       	out	0x05, r24	; 5
	DDRB = (1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
  aa:	8f e0       	ldi	r24, 0x0F	; 15
  ac:	84 b9       	out	0x04, r24	; 4
	/* Insert nop for synchronization*/
	
	asm volatile("nop\n\t");
  ae:	00 00       	nop
	//__no_operation();
	/* Read port pins */

	//i = PINB;
}
  b0:	08 95       	ret

000000b2 <main>:

unsigned char i;
void f(){
	/* Define pull-ups and set outputs high */
	/* Define directions for port pins */
	PORTB = (1<<PORTB7)|(1<<PORTB6)|(1<<PORTB1)|(1<<PORTB0);
  b2:	83 ec       	ldi	r24, 0xC3	; 195
  b4:	85 b9       	out	0x05, r24	; 5
	DDRB = (1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
  b6:	8f e0       	ldi	r24, 0x0F	; 15
  b8:	84 b9       	out	0x04, r24	; 4
	/* Insert nop for synchronization*/
	
	asm volatile("nop\n\t");
  ba:	00 00       	nop

int main(){

f();

}
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	08 95       	ret

000000c2 <exit>:
  c2:	f8 94       	cli
  c4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <_exit>

000000c8 <_exit>:
  c8:	f8 94       	cli

000000ca <__stop_program>:
  ca:	ff cf       	rjmp	.-2      	; 0xca <__stop_program>
