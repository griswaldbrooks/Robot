/*
		This file has been auto-generated by WebbotLib tools V1.1
				** DO NOT MODIFY BY HAND **
*/
#ifndef _HARDWARE_H_
#define _HARDWARE_H_
#include "xhardware.h"

// ------------------- uart1 -------------------

// Create a routine to write bytes to uart1
// You can set rprintf to use it by calling rprintfInit(&uart1SendByte)
MAKE_WRITER(uart1SendByte){
	return uartSendByte(uart1,byte);
}

// Create a routine to read a byte from uart1
// Returns -1 if there was no data
MAKE_READER( uart1GetByte){
	return uartGetByte(uart1);
}

// Create hardware UART uart1
HW_UART _uart1 = MAKE_UART_BUFFERED(null,null,UCSR1A,UCSR1B,UBRR1L,UBRR1H,UDR1,null,BV(U2X1),D2,D3,&uart1GetByte,&uart1SendByte);

#ifndef USART1_TX_vect
# error Uart1 Tx complete vector undefined
#else
ISR(USART1_TX_vect){
	uartTransmitService(uart1);
}
#endif

#ifndef USART1_RX_vect
# error Uart1 Rx complete vector undefined
#else
ISR(USART1_RX_vect){
	uartReceiveService(uart1);
}
#endif

// ----------- Define the ADC channels ----------
const uint8_t NUM_ADC_CHANNELS = 16;
const uint16_t PROGMEM AVcc_MV = 5000;

// ----------- My devices -----------------------
SWITCH button = MAKE_SWITCH(G5);
ADXL335 acc_330 = MAKE_ADXL335(ADC0,ADC1,ADC2);
IDG300 gyro_300 = MAKE_IDG300(ADC3,ADC4);

// ----------- Initialise built in devices ------
void sysInitHardware(void){
	SWITCH_init(&button);
	setErrorLog(&uart1SendByte);
	rprintfInit(&uart1SendByte);
	uartInit(uart1,115200);
}

// ----------- Initialise my added devices ------
void initHardware(void){
	accelerometerInit(acc_330);
	gyroInit(gyro_300);
}
// ----------- Register the statusLED -----------
void registerLED(void){
	statusLEDregister(B6,false);
}

// ----------- Ports are configured on the fly --
void configure_ports(void){
}

#endif
