
acc_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800200  00004cb0  00004d44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004cb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000dc  0080026c  0080026c  00004db0  2**0
                  ALLOC
  3 .debug_aranges 000002c0  00000000  00000000  00004db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000f2f  00000000  00000000  00005070  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00009861  00000000  00000000  00005f9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000021ce  00000000  00000000  0000f800  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000043df  00000000  00000000  000119ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000b90  00000000  00000000  00015db0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001fdc  00000000  00000000  00016940  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000044a2  00000000  00000000  0001891c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0001cdbe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 30 02 	jmp	0x460	; 0x460 <__ctors_end>
       4:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
       8:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
       c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      10:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      14:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      18:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      1c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      20:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      24:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      28:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      2c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      30:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      34:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__vector_13>
      38:	0c 94 12 04 	jmp	0x824	; 0x824 <__vector_14>
      3c:	0c 94 ba 03 	jmp	0x774	; 0x774 <__vector_15>
      40:	0c 94 0a 03 	jmp	0x614	; 0x614 <__vector_16>
      44:	0c 94 36 03 	jmp	0x66c	; 0x66c <__vector_17>
      48:	0c 94 62 03 	jmp	0x6c4	; 0x6c4 <__vector_18>
      4c:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__vector_19>
      50:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__vector_20>
      54:	0c 94 86 02 	jmp	0x50c	; 0x50c <__vector_21>
      58:	0c 94 b2 02 	jmp	0x564	; 0x564 <__vector_22>
      5c:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__vector_23>
      60:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      64:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      68:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      6c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      70:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      74:	0c 94 cd 20 	jmp	0x419a	; 0x419a <__vector_29>
      78:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      7c:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__vector_31>
      80:	0c 94 96 04 	jmp	0x92c	; 0x92c <__vector_32>
      84:	0c 94 c2 04 	jmp	0x984	; 0x984 <__vector_33>
      88:	0c 94 ee 04 	jmp	0x9dc	; 0x9dc <__vector_34>
      8c:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__vector_35>
      90:	0c 94 18 07 	jmp	0xe30	; 0xe30 <__vector_36>
      94:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      98:	0c 94 ec 06 	jmp	0xdd8	; 0xdd8 <__vector_38>
      9c:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      a0:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      a4:	0c 94 46 05 	jmp	0xa8c	; 0xa8c <__vector_41>
      a8:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__vector_42>
      ac:	0c 94 9e 05 	jmp	0xb3c	; 0xb3c <__vector_43>
      b0:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__vector_44>
      b4:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <__vector_45>
      b8:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__vector_46>
      bc:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__vector_47>
      c0:	0c 94 7a 06 	jmp	0xcf4	; 0xcf4 <__vector_48>
      c4:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__vector_49>
      c8:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__vector_50>
      cc:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      d0:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      d4:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      d8:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      dc:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      e0:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <__bad_interrupt>
      e4:	03 6e       	ori	r16, 0xE3	; 227
      e6:	db 36       	cpi	r29, 0x6B	; 107
      e8:	3d 9a       	sbi	0x07, 5	; 7
      ea:	99 99       	sbic	0x13, 1	; 19
      ec:	99 3d       	cpi	r25, 0xD9	; 217
      ee:	ab aa       	std	Y+51, r10	; 0x33
      f0:	aa 2a       	or	r10, r26
      f2:	3e 00       	.word	0x003e	; ????
      f4:	00 00       	nop
      f6:	80 3f       	cpi	r24, 0xF0	; 240
      f8:	07 2c       	mov	r0, r7
      fa:	7a a5       	ldd	r23, Y+42	; 0x2a
      fc:	ba 6c       	ori	r27, 0xCA	; 202
      fe:	c5 90       	lpm	r12, Z+
     100:	da 3b       	cpi	r29, 0xBA	; 186
     102:	93 65       	ori	r25, 0x53	; 83
     104:	fc 8b       	std	Y+20, r31	; 0x14
     106:	bc 53       	subi	r27, 0x3C	; 60
     108:	f8 10       	cpse	r15, r8
     10a:	fd 3c       	cpi	r31, 0xCD	; 205
     10c:	56 92       	.word	0x9256	; ????
     10e:	83 4d       	sbci	r24, 0xD3	; 211
     110:	bd 87       	std	Y+13, r27	; 0x0d
     112:	9d 3a       	cpi	r25, 0xAD	; 173
     114:	b6 3d       	cpi	r27, 0xD6	; 214
     116:	cb c9       	rjmp	.-3178   	; 0xfffff4ae <__eeprom_end+0xff7ef4ae>
     118:	bf 5b       	subi	r27, 0xBF	; 191
     11a:	be 73       	andi	r27, 0x3E	; 62
     11c:	da 0f       	add	r29, r26
     11e:	c9 3f       	cpi	r28, 0xF9	; 249

00000120 <_PORTB>:
     120:	25 00 24 00 23 00                                   %.$.#.

00000126 <_PORTD>:
     126:	2b 00 2a 00 29 00                                   +.*.).

0000012c <_PORTE>:
     12c:	2e 00 2d 00 2c 00                                   ..-.,.

00000132 <_PORTG>:
     132:	34 00 33 00 32 00                                   4.3.2.

00000138 <_PORTH>:
     138:	02 01 01 01 00 01                                   ......

0000013e <_B6>:
     13e:	20 01 40                                             .@

00000141 <_D2>:
     141:	26 01 04                                            &..

00000144 <_D3>:
     144:	26 01 08                                            &..

00000147 <_E3>:
     147:	2c 01 08                                            ,..

0000014a <_E4>:
     14a:	2c 01 10                                            ,..

0000014d <_E5>:
     14d:	2c 01 20                                            ,. 

00000150 <_E7>:
     150:	2c 01 80                                            ,..

00000153 <_G5>:
     153:	32 01 20                                            2. 

00000156 <_H3>:
     156:	38 01 08                                            8..

00000159 <_H4>:
     159:	38 01 10                                            8..

0000015c <_H5>:
     15c:	38 01 20                                            8. 

0000015f <_H6>:
     15f:	38 01 40                                            8.@

00000162 <PCINT_PINS>:
	...
     16e:	3e 01                                               >.

00000170 <__timer0Compare>:
     170:	81 02 00 6e 00 02 47 00 35 00 02 44 00 06 00 00     ...n..G.5..D....
     180:	85 02 00 6e 00 04 48 00 35 00 04 44 00 04 53 01     ...n..H.5..D..S.

00000190 <__timer1Compare>:
     190:	94 02 01 6f 00 02 88 00 36 00 02 80 00 06 00 00     ...o....6.......
     1a0:	98 02 01 6f 00 04 8a 00 36 00 04 80 00 04 3e 01     ...o....6.....>.
     1b0:	9c 02 01 6f 00 08 8c 00 36 00 08 80 00 02 00 00     ...o....6.......

000001c0 <__timer2Compare>:
     1c0:	ab 02 02 70 00 02 b3 00 37 00 02 b0 00 06 00 00     ...p....7.......
     1d0:	af 02 02 70 00 04 b4 00 37 00 04 b0 00 04 5f 01     ...p....7....._.

000001e0 <__timer3Compare>:
     1e0:	be 02 03 71 00 02 98 00 38 00 02 90 00 06 47 01     ...q....8.....G.
     1f0:	c2 02 03 71 00 04 9a 00 38 00 04 90 00 04 4a 01     ...q....8.....J.
     200:	c6 02 03 71 00 08 9c 00 38 00 08 90 00 02 4d 01     ...q....8.....M.

00000210 <__timer4Compare>:
     210:	d5 02 04 72 00 02 a8 00 39 00 02 a0 00 06 56 01     ...r....9.....V.
     220:	d9 02 04 72 00 04 aa 00 39 00 04 a0 00 04 59 01     ...r....9.....Y.
     230:	dd 02 04 72 00 08 ac 00 39 00 08 a0 00 02 5c 01     ...r....9.....\.

00000240 <__timer5Compare>:
     240:	ec 02 05 73 00 02 28 01 3a 00 02 20 01 06 00 00     ...s..(.:.. ....
     250:	f0 02 05 73 00 04 2a 01 3a 00 04 20 01 04 00 00     ...s..*.:.. ....
     260:	f4 02 05 73 00 08 2c 01 3a 00 08 20 01 02 00 00     ...s..,.:.. ....

00000270 <pgm_Timers>:
     270:	76 02 46 00 45 00 00 00 02 33 88 44 00 01 44 00     v.F.E....3.D..D.
     280:	02 45 00 08 00 00 01 70 01 6e 00 01 35 00 01 00     .E.....p.n..5...
     290:	00 00 00 01 00 00 01 00 00 01 00 00 89 02 84 00     ................
     2a0:	81 00 ff 00 03 ff df 80 00 01 80 00 02 81 00 08     ................
     2b0:	81 00 10 90 01 6f 00 01 36 00 01 86 00 6f 00 20     .....o..6....o. 
     2c0:	36 00 20 81 00 40 00 00 a0 02 b2 00 b1 00 00 ff     6. ..@..........
     2d0:	02 33 88 b0 00 01 b0 00 02 b1 00 08 00 00 01 c0     .3..............
     2e0:	01 70 00 01 37 00 01 00 00 00 00 01 00 00 01 00     .p..7...........
     2f0:	00 01 00 00 b3 02 94 00 91 00 ff 00 03 ff df 90     ................
     300:	00 01 90 00 02 91 00 08 91 00 10 e0 01 71 00 01     .............q..
     310:	38 00 01 96 00 71 00 20 38 00 20 91 00 40 50 01     8....q. 8. ..@P.
     320:	ca 02 a4 00 a1 00 ff 00 03 ff df a0 00 01 a0 00     ................
     330:	02 a1 00 08 a1 00 10 10 02 72 00 01 39 00 01 a6     .........r..9...
     340:	00 72 00 20 39 00 20 a1 00 40 00 00 e1 02 24 01     .r. 9. ..@....$.
     350:	21 01 ff 00 03 ff df 20 01 01 20 01 02 21 01 08     !...... .. ..!..
     360:	21 01 10 40 02 73 00 01 3a 00 01 26 01 73 00 20     !..@.s..:..&.s. 
     370:	3a 00 20 21 01 40 00 00                             :. !.@..

00000378 <AVcc_MV>:
     378:	88 13                                               ..

0000037a <__c.2737>:
     37a:	4d 65 61 6e 3a 20 00                                Mean: .

00000381 <__c.2764>:
     381:	56 61 72 69 61 6e 63 65 3a 20 00                    Variance: .

0000038c <__c.2790>:
     38c:	45 78 69 74 69 6e 67 20 63 61 6c 63 20 76 61 72     Exiting calc var
     39c:	0a 00                                               ..

0000039e <__c.2788>:
     39e:	45 6e 74 65 72 69 6e 67 20 63 61 6c 63 20 76 61     Entering calc va
     3ae:	72 0a 00                                            r..

000003b1 <__c.2786>:
     3b1:	45 78 69 74 69 6e 67 20 63 61 6c 63 20 6d 65 61     Exiting calc mea
     3c1:	6e 0a 00                                            n..

000003c4 <__c.2784>:
     3c4:	45 6e 74 65 72 69 6e 67 20 63 61 6c 63 20 6d 65     Entering calc me
     3d4:	61 6e 0a 00                                         an..

000003d8 <__c.2892>:
     3d8:	25 64 00                                            %d.

000003db <c_ADXL335>:
     3db:	00 00 da 0e 14 00 14 00                             ........

000003e3 <c_IDG300>:
     3e3:	82 0f 6b 0f c8 00 14 00                             ..k.....

000003eb <HexChars>:
     3eb:	30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46     0123456789ABCDEF
	...

000003fc <TimerPrescaleFactor>:
     3fc:	00 00 01 00 08 00 40 00 00 01 00 04                 ......@.....

00000408 <TimerRTCPrescaleFactor>:
     408:	00 00 01 00 08 00 20 00 40 00 80 00 00 01 00 04     ...... .@.......

00000418 <__3bit_modes>:
     418:	00 01 ff ff 02 03 ff ff ff ff ff 05 ff ff ff 07     ................

00000428 <__2bit_modes>:
     428:	00 01 ff ff 02 03                                   ......

0000042e <__c.2501>:
     42e:	55 73 65 72 20 45 72 72 6f 72 3a 25 64 0a 00        User Error:%d..

0000043d <__c.2499>:
     43d:	57 65 62 62 6f 74 4c 69 62 20 45 72 72 6f 72 3a     WebbotLib Error:
     44d:	25 64 0a 00                                         %d..

00000451 <c_hw_uart>:
     451:	7c 1f 32 20 70 20 07 20 39 20 1d 20 00              |.2 p . 9 . .

0000045e <__ctors_start>:
     45e:	dc 20       	and	r13, r12

00000460 <__ctors_end>:
     460:	11 24       	eor	r1, r1
     462:	1f be       	out	0x3f, r1	; 63
     464:	cf ef       	ldi	r28, 0xFF	; 255
     466:	d1 e2       	ldi	r29, 0x21	; 33
     468:	de bf       	out	0x3e, r29	; 62
     46a:	cd bf       	out	0x3d, r28	; 61

0000046c <__do_copy_data>:
     46c:	12 e0       	ldi	r17, 0x02	; 2
     46e:	a0 e0       	ldi	r26, 0x00	; 0
     470:	b2 e0       	ldi	r27, 0x02	; 2
     472:	e0 eb       	ldi	r30, 0xB0	; 176
     474:	fc e4       	ldi	r31, 0x4C	; 76
     476:	02 c0       	rjmp	.+4      	; 0x47c <.do_copy_data_start>

00000478 <.do_copy_data_loop>:
     478:	05 90       	lpm	r0, Z+
     47a:	0d 92       	st	X+, r0

0000047c <.do_copy_data_start>:
     47c:	ac 36       	cpi	r26, 0x6C	; 108
     47e:	b1 07       	cpc	r27, r17
     480:	d9 f7       	brne	.-10     	; 0x478 <.do_copy_data_loop>

00000482 <__do_clear_bss>:
     482:	13 e0       	ldi	r17, 0x03	; 3
     484:	ac e6       	ldi	r26, 0x6C	; 108
     486:	b2 e0       	ldi	r27, 0x02	; 2
     488:	01 c0       	rjmp	.+2      	; 0x48c <.do_clear_bss_start>

0000048a <.do_clear_bss_loop>:
     48a:	1d 92       	st	X+, r1

0000048c <.do_clear_bss_start>:
     48c:	a8 34       	cpi	r26, 0x48	; 72
     48e:	b1 07       	cpc	r27, r17
     490:	e1 f7       	brne	.-8      	; 0x48a <.do_clear_bss_loop>

00000492 <__do_global_ctors>:
     492:	14 e0       	ldi	r17, 0x04	; 4
     494:	c0 e6       	ldi	r28, 0x60	; 96
     496:	d4 e0       	ldi	r29, 0x04	; 4
     498:	04 c0       	rjmp	.+8      	; 0x4a2 <.do_global_ctors_start>

0000049a <.do_global_ctors_loop>:
     49a:	22 97       	sbiw	r28, 0x02	; 2
     49c:	fe 01       	movw	r30, r28
     49e:	0e 94 52 26 	call	0x4ca4	; 0x4ca4 <__tablejump__>

000004a2 <.do_global_ctors_start>:
     4a2:	ce 35       	cpi	r28, 0x5E	; 94
     4a4:	d1 07       	cpc	r29, r17
     4a6:	c9 f7       	brne	.-14     	; 0x49a <.do_global_ctors_loop>
     4a8:	0e 94 cd 12 	call	0x259a	; 0x259a <main>
     4ac:	0c 94 d9 22 	jmp	0x45b2	; 0x45b2 <exit>

000004b0 <__bad_interrupt>:
     4b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000004b4 <__vector_23>:
		__timer5Compare,TIMSK5,TOIE5,TIFR5,TOV5,ICR5,TIMSK5,ICIE5,TIFR5,ICF5,TCCR5B,ICES5,null)
};
const uint8_t NUMBER_OF_TIMERS =  (sizeof(pgm_Timers)/sizeof(Timer));

#ifdef TIMER0_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER0_OVF_vect){
     4b4:	1f 92       	push	r1
     4b6:	0f 92       	push	r0
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	0f 92       	push	r0
     4bc:	11 24       	eor	r1, r1
     4be:	2f 93       	push	r18
     4c0:	3f 93       	push	r19
     4c2:	4f 93       	push	r20
     4c4:	5f 93       	push	r21
     4c6:	6f 93       	push	r22
     4c8:	7f 93       	push	r23
     4ca:	8f 93       	push	r24
     4cc:	9f 93       	push	r25
     4ce:	af 93       	push	r26
     4d0:	bf 93       	push	r27
     4d2:	ef 93       	push	r30
     4d4:	ff 93       	push	r31
     4d6:	df 93       	push	r29
     4d8:	cf 93       	push	r28
     4da:	cd b7       	in	r28, 0x3d	; 61
     4dc:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER0);
     4de:	80 e7       	ldi	r24, 0x70	; 112
     4e0:	92 e0       	ldi	r25, 0x02	; 2
     4e2:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__timer_overflowService>
}
     4e6:	cf 91       	pop	r28
     4e8:	df 91       	pop	r29
     4ea:	ff 91       	pop	r31
     4ec:	ef 91       	pop	r30
     4ee:	bf 91       	pop	r27
     4f0:	af 91       	pop	r26
     4f2:	9f 91       	pop	r25
     4f4:	8f 91       	pop	r24
     4f6:	7f 91       	pop	r23
     4f8:	6f 91       	pop	r22
     4fa:	5f 91       	pop	r21
     4fc:	4f 91       	pop	r20
     4fe:	3f 91       	pop	r19
     500:	2f 91       	pop	r18
     502:	0f 90       	pop	r0
     504:	0f be       	out	0x3f, r0	; 63
     506:	0f 90       	pop	r0
     508:	1f 90       	pop	r1
     50a:	18 95       	reti

0000050c <__vector_21>:
#else
# error Missing vector definition
#endif

#ifdef TIMER0_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER0_COMPA_vect){
     50c:	1f 92       	push	r1
     50e:	0f 92       	push	r0
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	0f 92       	push	r0
     514:	11 24       	eor	r1, r1
     516:	2f 93       	push	r18
     518:	3f 93       	push	r19
     51a:	4f 93       	push	r20
     51c:	5f 93       	push	r21
     51e:	6f 93       	push	r22
     520:	7f 93       	push	r23
     522:	8f 93       	push	r24
     524:	9f 93       	push	r25
     526:	af 93       	push	r26
     528:	bf 93       	push	r27
     52a:	ef 93       	push	r30
     52c:	ff 93       	push	r31
     52e:	df 93       	push	r29
     530:	cf 93       	push	r28
     532:	cd b7       	in	r28, 0x3d	; 61
     534:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER0_COMPAREA);
     536:	80 e7       	ldi	r24, 0x70	; 112
     538:	91 e0       	ldi	r25, 0x01	; 1
     53a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     53e:	cf 91       	pop	r28
     540:	df 91       	pop	r29
     542:	ff 91       	pop	r31
     544:	ef 91       	pop	r30
     546:	bf 91       	pop	r27
     548:	af 91       	pop	r26
     54a:	9f 91       	pop	r25
     54c:	8f 91       	pop	r24
     54e:	7f 91       	pop	r23
     550:	6f 91       	pop	r22
     552:	5f 91       	pop	r21
     554:	4f 91       	pop	r20
     556:	3f 91       	pop	r19
     558:	2f 91       	pop	r18
     55a:	0f 90       	pop	r0
     55c:	0f be       	out	0x3f, r0	; 63
     55e:	0f 90       	pop	r0
     560:	1f 90       	pop	r1
     562:	18 95       	reti

00000564 <__vector_22>:
#else
# error Missing vector definition
#endif

#ifdef TIMER0_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER0_COMPB_vect){
     564:	1f 92       	push	r1
     566:	0f 92       	push	r0
     568:	0f b6       	in	r0, 0x3f	; 63
     56a:	0f 92       	push	r0
     56c:	11 24       	eor	r1, r1
     56e:	2f 93       	push	r18
     570:	3f 93       	push	r19
     572:	4f 93       	push	r20
     574:	5f 93       	push	r21
     576:	6f 93       	push	r22
     578:	7f 93       	push	r23
     57a:	8f 93       	push	r24
     57c:	9f 93       	push	r25
     57e:	af 93       	push	r26
     580:	bf 93       	push	r27
     582:	ef 93       	push	r30
     584:	ff 93       	push	r31
     586:	df 93       	push	r29
     588:	cf 93       	push	r28
     58a:	cd b7       	in	r28, 0x3d	; 61
     58c:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER0_COMPAREB);
     58e:	80 e8       	ldi	r24, 0x80	; 128
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     596:	cf 91       	pop	r28
     598:	df 91       	pop	r29
     59a:	ff 91       	pop	r31
     59c:	ef 91       	pop	r30
     59e:	bf 91       	pop	r27
     5a0:	af 91       	pop	r26
     5a2:	9f 91       	pop	r25
     5a4:	8f 91       	pop	r24
     5a6:	7f 91       	pop	r23
     5a8:	6f 91       	pop	r22
     5aa:	5f 91       	pop	r21
     5ac:	4f 91       	pop	r20
     5ae:	3f 91       	pop	r19
     5b0:	2f 91       	pop	r18
     5b2:	0f 90       	pop	r0
     5b4:	0f be       	out	0x3f, r0	; 63
     5b6:	0f 90       	pop	r0
     5b8:	1f 90       	pop	r1
     5ba:	18 95       	reti

000005bc <__vector_20>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER1_OVF_vect){
     5bc:	1f 92       	push	r1
     5be:	0f 92       	push	r0
     5c0:	0f b6       	in	r0, 0x3f	; 63
     5c2:	0f 92       	push	r0
     5c4:	11 24       	eor	r1, r1
     5c6:	2f 93       	push	r18
     5c8:	3f 93       	push	r19
     5ca:	4f 93       	push	r20
     5cc:	5f 93       	push	r21
     5ce:	6f 93       	push	r22
     5d0:	7f 93       	push	r23
     5d2:	8f 93       	push	r24
     5d4:	9f 93       	push	r25
     5d6:	af 93       	push	r26
     5d8:	bf 93       	push	r27
     5da:	ef 93       	push	r30
     5dc:	ff 93       	push	r31
     5de:	df 93       	push	r29
     5e0:	cf 93       	push	r28
     5e2:	cd b7       	in	r28, 0x3d	; 61
     5e4:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER1);
     5e6:	8c e9       	ldi	r24, 0x9C	; 156
     5e8:	92 e0       	ldi	r25, 0x02	; 2
     5ea:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__timer_overflowService>
}
     5ee:	cf 91       	pop	r28
     5f0:	df 91       	pop	r29
     5f2:	ff 91       	pop	r31
     5f4:	ef 91       	pop	r30
     5f6:	bf 91       	pop	r27
     5f8:	af 91       	pop	r26
     5fa:	9f 91       	pop	r25
     5fc:	8f 91       	pop	r24
     5fe:	7f 91       	pop	r23
     600:	6f 91       	pop	r22
     602:	5f 91       	pop	r21
     604:	4f 91       	pop	r20
     606:	3f 91       	pop	r19
     608:	2f 91       	pop	r18
     60a:	0f 90       	pop	r0
     60c:	0f be       	out	0x3f, r0	; 63
     60e:	0f 90       	pop	r0
     610:	1f 90       	pop	r1
     612:	18 95       	reti

00000614 <__vector_16>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER1_CAPT_vect){
     614:	1f 92       	push	r1
     616:	0f 92       	push	r0
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	0f 92       	push	r0
     61c:	11 24       	eor	r1, r1
     61e:	2f 93       	push	r18
     620:	3f 93       	push	r19
     622:	4f 93       	push	r20
     624:	5f 93       	push	r21
     626:	6f 93       	push	r22
     628:	7f 93       	push	r23
     62a:	8f 93       	push	r24
     62c:	9f 93       	push	r25
     62e:	af 93       	push	r26
     630:	bf 93       	push	r27
     632:	ef 93       	push	r30
     634:	ff 93       	push	r31
     636:	df 93       	push	r29
     638:	cf 93       	push	r28
     63a:	cd b7       	in	r28, 0x3d	; 61
     63c:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER1);
     63e:	8c e9       	ldi	r24, 0x9C	; 156
     640:	92 e0       	ldi	r25, 0x02	; 2
     642:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__timer_captureService>
}
     646:	cf 91       	pop	r28
     648:	df 91       	pop	r29
     64a:	ff 91       	pop	r31
     64c:	ef 91       	pop	r30
     64e:	bf 91       	pop	r27
     650:	af 91       	pop	r26
     652:	9f 91       	pop	r25
     654:	8f 91       	pop	r24
     656:	7f 91       	pop	r23
     658:	6f 91       	pop	r22
     65a:	5f 91       	pop	r21
     65c:	4f 91       	pop	r20
     65e:	3f 91       	pop	r19
     660:	2f 91       	pop	r18
     662:	0f 90       	pop	r0
     664:	0f be       	out	0x3f, r0	; 63
     666:	0f 90       	pop	r0
     668:	1f 90       	pop	r1
     66a:	18 95       	reti

0000066c <__vector_17>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER1_COMPA_vect){
     66c:	1f 92       	push	r1
     66e:	0f 92       	push	r0
     670:	0f b6       	in	r0, 0x3f	; 63
     672:	0f 92       	push	r0
     674:	11 24       	eor	r1, r1
     676:	2f 93       	push	r18
     678:	3f 93       	push	r19
     67a:	4f 93       	push	r20
     67c:	5f 93       	push	r21
     67e:	6f 93       	push	r22
     680:	7f 93       	push	r23
     682:	8f 93       	push	r24
     684:	9f 93       	push	r25
     686:	af 93       	push	r26
     688:	bf 93       	push	r27
     68a:	ef 93       	push	r30
     68c:	ff 93       	push	r31
     68e:	df 93       	push	r29
     690:	cf 93       	push	r28
     692:	cd b7       	in	r28, 0x3d	; 61
     694:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER1_COMPAREA);
     696:	80 e9       	ldi	r24, 0x90	; 144
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     69e:	cf 91       	pop	r28
     6a0:	df 91       	pop	r29
     6a2:	ff 91       	pop	r31
     6a4:	ef 91       	pop	r30
     6a6:	bf 91       	pop	r27
     6a8:	af 91       	pop	r26
     6aa:	9f 91       	pop	r25
     6ac:	8f 91       	pop	r24
     6ae:	7f 91       	pop	r23
     6b0:	6f 91       	pop	r22
     6b2:	5f 91       	pop	r21
     6b4:	4f 91       	pop	r20
     6b6:	3f 91       	pop	r19
     6b8:	2f 91       	pop	r18
     6ba:	0f 90       	pop	r0
     6bc:	0f be       	out	0x3f, r0	; 63
     6be:	0f 90       	pop	r0
     6c0:	1f 90       	pop	r1
     6c2:	18 95       	reti

000006c4 <__vector_18>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER1_COMPB_vect){
     6c4:	1f 92       	push	r1
     6c6:	0f 92       	push	r0
     6c8:	0f b6       	in	r0, 0x3f	; 63
     6ca:	0f 92       	push	r0
     6cc:	11 24       	eor	r1, r1
     6ce:	2f 93       	push	r18
     6d0:	3f 93       	push	r19
     6d2:	4f 93       	push	r20
     6d4:	5f 93       	push	r21
     6d6:	6f 93       	push	r22
     6d8:	7f 93       	push	r23
     6da:	8f 93       	push	r24
     6dc:	9f 93       	push	r25
     6de:	af 93       	push	r26
     6e0:	bf 93       	push	r27
     6e2:	ef 93       	push	r30
     6e4:	ff 93       	push	r31
     6e6:	df 93       	push	r29
     6e8:	cf 93       	push	r28
     6ea:	cd b7       	in	r28, 0x3d	; 61
     6ec:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER1_COMPAREB);
     6ee:	80 ea       	ldi	r24, 0xA0	; 160
     6f0:	91 e0       	ldi	r25, 0x01	; 1
     6f2:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     6f6:	cf 91       	pop	r28
     6f8:	df 91       	pop	r29
     6fa:	ff 91       	pop	r31
     6fc:	ef 91       	pop	r30
     6fe:	bf 91       	pop	r27
     700:	af 91       	pop	r26
     702:	9f 91       	pop	r25
     704:	8f 91       	pop	r24
     706:	7f 91       	pop	r23
     708:	6f 91       	pop	r22
     70a:	5f 91       	pop	r21
     70c:	4f 91       	pop	r20
     70e:	3f 91       	pop	r19
     710:	2f 91       	pop	r18
     712:	0f 90       	pop	r0
     714:	0f be       	out	0x3f, r0	; 63
     716:	0f 90       	pop	r0
     718:	1f 90       	pop	r1
     71a:	18 95       	reti

0000071c <__vector_19>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER1_COMPC_vect){
     71c:	1f 92       	push	r1
     71e:	0f 92       	push	r0
     720:	0f b6       	in	r0, 0x3f	; 63
     722:	0f 92       	push	r0
     724:	11 24       	eor	r1, r1
     726:	2f 93       	push	r18
     728:	3f 93       	push	r19
     72a:	4f 93       	push	r20
     72c:	5f 93       	push	r21
     72e:	6f 93       	push	r22
     730:	7f 93       	push	r23
     732:	8f 93       	push	r24
     734:	9f 93       	push	r25
     736:	af 93       	push	r26
     738:	bf 93       	push	r27
     73a:	ef 93       	push	r30
     73c:	ff 93       	push	r31
     73e:	df 93       	push	r29
     740:	cf 93       	push	r28
     742:	cd b7       	in	r28, 0x3d	; 61
     744:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER1_COMPAREC);
     746:	80 eb       	ldi	r24, 0xB0	; 176
     748:	91 e0       	ldi	r25, 0x01	; 1
     74a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     74e:	cf 91       	pop	r28
     750:	df 91       	pop	r29
     752:	ff 91       	pop	r31
     754:	ef 91       	pop	r30
     756:	bf 91       	pop	r27
     758:	af 91       	pop	r26
     75a:	9f 91       	pop	r25
     75c:	8f 91       	pop	r24
     75e:	7f 91       	pop	r23
     760:	6f 91       	pop	r22
     762:	5f 91       	pop	r21
     764:	4f 91       	pop	r20
     766:	3f 91       	pop	r19
     768:	2f 91       	pop	r18
     76a:	0f 90       	pop	r0
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	0f 90       	pop	r0
     770:	1f 90       	pop	r1
     772:	18 95       	reti

00000774 <__vector_15>:
#else
# error Missing vector definition
#endif

#ifdef TIMER2_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER2_OVF_vect){
     774:	1f 92       	push	r1
     776:	0f 92       	push	r0
     778:	0f b6       	in	r0, 0x3f	; 63
     77a:	0f 92       	push	r0
     77c:	11 24       	eor	r1, r1
     77e:	2f 93       	push	r18
     780:	3f 93       	push	r19
     782:	4f 93       	push	r20
     784:	5f 93       	push	r21
     786:	6f 93       	push	r22
     788:	7f 93       	push	r23
     78a:	8f 93       	push	r24
     78c:	9f 93       	push	r25
     78e:	af 93       	push	r26
     790:	bf 93       	push	r27
     792:	ef 93       	push	r30
     794:	ff 93       	push	r31
     796:	df 93       	push	r29
     798:	cf 93       	push	r28
     79a:	cd b7       	in	r28, 0x3d	; 61
     79c:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER2);
     79e:	88 ec       	ldi	r24, 0xC8	; 200
     7a0:	92 e0       	ldi	r25, 0x02	; 2
     7a2:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__timer_overflowService>
}
     7a6:	cf 91       	pop	r28
     7a8:	df 91       	pop	r29
     7aa:	ff 91       	pop	r31
     7ac:	ef 91       	pop	r30
     7ae:	bf 91       	pop	r27
     7b0:	af 91       	pop	r26
     7b2:	9f 91       	pop	r25
     7b4:	8f 91       	pop	r24
     7b6:	7f 91       	pop	r23
     7b8:	6f 91       	pop	r22
     7ba:	5f 91       	pop	r21
     7bc:	4f 91       	pop	r20
     7be:	3f 91       	pop	r19
     7c0:	2f 91       	pop	r18
     7c2:	0f 90       	pop	r0
     7c4:	0f be       	out	0x3f, r0	; 63
     7c6:	0f 90       	pop	r0
     7c8:	1f 90       	pop	r1
     7ca:	18 95       	reti

000007cc <__vector_13>:
#else
# error Missing vector definition
#endif

#ifdef TIMER2_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER2_COMPA_vect){
     7cc:	1f 92       	push	r1
     7ce:	0f 92       	push	r0
     7d0:	0f b6       	in	r0, 0x3f	; 63
     7d2:	0f 92       	push	r0
     7d4:	11 24       	eor	r1, r1
     7d6:	2f 93       	push	r18
     7d8:	3f 93       	push	r19
     7da:	4f 93       	push	r20
     7dc:	5f 93       	push	r21
     7de:	6f 93       	push	r22
     7e0:	7f 93       	push	r23
     7e2:	8f 93       	push	r24
     7e4:	9f 93       	push	r25
     7e6:	af 93       	push	r26
     7e8:	bf 93       	push	r27
     7ea:	ef 93       	push	r30
     7ec:	ff 93       	push	r31
     7ee:	df 93       	push	r29
     7f0:	cf 93       	push	r28
     7f2:	cd b7       	in	r28, 0x3d	; 61
     7f4:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER2_COMPAREA);
     7f6:	80 ec       	ldi	r24, 0xC0	; 192
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     7fe:	cf 91       	pop	r28
     800:	df 91       	pop	r29
     802:	ff 91       	pop	r31
     804:	ef 91       	pop	r30
     806:	bf 91       	pop	r27
     808:	af 91       	pop	r26
     80a:	9f 91       	pop	r25
     80c:	8f 91       	pop	r24
     80e:	7f 91       	pop	r23
     810:	6f 91       	pop	r22
     812:	5f 91       	pop	r21
     814:	4f 91       	pop	r20
     816:	3f 91       	pop	r19
     818:	2f 91       	pop	r18
     81a:	0f 90       	pop	r0
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	0f 90       	pop	r0
     820:	1f 90       	pop	r1
     822:	18 95       	reti

00000824 <__vector_14>:
#else
# error Missing vector definition
#endif

#ifdef TIMER2_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER2_COMPB_vect){
     824:	1f 92       	push	r1
     826:	0f 92       	push	r0
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	0f 92       	push	r0
     82c:	11 24       	eor	r1, r1
     82e:	2f 93       	push	r18
     830:	3f 93       	push	r19
     832:	4f 93       	push	r20
     834:	5f 93       	push	r21
     836:	6f 93       	push	r22
     838:	7f 93       	push	r23
     83a:	8f 93       	push	r24
     83c:	9f 93       	push	r25
     83e:	af 93       	push	r26
     840:	bf 93       	push	r27
     842:	ef 93       	push	r30
     844:	ff 93       	push	r31
     846:	df 93       	push	r29
     848:	cf 93       	push	r28
     84a:	cd b7       	in	r28, 0x3d	; 61
     84c:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER2_COMPAREB);
     84e:	80 ed       	ldi	r24, 0xD0	; 208
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     856:	cf 91       	pop	r28
     858:	df 91       	pop	r29
     85a:	ff 91       	pop	r31
     85c:	ef 91       	pop	r30
     85e:	bf 91       	pop	r27
     860:	af 91       	pop	r26
     862:	9f 91       	pop	r25
     864:	8f 91       	pop	r24
     866:	7f 91       	pop	r23
     868:	6f 91       	pop	r22
     86a:	5f 91       	pop	r21
     86c:	4f 91       	pop	r20
     86e:	3f 91       	pop	r19
     870:	2f 91       	pop	r18
     872:	0f 90       	pop	r0
     874:	0f be       	out	0x3f, r0	; 63
     876:	0f 90       	pop	r0
     878:	1f 90       	pop	r1
     87a:	18 95       	reti

0000087c <__vector_35>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER3_OVF_vect){
     87c:	1f 92       	push	r1
     87e:	0f 92       	push	r0
     880:	0f b6       	in	r0, 0x3f	; 63
     882:	0f 92       	push	r0
     884:	11 24       	eor	r1, r1
     886:	2f 93       	push	r18
     888:	3f 93       	push	r19
     88a:	4f 93       	push	r20
     88c:	5f 93       	push	r21
     88e:	6f 93       	push	r22
     890:	7f 93       	push	r23
     892:	8f 93       	push	r24
     894:	9f 93       	push	r25
     896:	af 93       	push	r26
     898:	bf 93       	push	r27
     89a:	ef 93       	push	r30
     89c:	ff 93       	push	r31
     89e:	df 93       	push	r29
     8a0:	cf 93       	push	r28
     8a2:	cd b7       	in	r28, 0x3d	; 61
     8a4:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER3);
     8a6:	84 ef       	ldi	r24, 0xF4	; 244
     8a8:	92 e0       	ldi	r25, 0x02	; 2
     8aa:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__timer_overflowService>
}
     8ae:	cf 91       	pop	r28
     8b0:	df 91       	pop	r29
     8b2:	ff 91       	pop	r31
     8b4:	ef 91       	pop	r30
     8b6:	bf 91       	pop	r27
     8b8:	af 91       	pop	r26
     8ba:	9f 91       	pop	r25
     8bc:	8f 91       	pop	r24
     8be:	7f 91       	pop	r23
     8c0:	6f 91       	pop	r22
     8c2:	5f 91       	pop	r21
     8c4:	4f 91       	pop	r20
     8c6:	3f 91       	pop	r19
     8c8:	2f 91       	pop	r18
     8ca:	0f 90       	pop	r0
     8cc:	0f be       	out	0x3f, r0	; 63
     8ce:	0f 90       	pop	r0
     8d0:	1f 90       	pop	r1
     8d2:	18 95       	reti

000008d4 <__vector_31>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER3_CAPT_vect){
     8d4:	1f 92       	push	r1
     8d6:	0f 92       	push	r0
     8d8:	0f b6       	in	r0, 0x3f	; 63
     8da:	0f 92       	push	r0
     8dc:	11 24       	eor	r1, r1
     8de:	2f 93       	push	r18
     8e0:	3f 93       	push	r19
     8e2:	4f 93       	push	r20
     8e4:	5f 93       	push	r21
     8e6:	6f 93       	push	r22
     8e8:	7f 93       	push	r23
     8ea:	8f 93       	push	r24
     8ec:	9f 93       	push	r25
     8ee:	af 93       	push	r26
     8f0:	bf 93       	push	r27
     8f2:	ef 93       	push	r30
     8f4:	ff 93       	push	r31
     8f6:	df 93       	push	r29
     8f8:	cf 93       	push	r28
     8fa:	cd b7       	in	r28, 0x3d	; 61
     8fc:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER3);
     8fe:	84 ef       	ldi	r24, 0xF4	; 244
     900:	92 e0       	ldi	r25, 0x02	; 2
     902:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__timer_captureService>
}
     906:	cf 91       	pop	r28
     908:	df 91       	pop	r29
     90a:	ff 91       	pop	r31
     90c:	ef 91       	pop	r30
     90e:	bf 91       	pop	r27
     910:	af 91       	pop	r26
     912:	9f 91       	pop	r25
     914:	8f 91       	pop	r24
     916:	7f 91       	pop	r23
     918:	6f 91       	pop	r22
     91a:	5f 91       	pop	r21
     91c:	4f 91       	pop	r20
     91e:	3f 91       	pop	r19
     920:	2f 91       	pop	r18
     922:	0f 90       	pop	r0
     924:	0f be       	out	0x3f, r0	; 63
     926:	0f 90       	pop	r0
     928:	1f 90       	pop	r1
     92a:	18 95       	reti

0000092c <__vector_32>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER3_COMPA_vect){
     92c:	1f 92       	push	r1
     92e:	0f 92       	push	r0
     930:	0f b6       	in	r0, 0x3f	; 63
     932:	0f 92       	push	r0
     934:	11 24       	eor	r1, r1
     936:	2f 93       	push	r18
     938:	3f 93       	push	r19
     93a:	4f 93       	push	r20
     93c:	5f 93       	push	r21
     93e:	6f 93       	push	r22
     940:	7f 93       	push	r23
     942:	8f 93       	push	r24
     944:	9f 93       	push	r25
     946:	af 93       	push	r26
     948:	bf 93       	push	r27
     94a:	ef 93       	push	r30
     94c:	ff 93       	push	r31
     94e:	df 93       	push	r29
     950:	cf 93       	push	r28
     952:	cd b7       	in	r28, 0x3d	; 61
     954:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER3_COMPAREA);
     956:	80 ee       	ldi	r24, 0xE0	; 224
     958:	91 e0       	ldi	r25, 0x01	; 1
     95a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     95e:	cf 91       	pop	r28
     960:	df 91       	pop	r29
     962:	ff 91       	pop	r31
     964:	ef 91       	pop	r30
     966:	bf 91       	pop	r27
     968:	af 91       	pop	r26
     96a:	9f 91       	pop	r25
     96c:	8f 91       	pop	r24
     96e:	7f 91       	pop	r23
     970:	6f 91       	pop	r22
     972:	5f 91       	pop	r21
     974:	4f 91       	pop	r20
     976:	3f 91       	pop	r19
     978:	2f 91       	pop	r18
     97a:	0f 90       	pop	r0
     97c:	0f be       	out	0x3f, r0	; 63
     97e:	0f 90       	pop	r0
     980:	1f 90       	pop	r1
     982:	18 95       	reti

00000984 <__vector_33>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER3_COMPB_vect){
     984:	1f 92       	push	r1
     986:	0f 92       	push	r0
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	0f 92       	push	r0
     98c:	11 24       	eor	r1, r1
     98e:	2f 93       	push	r18
     990:	3f 93       	push	r19
     992:	4f 93       	push	r20
     994:	5f 93       	push	r21
     996:	6f 93       	push	r22
     998:	7f 93       	push	r23
     99a:	8f 93       	push	r24
     99c:	9f 93       	push	r25
     99e:	af 93       	push	r26
     9a0:	bf 93       	push	r27
     9a2:	ef 93       	push	r30
     9a4:	ff 93       	push	r31
     9a6:	df 93       	push	r29
     9a8:	cf 93       	push	r28
     9aa:	cd b7       	in	r28, 0x3d	; 61
     9ac:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER3_COMPAREB);
     9ae:	80 ef       	ldi	r24, 0xF0	; 240
     9b0:	91 e0       	ldi	r25, 0x01	; 1
     9b2:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     9b6:	cf 91       	pop	r28
     9b8:	df 91       	pop	r29
     9ba:	ff 91       	pop	r31
     9bc:	ef 91       	pop	r30
     9be:	bf 91       	pop	r27
     9c0:	af 91       	pop	r26
     9c2:	9f 91       	pop	r25
     9c4:	8f 91       	pop	r24
     9c6:	7f 91       	pop	r23
     9c8:	6f 91       	pop	r22
     9ca:	5f 91       	pop	r21
     9cc:	4f 91       	pop	r20
     9ce:	3f 91       	pop	r19
     9d0:	2f 91       	pop	r18
     9d2:	0f 90       	pop	r0
     9d4:	0f be       	out	0x3f, r0	; 63
     9d6:	0f 90       	pop	r0
     9d8:	1f 90       	pop	r1
     9da:	18 95       	reti

000009dc <__vector_34>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER3_COMPC_vect){
     9dc:	1f 92       	push	r1
     9de:	0f 92       	push	r0
     9e0:	0f b6       	in	r0, 0x3f	; 63
     9e2:	0f 92       	push	r0
     9e4:	11 24       	eor	r1, r1
     9e6:	2f 93       	push	r18
     9e8:	3f 93       	push	r19
     9ea:	4f 93       	push	r20
     9ec:	5f 93       	push	r21
     9ee:	6f 93       	push	r22
     9f0:	7f 93       	push	r23
     9f2:	8f 93       	push	r24
     9f4:	9f 93       	push	r25
     9f6:	af 93       	push	r26
     9f8:	bf 93       	push	r27
     9fa:	ef 93       	push	r30
     9fc:	ff 93       	push	r31
     9fe:	df 93       	push	r29
     a00:	cf 93       	push	r28
     a02:	cd b7       	in	r28, 0x3d	; 61
     a04:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER3_COMPAREC);
     a06:	80 e0       	ldi	r24, 0x00	; 0
     a08:	92 e0       	ldi	r25, 0x02	; 2
     a0a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     a0e:	cf 91       	pop	r28
     a10:	df 91       	pop	r29
     a12:	ff 91       	pop	r31
     a14:	ef 91       	pop	r30
     a16:	bf 91       	pop	r27
     a18:	af 91       	pop	r26
     a1a:	9f 91       	pop	r25
     a1c:	8f 91       	pop	r24
     a1e:	7f 91       	pop	r23
     a20:	6f 91       	pop	r22
     a22:	5f 91       	pop	r21
     a24:	4f 91       	pop	r20
     a26:	3f 91       	pop	r19
     a28:	2f 91       	pop	r18
     a2a:	0f 90       	pop	r0
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	0f 90       	pop	r0
     a30:	1f 90       	pop	r1
     a32:	18 95       	reti

00000a34 <__vector_45>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER4_OVF_vect){
     a34:	1f 92       	push	r1
     a36:	0f 92       	push	r0
     a38:	0f b6       	in	r0, 0x3f	; 63
     a3a:	0f 92       	push	r0
     a3c:	11 24       	eor	r1, r1
     a3e:	2f 93       	push	r18
     a40:	3f 93       	push	r19
     a42:	4f 93       	push	r20
     a44:	5f 93       	push	r21
     a46:	6f 93       	push	r22
     a48:	7f 93       	push	r23
     a4a:	8f 93       	push	r24
     a4c:	9f 93       	push	r25
     a4e:	af 93       	push	r26
     a50:	bf 93       	push	r27
     a52:	ef 93       	push	r30
     a54:	ff 93       	push	r31
     a56:	df 93       	push	r29
     a58:	cf 93       	push	r28
     a5a:	cd b7       	in	r28, 0x3d	; 61
     a5c:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER4);
     a5e:	80 e2       	ldi	r24, 0x20	; 32
     a60:	93 e0       	ldi	r25, 0x03	; 3
     a62:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__timer_overflowService>
}
     a66:	cf 91       	pop	r28
     a68:	df 91       	pop	r29
     a6a:	ff 91       	pop	r31
     a6c:	ef 91       	pop	r30
     a6e:	bf 91       	pop	r27
     a70:	af 91       	pop	r26
     a72:	9f 91       	pop	r25
     a74:	8f 91       	pop	r24
     a76:	7f 91       	pop	r23
     a78:	6f 91       	pop	r22
     a7a:	5f 91       	pop	r21
     a7c:	4f 91       	pop	r20
     a7e:	3f 91       	pop	r19
     a80:	2f 91       	pop	r18
     a82:	0f 90       	pop	r0
     a84:	0f be       	out	0x3f, r0	; 63
     a86:	0f 90       	pop	r0
     a88:	1f 90       	pop	r1
     a8a:	18 95       	reti

00000a8c <__vector_41>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER4_CAPT_vect){
     a8c:	1f 92       	push	r1
     a8e:	0f 92       	push	r0
     a90:	0f b6       	in	r0, 0x3f	; 63
     a92:	0f 92       	push	r0
     a94:	11 24       	eor	r1, r1
     a96:	2f 93       	push	r18
     a98:	3f 93       	push	r19
     a9a:	4f 93       	push	r20
     a9c:	5f 93       	push	r21
     a9e:	6f 93       	push	r22
     aa0:	7f 93       	push	r23
     aa2:	8f 93       	push	r24
     aa4:	9f 93       	push	r25
     aa6:	af 93       	push	r26
     aa8:	bf 93       	push	r27
     aaa:	ef 93       	push	r30
     aac:	ff 93       	push	r31
     aae:	df 93       	push	r29
     ab0:	cf 93       	push	r28
     ab2:	cd b7       	in	r28, 0x3d	; 61
     ab4:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER4);
     ab6:	80 e2       	ldi	r24, 0x20	; 32
     ab8:	93 e0       	ldi	r25, 0x03	; 3
     aba:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__timer_captureService>
}
     abe:	cf 91       	pop	r28
     ac0:	df 91       	pop	r29
     ac2:	ff 91       	pop	r31
     ac4:	ef 91       	pop	r30
     ac6:	bf 91       	pop	r27
     ac8:	af 91       	pop	r26
     aca:	9f 91       	pop	r25
     acc:	8f 91       	pop	r24
     ace:	7f 91       	pop	r23
     ad0:	6f 91       	pop	r22
     ad2:	5f 91       	pop	r21
     ad4:	4f 91       	pop	r20
     ad6:	3f 91       	pop	r19
     ad8:	2f 91       	pop	r18
     ada:	0f 90       	pop	r0
     adc:	0f be       	out	0x3f, r0	; 63
     ade:	0f 90       	pop	r0
     ae0:	1f 90       	pop	r1
     ae2:	18 95       	reti

00000ae4 <__vector_42>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER4_COMPA_vect){
     ae4:	1f 92       	push	r1
     ae6:	0f 92       	push	r0
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	0f 92       	push	r0
     aec:	11 24       	eor	r1, r1
     aee:	2f 93       	push	r18
     af0:	3f 93       	push	r19
     af2:	4f 93       	push	r20
     af4:	5f 93       	push	r21
     af6:	6f 93       	push	r22
     af8:	7f 93       	push	r23
     afa:	8f 93       	push	r24
     afc:	9f 93       	push	r25
     afe:	af 93       	push	r26
     b00:	bf 93       	push	r27
     b02:	ef 93       	push	r30
     b04:	ff 93       	push	r31
     b06:	df 93       	push	r29
     b08:	cf 93       	push	r28
     b0a:	cd b7       	in	r28, 0x3d	; 61
     b0c:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER4_COMPAREA);
     b0e:	80 e1       	ldi	r24, 0x10	; 16
     b10:	92 e0       	ldi	r25, 0x02	; 2
     b12:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     b16:	cf 91       	pop	r28
     b18:	df 91       	pop	r29
     b1a:	ff 91       	pop	r31
     b1c:	ef 91       	pop	r30
     b1e:	bf 91       	pop	r27
     b20:	af 91       	pop	r26
     b22:	9f 91       	pop	r25
     b24:	8f 91       	pop	r24
     b26:	7f 91       	pop	r23
     b28:	6f 91       	pop	r22
     b2a:	5f 91       	pop	r21
     b2c:	4f 91       	pop	r20
     b2e:	3f 91       	pop	r19
     b30:	2f 91       	pop	r18
     b32:	0f 90       	pop	r0
     b34:	0f be       	out	0x3f, r0	; 63
     b36:	0f 90       	pop	r0
     b38:	1f 90       	pop	r1
     b3a:	18 95       	reti

00000b3c <__vector_43>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER4_COMPB_vect){
     b3c:	1f 92       	push	r1
     b3e:	0f 92       	push	r0
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	0f 92       	push	r0
     b44:	11 24       	eor	r1, r1
     b46:	2f 93       	push	r18
     b48:	3f 93       	push	r19
     b4a:	4f 93       	push	r20
     b4c:	5f 93       	push	r21
     b4e:	6f 93       	push	r22
     b50:	7f 93       	push	r23
     b52:	8f 93       	push	r24
     b54:	9f 93       	push	r25
     b56:	af 93       	push	r26
     b58:	bf 93       	push	r27
     b5a:	ef 93       	push	r30
     b5c:	ff 93       	push	r31
     b5e:	df 93       	push	r29
     b60:	cf 93       	push	r28
     b62:	cd b7       	in	r28, 0x3d	; 61
     b64:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER4_COMPAREB);
     b66:	80 e2       	ldi	r24, 0x20	; 32
     b68:	92 e0       	ldi	r25, 0x02	; 2
     b6a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     b6e:	cf 91       	pop	r28
     b70:	df 91       	pop	r29
     b72:	ff 91       	pop	r31
     b74:	ef 91       	pop	r30
     b76:	bf 91       	pop	r27
     b78:	af 91       	pop	r26
     b7a:	9f 91       	pop	r25
     b7c:	8f 91       	pop	r24
     b7e:	7f 91       	pop	r23
     b80:	6f 91       	pop	r22
     b82:	5f 91       	pop	r21
     b84:	4f 91       	pop	r20
     b86:	3f 91       	pop	r19
     b88:	2f 91       	pop	r18
     b8a:	0f 90       	pop	r0
     b8c:	0f be       	out	0x3f, r0	; 63
     b8e:	0f 90       	pop	r0
     b90:	1f 90       	pop	r1
     b92:	18 95       	reti

00000b94 <__vector_44>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER4_COMPC_vect){
     b94:	1f 92       	push	r1
     b96:	0f 92       	push	r0
     b98:	0f b6       	in	r0, 0x3f	; 63
     b9a:	0f 92       	push	r0
     b9c:	11 24       	eor	r1, r1
     b9e:	2f 93       	push	r18
     ba0:	3f 93       	push	r19
     ba2:	4f 93       	push	r20
     ba4:	5f 93       	push	r21
     ba6:	6f 93       	push	r22
     ba8:	7f 93       	push	r23
     baa:	8f 93       	push	r24
     bac:	9f 93       	push	r25
     bae:	af 93       	push	r26
     bb0:	bf 93       	push	r27
     bb2:	ef 93       	push	r30
     bb4:	ff 93       	push	r31
     bb6:	df 93       	push	r29
     bb8:	cf 93       	push	r28
     bba:	cd b7       	in	r28, 0x3d	; 61
     bbc:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER4_COMPAREC);
     bbe:	80 e3       	ldi	r24, 0x30	; 48
     bc0:	92 e0       	ldi	r25, 0x02	; 2
     bc2:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     bc6:	cf 91       	pop	r28
     bc8:	df 91       	pop	r29
     bca:	ff 91       	pop	r31
     bcc:	ef 91       	pop	r30
     bce:	bf 91       	pop	r27
     bd0:	af 91       	pop	r26
     bd2:	9f 91       	pop	r25
     bd4:	8f 91       	pop	r24
     bd6:	7f 91       	pop	r23
     bd8:	6f 91       	pop	r22
     bda:	5f 91       	pop	r21
     bdc:	4f 91       	pop	r20
     bde:	3f 91       	pop	r19
     be0:	2f 91       	pop	r18
     be2:	0f 90       	pop	r0
     be4:	0f be       	out	0x3f, r0	; 63
     be6:	0f 90       	pop	r0
     be8:	1f 90       	pop	r1
     bea:	18 95       	reti

00000bec <__vector_50>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER5_OVF_vect){
     bec:	1f 92       	push	r1
     bee:	0f 92       	push	r0
     bf0:	0f b6       	in	r0, 0x3f	; 63
     bf2:	0f 92       	push	r0
     bf4:	11 24       	eor	r1, r1
     bf6:	2f 93       	push	r18
     bf8:	3f 93       	push	r19
     bfa:	4f 93       	push	r20
     bfc:	5f 93       	push	r21
     bfe:	6f 93       	push	r22
     c00:	7f 93       	push	r23
     c02:	8f 93       	push	r24
     c04:	9f 93       	push	r25
     c06:	af 93       	push	r26
     c08:	bf 93       	push	r27
     c0a:	ef 93       	push	r30
     c0c:	ff 93       	push	r31
     c0e:	df 93       	push	r29
     c10:	cf 93       	push	r28
     c12:	cd b7       	in	r28, 0x3d	; 61
     c14:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER5);
     c16:	8c e4       	ldi	r24, 0x4C	; 76
     c18:	93 e0       	ldi	r25, 0x03	; 3
     c1a:	0e 94 86 17 	call	0x2f0c	; 0x2f0c <__timer_overflowService>
}
     c1e:	cf 91       	pop	r28
     c20:	df 91       	pop	r29
     c22:	ff 91       	pop	r31
     c24:	ef 91       	pop	r30
     c26:	bf 91       	pop	r27
     c28:	af 91       	pop	r26
     c2a:	9f 91       	pop	r25
     c2c:	8f 91       	pop	r24
     c2e:	7f 91       	pop	r23
     c30:	6f 91       	pop	r22
     c32:	5f 91       	pop	r21
     c34:	4f 91       	pop	r20
     c36:	3f 91       	pop	r19
     c38:	2f 91       	pop	r18
     c3a:	0f 90       	pop	r0
     c3c:	0f be       	out	0x3f, r0	; 63
     c3e:	0f 90       	pop	r0
     c40:	1f 90       	pop	r1
     c42:	18 95       	reti

00000c44 <__vector_46>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER5_CAPT_vect){
     c44:	1f 92       	push	r1
     c46:	0f 92       	push	r0
     c48:	0f b6       	in	r0, 0x3f	; 63
     c4a:	0f 92       	push	r0
     c4c:	11 24       	eor	r1, r1
     c4e:	2f 93       	push	r18
     c50:	3f 93       	push	r19
     c52:	4f 93       	push	r20
     c54:	5f 93       	push	r21
     c56:	6f 93       	push	r22
     c58:	7f 93       	push	r23
     c5a:	8f 93       	push	r24
     c5c:	9f 93       	push	r25
     c5e:	af 93       	push	r26
     c60:	bf 93       	push	r27
     c62:	ef 93       	push	r30
     c64:	ff 93       	push	r31
     c66:	df 93       	push	r29
     c68:	cf 93       	push	r28
     c6a:	cd b7       	in	r28, 0x3d	; 61
     c6c:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER5);
     c6e:	8c e4       	ldi	r24, 0x4C	; 76
     c70:	93 e0       	ldi	r25, 0x03	; 3
     c72:	0e 94 95 17 	call	0x2f2a	; 0x2f2a <__timer_captureService>
}
     c76:	cf 91       	pop	r28
     c78:	df 91       	pop	r29
     c7a:	ff 91       	pop	r31
     c7c:	ef 91       	pop	r30
     c7e:	bf 91       	pop	r27
     c80:	af 91       	pop	r26
     c82:	9f 91       	pop	r25
     c84:	8f 91       	pop	r24
     c86:	7f 91       	pop	r23
     c88:	6f 91       	pop	r22
     c8a:	5f 91       	pop	r21
     c8c:	4f 91       	pop	r20
     c8e:	3f 91       	pop	r19
     c90:	2f 91       	pop	r18
     c92:	0f 90       	pop	r0
     c94:	0f be       	out	0x3f, r0	; 63
     c96:	0f 90       	pop	r0
     c98:	1f 90       	pop	r1
     c9a:	18 95       	reti

00000c9c <__vector_47>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER5_COMPA_vect){
     c9c:	1f 92       	push	r1
     c9e:	0f 92       	push	r0
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	0f 92       	push	r0
     ca4:	11 24       	eor	r1, r1
     ca6:	2f 93       	push	r18
     ca8:	3f 93       	push	r19
     caa:	4f 93       	push	r20
     cac:	5f 93       	push	r21
     cae:	6f 93       	push	r22
     cb0:	7f 93       	push	r23
     cb2:	8f 93       	push	r24
     cb4:	9f 93       	push	r25
     cb6:	af 93       	push	r26
     cb8:	bf 93       	push	r27
     cba:	ef 93       	push	r30
     cbc:	ff 93       	push	r31
     cbe:	df 93       	push	r29
     cc0:	cf 93       	push	r28
     cc2:	cd b7       	in	r28, 0x3d	; 61
     cc4:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER5_COMPAREA);
     cc6:	80 e4       	ldi	r24, 0x40	; 64
     cc8:	92 e0       	ldi	r25, 0x02	; 2
     cca:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     cce:	cf 91       	pop	r28
     cd0:	df 91       	pop	r29
     cd2:	ff 91       	pop	r31
     cd4:	ef 91       	pop	r30
     cd6:	bf 91       	pop	r27
     cd8:	af 91       	pop	r26
     cda:	9f 91       	pop	r25
     cdc:	8f 91       	pop	r24
     cde:	7f 91       	pop	r23
     ce0:	6f 91       	pop	r22
     ce2:	5f 91       	pop	r21
     ce4:	4f 91       	pop	r20
     ce6:	3f 91       	pop	r19
     ce8:	2f 91       	pop	r18
     cea:	0f 90       	pop	r0
     cec:	0f be       	out	0x3f, r0	; 63
     cee:	0f 90       	pop	r0
     cf0:	1f 90       	pop	r1
     cf2:	18 95       	reti

00000cf4 <__vector_48>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER5_COMPB_vect){
     cf4:	1f 92       	push	r1
     cf6:	0f 92       	push	r0
     cf8:	0f b6       	in	r0, 0x3f	; 63
     cfa:	0f 92       	push	r0
     cfc:	11 24       	eor	r1, r1
     cfe:	2f 93       	push	r18
     d00:	3f 93       	push	r19
     d02:	4f 93       	push	r20
     d04:	5f 93       	push	r21
     d06:	6f 93       	push	r22
     d08:	7f 93       	push	r23
     d0a:	8f 93       	push	r24
     d0c:	9f 93       	push	r25
     d0e:	af 93       	push	r26
     d10:	bf 93       	push	r27
     d12:	ef 93       	push	r30
     d14:	ff 93       	push	r31
     d16:	df 93       	push	r29
     d18:	cf 93       	push	r28
     d1a:	cd b7       	in	r28, 0x3d	; 61
     d1c:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER5_COMPAREB);
     d1e:	80 e5       	ldi	r24, 0x50	; 80
     d20:	92 e0       	ldi	r25, 0x02	; 2
     d22:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     d26:	cf 91       	pop	r28
     d28:	df 91       	pop	r29
     d2a:	ff 91       	pop	r31
     d2c:	ef 91       	pop	r30
     d2e:	bf 91       	pop	r27
     d30:	af 91       	pop	r26
     d32:	9f 91       	pop	r25
     d34:	8f 91       	pop	r24
     d36:	7f 91       	pop	r23
     d38:	6f 91       	pop	r22
     d3a:	5f 91       	pop	r21
     d3c:	4f 91       	pop	r20
     d3e:	3f 91       	pop	r19
     d40:	2f 91       	pop	r18
     d42:	0f 90       	pop	r0
     d44:	0f be       	out	0x3f, r0	; 63
     d46:	0f 90       	pop	r0
     d48:	1f 90       	pop	r1
     d4a:	18 95       	reti

00000d4c <__vector_49>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER5_COMPC_vect){
     d4c:	1f 92       	push	r1
     d4e:	0f 92       	push	r0
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	0f 92       	push	r0
     d54:	11 24       	eor	r1, r1
     d56:	2f 93       	push	r18
     d58:	3f 93       	push	r19
     d5a:	4f 93       	push	r20
     d5c:	5f 93       	push	r21
     d5e:	6f 93       	push	r22
     d60:	7f 93       	push	r23
     d62:	8f 93       	push	r24
     d64:	9f 93       	push	r25
     d66:	af 93       	push	r26
     d68:	bf 93       	push	r27
     d6a:	ef 93       	push	r30
     d6c:	ff 93       	push	r31
     d6e:	df 93       	push	r29
     d70:	cf 93       	push	r28
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER5_COMPAREC);
     d76:	80 e6       	ldi	r24, 0x60	; 96
     d78:	92 e0       	ldi	r25, 0x02	; 2
     d7a:	0e 94 a4 17 	call	0x2f48	; 0x2f48 <__timer_compareService>
}
     d7e:	cf 91       	pop	r28
     d80:	df 91       	pop	r29
     d82:	ff 91       	pop	r31
     d84:	ef 91       	pop	r30
     d86:	bf 91       	pop	r27
     d88:	af 91       	pop	r26
     d8a:	9f 91       	pop	r25
     d8c:	8f 91       	pop	r24
     d8e:	7f 91       	pop	r23
     d90:	6f 91       	pop	r22
     d92:	5f 91       	pop	r21
     d94:	4f 91       	pop	r20
     d96:	3f 91       	pop	r19
     d98:	2f 91       	pop	r18
     d9a:	0f 90       	pop	r0
     d9c:	0f be       	out	0x3f, r0	; 63
     d9e:	0f 90       	pop	r0
     da0:	1f 90       	pop	r1
     da2:	18 95       	reti

00000da4 <uart1SendByte>:

// ------------------- uart1 -------------------

// Create a routine to write bytes to uart1
// You can set rprintf to use it by calling rprintfInit(&uart1SendByte)
MAKE_WRITER(uart1SendByte){
     da4:	df 93       	push	r29
     da6:	cf 93       	push	r28
     da8:	0f 92       	push	r0
     daa:	cd b7       	in	r28, 0x3d	; 61
     dac:	de b7       	in	r29, 0x3e	; 62
     dae:	89 83       	std	Y+1, r24	; 0x01
	return uartSendByte(uart1,byte);
     db0:	8b e0       	ldi	r24, 0x0B	; 11
     db2:	92 e0       	ldi	r25, 0x02	; 2
     db4:	69 81       	ldd	r22, Y+1	; 0x01
     db6:	0e 94 28 11 	call	0x2250	; 0x2250 <_uartSendByte>
}
     dba:	0f 90       	pop	r0
     dbc:	cf 91       	pop	r28
     dbe:	df 91       	pop	r29
     dc0:	08 95       	ret

00000dc2 <uart1GetByte>:

// Create a routine to read a byte from uart1
// Returns -1 if there was no data
MAKE_READER( uart1GetByte){
     dc2:	df 93       	push	r29
     dc4:	cf 93       	push	r28
     dc6:	cd b7       	in	r28, 0x3d	; 61
     dc8:	de b7       	in	r29, 0x3e	; 62
	return uartGetByte(uart1);
     dca:	8b e0       	ldi	r24, 0x0B	; 11
     dcc:	92 e0       	ldi	r25, 0x02	; 2
     dce:	0e 94 79 11 	call	0x22f2	; 0x22f2 <__uartGetByte>
}
     dd2:	cf 91       	pop	r28
     dd4:	df 91       	pop	r29
     dd6:	08 95       	ret

00000dd8 <__vector_38>:
HW_UART _uart1 = MAKE_UART_BUFFERED(null,null,UCSR1A,UCSR1B,UBRR1L,UBRR1H,UDR1,null,BV(U2X1),D2,D3,&uart1GetByte,&uart1SendByte);

#ifndef USART1_TX_vect
# error Uart1 Tx complete vector undefined
#else
ISR(USART1_TX_vect){
     dd8:	1f 92       	push	r1
     dda:	0f 92       	push	r0
     ddc:	0f b6       	in	r0, 0x3f	; 63
     dde:	0f 92       	push	r0
     de0:	11 24       	eor	r1, r1
     de2:	2f 93       	push	r18
     de4:	3f 93       	push	r19
     de6:	4f 93       	push	r20
     de8:	5f 93       	push	r21
     dea:	6f 93       	push	r22
     dec:	7f 93       	push	r23
     dee:	8f 93       	push	r24
     df0:	9f 93       	push	r25
     df2:	af 93       	push	r26
     df4:	bf 93       	push	r27
     df6:	ef 93       	push	r30
     df8:	ff 93       	push	r31
     dfa:	df 93       	push	r29
     dfc:	cf 93       	push	r28
     dfe:	cd b7       	in	r28, 0x3d	; 61
     e00:	de b7       	in	r29, 0x3e	; 62
	uartTransmitService(uart1);
     e02:	8b e0       	ldi	r24, 0x0B	; 11
     e04:	92 e0       	ldi	r25, 0x02	; 2
     e06:	0e 94 9f 11 	call	0x233e	; 0x233e <__uartTransmitService>
}
     e0a:	cf 91       	pop	r28
     e0c:	df 91       	pop	r29
     e0e:	ff 91       	pop	r31
     e10:	ef 91       	pop	r30
     e12:	bf 91       	pop	r27
     e14:	af 91       	pop	r26
     e16:	9f 91       	pop	r25
     e18:	8f 91       	pop	r24
     e1a:	7f 91       	pop	r23
     e1c:	6f 91       	pop	r22
     e1e:	5f 91       	pop	r21
     e20:	4f 91       	pop	r20
     e22:	3f 91       	pop	r19
     e24:	2f 91       	pop	r18
     e26:	0f 90       	pop	r0
     e28:	0f be       	out	0x3f, r0	; 63
     e2a:	0f 90       	pop	r0
     e2c:	1f 90       	pop	r1
     e2e:	18 95       	reti

00000e30 <__vector_36>:
#endif

#ifndef USART1_RX_vect
# error Uart1 Rx complete vector undefined
#else
ISR(USART1_RX_vect){
     e30:	1f 92       	push	r1
     e32:	0f 92       	push	r0
     e34:	0f b6       	in	r0, 0x3f	; 63
     e36:	0f 92       	push	r0
     e38:	11 24       	eor	r1, r1
     e3a:	2f 93       	push	r18
     e3c:	3f 93       	push	r19
     e3e:	4f 93       	push	r20
     e40:	5f 93       	push	r21
     e42:	6f 93       	push	r22
     e44:	7f 93       	push	r23
     e46:	8f 93       	push	r24
     e48:	9f 93       	push	r25
     e4a:	af 93       	push	r26
     e4c:	bf 93       	push	r27
     e4e:	ef 93       	push	r30
     e50:	ff 93       	push	r31
     e52:	df 93       	push	r29
     e54:	cf 93       	push	r28
     e56:	cd b7       	in	r28, 0x3d	; 61
     e58:	de b7       	in	r29, 0x3e	; 62
	uartReceiveService(uart1);
     e5a:	80 91 2b 02 	lds	r24, 0x022B
     e5e:	90 91 2c 02 	lds	r25, 0x022C
     e62:	fc 01       	movw	r30, r24
     e64:	20 81       	ld	r18, Z
     e66:	8b e0       	ldi	r24, 0x0B	; 11
     e68:	92 e0       	ldi	r25, 0x02	; 2
     e6a:	62 2f       	mov	r22, r18
     e6c:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__uartReceiveService>
}
     e70:	cf 91       	pop	r28
     e72:	df 91       	pop	r29
     e74:	ff 91       	pop	r31
     e76:	ef 91       	pop	r30
     e78:	bf 91       	pop	r27
     e7a:	af 91       	pop	r26
     e7c:	9f 91       	pop	r25
     e7e:	8f 91       	pop	r24
     e80:	7f 91       	pop	r23
     e82:	6f 91       	pop	r22
     e84:	5f 91       	pop	r21
     e86:	4f 91       	pop	r20
     e88:	3f 91       	pop	r19
     e8a:	2f 91       	pop	r18
     e8c:	0f 90       	pop	r0
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	0f 90       	pop	r0
     e92:	1f 90       	pop	r1
     e94:	18 95       	reti

00000e96 <sysInitHardware>:
SWITCH button = MAKE_SWITCH(G5);
ADXL335 acc_330 = MAKE_ADXL335(ADC0,ADC1,ADC2);
IDG300 gyro_300 = MAKE_IDG300(ADC3,ADC4);

// ----------- Initialise built in devices ------
void sysInitHardware(void){
     e96:	df 93       	push	r29
     e98:	cf 93       	push	r28
     e9a:	cd b7       	in	r28, 0x3d	; 61
     e9c:	de b7       	in	r29, 0x3e	; 62
	SWITCH_init(&button);
     e9e:	81 e3       	ldi	r24, 0x31	; 49
     ea0:	92 e0       	ldi	r25, 0x02	; 2
     ea2:	0e 94 66 07 	call	0xecc	; 0xecc <SWITCH_init>
	setErrorLog(&uart1SendByte);
     ea6:	82 ed       	ldi	r24, 0xD2	; 210
     ea8:	96 e0       	ldi	r25, 0x06	; 6
     eaa:	0e 94 b5 17 	call	0x2f6a	; 0x2f6a <setErrorLog>
	rprintfInit(&uart1SendByte);
     eae:	82 ed       	ldi	r24, 0xD2	; 210
     eb0:	96 e0       	ldi	r25, 0x06	; 6
     eb2:	0e 94 ac 14 	call	0x2958	; 0x2958 <rprintfInit>
	uartInit(uart1,115200);
     eb6:	8b e0       	ldi	r24, 0x0B	; 11
     eb8:	92 e0       	ldi	r25, 0x02	; 2
     eba:	40 e0       	ldi	r20, 0x00	; 0
     ebc:	52 ec       	ldi	r21, 0xC2	; 194
     ebe:	61 e0       	ldi	r22, 0x01	; 1
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	0e 94 ef 10 	call	0x21de	; 0x21de <_uartInit>
}
     ec6:	cf 91       	pop	r28
     ec8:	df 91       	pop	r29
     eca:	08 95       	ret

00000ecc <SWITCH_init>:

static __inline__ boolean SWITCH_released(SWITCH* sw){
	return pin_is_high(sw->pin);
}

static __inline__ void SWITCH_init(SWITCH *sw){
     ecc:	df 93       	push	r29
     ece:	cf 93       	push	r28
     ed0:	00 d0       	rcall	.+0      	; 0xed2 <SWITCH_init+0x6>
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	9a 83       	std	Y+2, r25	; 0x02
     ed8:	89 83       	std	Y+1, r24	; 0x01
	pin_make_input(sw->pin,TRUE);
     eda:	e9 81       	ldd	r30, Y+1	; 0x01
     edc:	fa 81       	ldd	r31, Y+2	; 0x02
     ede:	80 81       	ld	r24, Z
     ee0:	91 81       	ldd	r25, Z+1	; 0x01
     ee2:	6f ef       	ldi	r22, 0xFF	; 255
     ee4:	0e 94 b1 13 	call	0x2762	; 0x2762 <pin_make_input>
}
     ee8:	0f 90       	pop	r0
     eea:	0f 90       	pop	r0
     eec:	cf 91       	pop	r28
     eee:	df 91       	pop	r29
     ef0:	08 95       	ret

00000ef2 <initHardware>:

// ----------- Initialise my added devices ------
void initHardware(void){
     ef2:	df 93       	push	r29
     ef4:	cf 93       	push	r28
     ef6:	cd b7       	in	r28, 0x3d	; 61
     ef8:	de b7       	in	r29, 0x3e	; 62
	accelerometerInit(acc_330);
     efa:	83 e3       	ldi	r24, 0x33	; 51
     efc:	92 e0       	ldi	r25, 0x02	; 2
     efe:	0e 94 10 10 	call	0x2020	; 0x2020 <_sensorInit_>
	gyroInit(gyro_300);
     f02:	8f e4       	ldi	r24, 0x4F	; 79
     f04:	92 e0       	ldi	r25, 0x02	; 2
     f06:	0e 94 10 10 	call	0x2020	; 0x2020 <_sensorInit_>
}
     f0a:	cf 91       	pop	r28
     f0c:	df 91       	pop	r29
     f0e:	08 95       	ret

00000f10 <registerLED>:
// ----------- Register the statusLED -----------
void registerLED(void){
     f10:	df 93       	push	r29
     f12:	cf 93       	push	r28
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
	statusLEDregister(B6,false);
     f18:	8e e3       	ldi	r24, 0x3E	; 62
     f1a:	91 e0       	ldi	r25, 0x01	; 1
     f1c:	60 e0       	ldi	r22, 0x00	; 0
     f1e:	0e 94 94 07 	call	0xf28	; 0xf28 <statusLEDregister>
}
     f22:	cf 91       	pop	r28
     f24:	df 91       	pop	r29
     f26:	08 95       	ret

00000f28 <statusLEDregister>:

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
}

static __inline__ void statusLEDregister(const IOPin* pin, boolean activeHigh){
     f28:	df 93       	push	r29
     f2a:	cf 93       	push	r28
     f2c:	00 d0       	rcall	.+0      	; 0xf2e <statusLEDregister+0x6>
     f2e:	0f 92       	push	r0
     f30:	cd b7       	in	r28, 0x3d	; 61
     f32:	de b7       	in	r29, 0x3e	; 62
     f34:	9a 83       	std	Y+2, r25	; 0x02
     f36:	89 83       	std	Y+1, r24	; 0x01
     f38:	6b 83       	std	Y+3, r22	; 0x03
	statusLED.pin = pin;
     f3a:	89 81       	ldd	r24, Y+1	; 0x01
     f3c:	9a 81       	ldd	r25, Y+2	; 0x02
     f3e:	90 93 3a 03 	sts	0x033A, r25
     f42:	80 93 39 03 	sts	0x0339, r24
	statusLED.activeHigh = activeHigh;
     f46:	8b 81       	ldd	r24, Y+3	; 0x03
     f48:	81 70       	andi	r24, 0x01	; 1
     f4a:	98 2f       	mov	r25, r24
     f4c:	91 70       	andi	r25, 0x01	; 1
     f4e:	80 91 3b 03 	lds	r24, 0x033B
     f52:	8e 7f       	andi	r24, 0xFE	; 254
     f54:	89 2b       	or	r24, r25
     f56:	80 93 3b 03 	sts	0x033B, r24
	statusLED.initialised=FALSE;
     f5a:	80 91 3b 03 	lds	r24, 0x033B
     f5e:	8d 7f       	andi	r24, 0xFD	; 253
     f60:	80 93 3b 03 	sts	0x033B, r24
	LED_on(&statusLED);
     f64:	89 e3       	ldi	r24, 0x39	; 57
     f66:	93 e0       	ldi	r25, 0x03	; 3
     f68:	0e 94 bc 07 	call	0xf78	; 0xf78 <LED_on>
}
     f6c:	0f 90       	pop	r0
     f6e:	0f 90       	pop	r0
     f70:	0f 90       	pop	r0
     f72:	cf 91       	pop	r28
     f74:	df 91       	pop	r29
     f76:	08 95       	ret

00000f78 <LED_on>:



void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
     f78:	df 93       	push	r29
     f7a:	cf 93       	push	r28
     f7c:	00 d0       	rcall	.+0      	; 0xf7e <LED_on+0x6>
     f7e:	cd b7       	in	r28, 0x3d	; 61
     f80:	de b7       	in	r29, 0x3e	; 62
     f82:	9a 83       	std	Y+2, r25	; 0x02
     f84:	89 83       	std	Y+1, r24	; 0x01
	LED_set(led,TRUE);
     f86:	89 81       	ldd	r24, Y+1	; 0x01
     f88:	9a 81       	ldd	r25, Y+2	; 0x02
     f8a:	6f ef       	ldi	r22, 0xFF	; 255
     f8c:	0e 94 89 14 	call	0x2912	; 0x2912 <LED_set>
}
     f90:	0f 90       	pop	r0
     f92:	0f 90       	pop	r0
     f94:	cf 91       	pop	r28
     f96:	df 91       	pop	r29
     f98:	08 95       	ret

00000f9a <configure_ports>:

// ----------- Ports are configured on the fly --
void configure_ports(void){
     f9a:	df 93       	push	r29
     f9c:	cf 93       	push	r28
     f9e:	cd b7       	in	r28, 0x3d	; 61
     fa0:	de b7       	in	r29, 0x3e	; 62
}
     fa2:	cf 91       	pop	r28
     fa4:	df 91       	pop	r29
     fa6:	08 95       	ret

00000fa8 <appInitHardware>:

float mean_x;	//acc x axis mean
float var_x = 71;	//acc x axis variance

// Initialise the hardware
void appInitHardware(void) {
     fa8:	df 93       	push	r29
     faa:	cf 93       	push	r28
     fac:	cd b7       	in	r28, 0x3d	; 61
     fae:	de b7       	in	r29, 0x3e	; 62
	initHardware();
     fb0:	0e 94 79 07 	call	0xef2	; 0xef2 <initHardware>
	accelerometerCalibrateX(acc_330, -1047,1012);	//recal'd
     fb4:	83 e3       	ldi	r24, 0x33	; 51
     fb6:	92 e0       	ldi	r25, 0x02	; 2
     fb8:	69 ee       	ldi	r22, 0xE9	; 233
     fba:	7b ef       	ldi	r23, 0xFB	; 251
     fbc:	44 ef       	ldi	r20, 0xF4	; 244
     fbe:	53 e0       	ldi	r21, 0x03	; 3
     fc0:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__accelerometerCalibrateX>
	//accelerometerCalibrateY(acc_330, -2187,-1254);	//not recal'd
	//accelerometerCalibrateZ(acc_330, -2203,-1269);	//not recal'd
}
     fc4:	cf 91       	pop	r28
     fc6:	df 91       	pop	r29
     fc8:	08 95       	ret

00000fca <calc_mean_x>:

void calc_mean_x(){
     fca:	ef 92       	push	r14
     fcc:	ff 92       	push	r15
     fce:	0f 93       	push	r16
     fd0:	1f 93       	push	r17
     fd2:	df 93       	push	r29
     fd4:	cf 93       	push	r28
     fd6:	cd b7       	in	r28, 0x3d	; 61
     fd8:	de b7       	in	r29, 0x3e	; 62
     fda:	28 97       	sbiw	r28, 0x08	; 8
     fdc:	0f b6       	in	r0, 0x3f	; 63
     fde:	f8 94       	cli
     fe0:	de bf       	out	0x3e, r29	; 62
     fe2:	0f be       	out	0x3f, r0	; 63
     fe4:	cd bf       	out	0x3d, r28	; 61
	accelerometerRead(acc_330);
     fe6:	83 e3       	ldi	r24, 0x33	; 51
     fe8:	92 e0       	ldi	r25, 0x02	; 2
     fea:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
	float x = acc_330.accelerometer.x_axis_mG;
     fee:	80 91 3a 02 	lds	r24, 0x023A
     ff2:	90 91 3b 02 	lds	r25, 0x023B
     ff6:	aa 27       	eor	r26, r26
     ff8:	97 fd       	sbrc	r25, 7
     ffa:	a0 95       	com	r26
     ffc:	ba 2f       	mov	r27, r26
     ffe:	bc 01       	movw	r22, r24
    1000:	cd 01       	movw	r24, r26
    1002:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	8d 83       	std	Y+5, r24	; 0x05
    100c:	9e 83       	std	Y+6, r25	; 0x06
    100e:	af 83       	std	Y+7, r26	; 0x07
    1010:	b8 87       	std	Y+8, r27	; 0x08
	
	for(float iter = 1; iter < 10000; iter++){
    1012:	80 e0       	ldi	r24, 0x00	; 0
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	a0 e8       	ldi	r26, 0x80	; 128
    1018:	bf e3       	ldi	r27, 0x3F	; 63
    101a:	89 83       	std	Y+1, r24	; 0x01
    101c:	9a 83       	std	Y+2, r25	; 0x02
    101e:	ab 83       	std	Y+3, r26	; 0x03
    1020:	bc 83       	std	Y+4, r27	; 0x04
    1022:	78 c0       	rjmp	.+240    	; 0x1114 <calc_mean_x+0x14a>
		accelerometerRead(acc_330);
    1024:	83 e3       	ldi	r24, 0x33	; 51
    1026:	92 e0       	ldi	r25, 0x02	; 2
    1028:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
		x = acc_330.accelerometer.x_axis_mG;
    102c:	80 91 3a 02 	lds	r24, 0x023A
    1030:	90 91 3b 02 	lds	r25, 0x023B
    1034:	aa 27       	eor	r26, r26
    1036:	97 fd       	sbrc	r25, 7
    1038:	a0 95       	com	r26
    103a:	ba 2f       	mov	r27, r26
    103c:	bc 01       	movw	r22, r24
    103e:	cd 01       	movw	r24, r26
    1040:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    1044:	dc 01       	movw	r26, r24
    1046:	cb 01       	movw	r24, r22
    1048:	8d 83       	std	Y+5, r24	; 0x05
    104a:	9e 83       	std	Y+6, r25	; 0x06
    104c:	af 83       	std	Y+7, r26	; 0x07
    104e:	b8 87       	std	Y+8, r27	; 0x08
		mean_x = (1/iter)*x + ((iter - 1)/iter)*mean_x;
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	80 e8       	ldi	r24, 0x80	; 128
    1056:	9f e3       	ldi	r25, 0x3F	; 63
    1058:	29 81       	ldd	r18, Y+1	; 0x01
    105a:	3a 81       	ldd	r19, Y+2	; 0x02
    105c:	4b 81       	ldd	r20, Y+3	; 0x03
    105e:	5c 81       	ldd	r21, Y+4	; 0x04
    1060:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1064:	dc 01       	movw	r26, r24
    1066:	cb 01       	movw	r24, r22
    1068:	bc 01       	movw	r22, r24
    106a:	cd 01       	movw	r24, r26
    106c:	2d 81       	ldd	r18, Y+5	; 0x05
    106e:	3e 81       	ldd	r19, Y+6	; 0x06
    1070:	4f 81       	ldd	r20, Y+7	; 0x07
    1072:	58 85       	ldd	r21, Y+8	; 0x08
    1074:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1078:	dc 01       	movw	r26, r24
    107a:	cb 01       	movw	r24, r22
    107c:	7c 01       	movw	r14, r24
    107e:	8d 01       	movw	r16, r26
    1080:	69 81       	ldd	r22, Y+1	; 0x01
    1082:	7a 81       	ldd	r23, Y+2	; 0x02
    1084:	8b 81       	ldd	r24, Y+3	; 0x03
    1086:	9c 81       	ldd	r25, Y+4	; 0x04
    1088:	20 e0       	ldi	r18, 0x00	; 0
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	40 e8       	ldi	r20, 0x80	; 128
    108e:	5f e3       	ldi	r21, 0x3F	; 63
    1090:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    1094:	dc 01       	movw	r26, r24
    1096:	cb 01       	movw	r24, r22
    1098:	bc 01       	movw	r22, r24
    109a:	cd 01       	movw	r24, r26
    109c:	29 81       	ldd	r18, Y+1	; 0x01
    109e:	3a 81       	ldd	r19, Y+2	; 0x02
    10a0:	4b 81       	ldd	r20, Y+3	; 0x03
    10a2:	5c 81       	ldd	r21, Y+4	; 0x04
    10a4:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    10a8:	dc 01       	movw	r26, r24
    10aa:	cb 01       	movw	r24, r22
    10ac:	20 91 34 03 	lds	r18, 0x0334
    10b0:	30 91 35 03 	lds	r19, 0x0335
    10b4:	40 91 36 03 	lds	r20, 0x0336
    10b8:	50 91 37 03 	lds	r21, 0x0337
    10bc:	bc 01       	movw	r22, r24
    10be:	cd 01       	movw	r24, r26
    10c0:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    10c4:	dc 01       	movw	r26, r24
    10c6:	cb 01       	movw	r24, r22
    10c8:	9c 01       	movw	r18, r24
    10ca:	ad 01       	movw	r20, r26
    10cc:	c8 01       	movw	r24, r16
    10ce:	b7 01       	movw	r22, r14
    10d0:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    10d4:	dc 01       	movw	r26, r24
    10d6:	cb 01       	movw	r24, r22
    10d8:	80 93 34 03 	sts	0x0334, r24
    10dc:	90 93 35 03 	sts	0x0335, r25
    10e0:	a0 93 36 03 	sts	0x0336, r26
    10e4:	b0 93 37 03 	sts	0x0337, r27
		delay_us(25);
    10e8:	69 e1       	ldi	r22, 0x19	; 25
    10ea:	70 e0       	ldi	r23, 0x00	; 0
    10ec:	80 e0       	ldi	r24, 0x00	; 0
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	0e 94 b4 1e 	call	0x3d68	; 0x3d68 <delay_us>

void calc_mean_x(){
	accelerometerRead(acc_330);
	float x = acc_330.accelerometer.x_axis_mG;
	
	for(float iter = 1; iter < 10000; iter++){
    10f4:	69 81       	ldd	r22, Y+1	; 0x01
    10f6:	7a 81       	ldd	r23, Y+2	; 0x02
    10f8:	8b 81       	ldd	r24, Y+3	; 0x03
    10fa:	9c 81       	ldd	r25, Y+4	; 0x04
    10fc:	20 e0       	ldi	r18, 0x00	; 0
    10fe:	30 e0       	ldi	r19, 0x00	; 0
    1100:	40 e8       	ldi	r20, 0x80	; 128
    1102:	5f e3       	ldi	r21, 0x3F	; 63
    1104:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1108:	dc 01       	movw	r26, r24
    110a:	cb 01       	movw	r24, r22
    110c:	89 83       	std	Y+1, r24	; 0x01
    110e:	9a 83       	std	Y+2, r25	; 0x02
    1110:	ab 83       	std	Y+3, r26	; 0x03
    1112:	bc 83       	std	Y+4, r27	; 0x04
    1114:	69 81       	ldd	r22, Y+1	; 0x01
    1116:	7a 81       	ldd	r23, Y+2	; 0x02
    1118:	8b 81       	ldd	r24, Y+3	; 0x03
    111a:	9c 81       	ldd	r25, Y+4	; 0x04
    111c:	20 e0       	ldi	r18, 0x00	; 0
    111e:	30 e4       	ldi	r19, 0x40	; 64
    1120:	4c e1       	ldi	r20, 0x1C	; 28
    1122:	56 e4       	ldi	r21, 0x46	; 70
    1124:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    1128:	88 23       	and	r24, r24
    112a:	0c f4       	brge	.+2      	; 0x112e <calc_mean_x+0x164>
    112c:	7b cf       	rjmp	.-266    	; 0x1024 <calc_mean_x+0x5a>
		accelerometerRead(acc_330);
		x = acc_330.accelerometer.x_axis_mG;
		mean_x = (1/iter)*x + ((iter - 1)/iter)*mean_x;
		delay_us(25);
	}
	rprintf("Mean: ");
    112e:	2a e7       	ldi	r18, 0x7A	; 122
    1130:	33 e0       	ldi	r19, 0x03	; 3
    1132:	00 d0       	rcall	.+0      	; 0x1134 <calc_mean_x+0x16a>
    1134:	0f 92       	push	r0
    1136:	ed b7       	in	r30, 0x3d	; 61
    1138:	fe b7       	in	r31, 0x3e	; 62
    113a:	31 96       	adiw	r30, 0x01	; 1
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	80 83       	st	Z, r24
    1140:	32 83       	std	Z+2, r19	; 0x02
    1142:	21 83       	std	Z+1, r18	; 0x01
    1144:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    1148:	0f 90       	pop	r0
    114a:	0f 90       	pop	r0
    114c:	0f 90       	pop	r0
	rprintfFloat(5, mean_x);
    114e:	20 91 34 03 	lds	r18, 0x0334
    1152:	30 91 35 03 	lds	r19, 0x0335
    1156:	40 91 36 03 	lds	r20, 0x0336
    115a:	50 91 37 03 	lds	r21, 0x0337
    115e:	85 e0       	ldi	r24, 0x05	; 5
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	ba 01       	movw	r22, r20
    1164:	a9 01       	movw	r20, r18
    1166:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <rprintfFloat>
	rprintfCRLF();
    116a:	0e 94 f7 14 	call	0x29ee	; 0x29ee <rprintfCRLF>
}
    116e:	28 96       	adiw	r28, 0x08	; 8
    1170:	0f b6       	in	r0, 0x3f	; 63
    1172:	f8 94       	cli
    1174:	de bf       	out	0x3e, r29	; 62
    1176:	0f be       	out	0x3f, r0	; 63
    1178:	cd bf       	out	0x3d, r28	; 61
    117a:	cf 91       	pop	r28
    117c:	df 91       	pop	r29
    117e:	1f 91       	pop	r17
    1180:	0f 91       	pop	r16
    1182:	ff 90       	pop	r15
    1184:	ef 90       	pop	r14
    1186:	08 95       	ret

00001188 <calc_var_x>:

void calc_var_x(){
    1188:	ef 92       	push	r14
    118a:	ff 92       	push	r15
    118c:	0f 93       	push	r16
    118e:	1f 93       	push	r17
    1190:	df 93       	push	r29
    1192:	cf 93       	push	r28
    1194:	cd b7       	in	r28, 0x3d	; 61
    1196:	de b7       	in	r29, 0x3e	; 62
    1198:	28 97       	sbiw	r28, 0x08	; 8
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	de bf       	out	0x3e, r29	; 62
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	cd bf       	out	0x3d, r28	; 61
	accelerometerRead(acc_330);
    11a4:	83 e3       	ldi	r24, 0x33	; 51
    11a6:	92 e0       	ldi	r25, 0x02	; 2
    11a8:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
	float x = acc_330.accelerometer.x_axis_mG;
    11ac:	80 91 3a 02 	lds	r24, 0x023A
    11b0:	90 91 3b 02 	lds	r25, 0x023B
    11b4:	aa 27       	eor	r26, r26
    11b6:	97 fd       	sbrc	r25, 7
    11b8:	a0 95       	com	r26
    11ba:	ba 2f       	mov	r27, r26
    11bc:	bc 01       	movw	r22, r24
    11be:	cd 01       	movw	r24, r26
    11c0:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    11c4:	dc 01       	movw	r26, r24
    11c6:	cb 01       	movw	r24, r22
    11c8:	8d 83       	std	Y+5, r24	; 0x05
    11ca:	9e 83       	std	Y+6, r25	; 0x06
    11cc:	af 83       	std	Y+7, r26	; 0x07
    11ce:	b8 87       	std	Y+8, r27	; 0x08
	
	for(float iter = 1; iter < 5000; iter++){
    11d0:	80 e0       	ldi	r24, 0x00	; 0
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	a0 e8       	ldi	r26, 0x80	; 128
    11d6:	bf e3       	ldi	r27, 0x3F	; 63
    11d8:	89 83       	std	Y+1, r24	; 0x01
    11da:	9a 83       	std	Y+2, r25	; 0x02
    11dc:	ab 83       	std	Y+3, r26	; 0x03
    11de:	bc 83       	std	Y+4, r27	; 0x04
    11e0:	a2 c0       	rjmp	.+324    	; 0x1326 <calc_var_x+0x19e>
		x = acc_330.accelerometer.x_axis_mG;
    11e2:	80 91 3a 02 	lds	r24, 0x023A
    11e6:	90 91 3b 02 	lds	r25, 0x023B
    11ea:	aa 27       	eor	r26, r26
    11ec:	97 fd       	sbrc	r25, 7
    11ee:	a0 95       	com	r26
    11f0:	ba 2f       	mov	r27, r26
    11f2:	bc 01       	movw	r22, r24
    11f4:	cd 01       	movw	r24, r26
    11f6:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    11fa:	dc 01       	movw	r26, r24
    11fc:	cb 01       	movw	r24, r22
    11fe:	8d 83       	std	Y+5, r24	; 0x05
    1200:	9e 83       	std	Y+6, r25	; 0x06
    1202:	af 83       	std	Y+7, r26	; 0x07
    1204:	b8 87       	std	Y+8, r27	; 0x08
		var_x = (1/iter)*(mean_x - x)*(mean_x - x) + ((iter - 1)/iter)*var_x;
    1206:	60 e0       	ldi	r22, 0x00	; 0
    1208:	70 e0       	ldi	r23, 0x00	; 0
    120a:	80 e8       	ldi	r24, 0x80	; 128
    120c:	9f e3       	ldi	r25, 0x3F	; 63
    120e:	29 81       	ldd	r18, Y+1	; 0x01
    1210:	3a 81       	ldd	r19, Y+2	; 0x02
    1212:	4b 81       	ldd	r20, Y+3	; 0x03
    1214:	5c 81       	ldd	r21, Y+4	; 0x04
    1216:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    121a:	dc 01       	movw	r26, r24
    121c:	cb 01       	movw	r24, r22
    121e:	7c 01       	movw	r14, r24
    1220:	8d 01       	movw	r16, r26
    1222:	80 91 34 03 	lds	r24, 0x0334
    1226:	90 91 35 03 	lds	r25, 0x0335
    122a:	a0 91 36 03 	lds	r26, 0x0336
    122e:	b0 91 37 03 	lds	r27, 0x0337
    1232:	bc 01       	movw	r22, r24
    1234:	cd 01       	movw	r24, r26
    1236:	2d 81       	ldd	r18, Y+5	; 0x05
    1238:	3e 81       	ldd	r19, Y+6	; 0x06
    123a:	4f 81       	ldd	r20, Y+7	; 0x07
    123c:	58 85       	ldd	r21, Y+8	; 0x08
    123e:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    1242:	dc 01       	movw	r26, r24
    1244:	cb 01       	movw	r24, r22
    1246:	9c 01       	movw	r18, r24
    1248:	ad 01       	movw	r20, r26
    124a:	c8 01       	movw	r24, r16
    124c:	b7 01       	movw	r22, r14
    124e:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1252:	dc 01       	movw	r26, r24
    1254:	cb 01       	movw	r24, r22
    1256:	7c 01       	movw	r14, r24
    1258:	8d 01       	movw	r16, r26
    125a:	80 91 34 03 	lds	r24, 0x0334
    125e:	90 91 35 03 	lds	r25, 0x0335
    1262:	a0 91 36 03 	lds	r26, 0x0336
    1266:	b0 91 37 03 	lds	r27, 0x0337
    126a:	bc 01       	movw	r22, r24
    126c:	cd 01       	movw	r24, r26
    126e:	2d 81       	ldd	r18, Y+5	; 0x05
    1270:	3e 81       	ldd	r19, Y+6	; 0x06
    1272:	4f 81       	ldd	r20, Y+7	; 0x07
    1274:	58 85       	ldd	r21, Y+8	; 0x08
    1276:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    127a:	dc 01       	movw	r26, r24
    127c:	cb 01       	movw	r24, r22
    127e:	9c 01       	movw	r18, r24
    1280:	ad 01       	movw	r20, r26
    1282:	c8 01       	movw	r24, r16
    1284:	b7 01       	movw	r22, r14
    1286:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    128a:	dc 01       	movw	r26, r24
    128c:	cb 01       	movw	r24, r22
    128e:	7c 01       	movw	r14, r24
    1290:	8d 01       	movw	r16, r26
    1292:	69 81       	ldd	r22, Y+1	; 0x01
    1294:	7a 81       	ldd	r23, Y+2	; 0x02
    1296:	8b 81       	ldd	r24, Y+3	; 0x03
    1298:	9c 81       	ldd	r25, Y+4	; 0x04
    129a:	20 e0       	ldi	r18, 0x00	; 0
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	40 e8       	ldi	r20, 0x80	; 128
    12a0:	5f e3       	ldi	r21, 0x3F	; 63
    12a2:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    12a6:	dc 01       	movw	r26, r24
    12a8:	cb 01       	movw	r24, r22
    12aa:	bc 01       	movw	r22, r24
    12ac:	cd 01       	movw	r24, r26
    12ae:	29 81       	ldd	r18, Y+1	; 0x01
    12b0:	3a 81       	ldd	r19, Y+2	; 0x02
    12b2:	4b 81       	ldd	r20, Y+3	; 0x03
    12b4:	5c 81       	ldd	r21, Y+4	; 0x04
    12b6:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    12ba:	dc 01       	movw	r26, r24
    12bc:	cb 01       	movw	r24, r22
    12be:	20 91 62 02 	lds	r18, 0x0262
    12c2:	30 91 63 02 	lds	r19, 0x0263
    12c6:	40 91 64 02 	lds	r20, 0x0264
    12ca:	50 91 65 02 	lds	r21, 0x0265
    12ce:	bc 01       	movw	r22, r24
    12d0:	cd 01       	movw	r24, r26
    12d2:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    12d6:	dc 01       	movw	r26, r24
    12d8:	cb 01       	movw	r24, r22
    12da:	9c 01       	movw	r18, r24
    12dc:	ad 01       	movw	r20, r26
    12de:	c8 01       	movw	r24, r16
    12e0:	b7 01       	movw	r22, r14
    12e2:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    12e6:	dc 01       	movw	r26, r24
    12e8:	cb 01       	movw	r24, r22
    12ea:	80 93 62 02 	sts	0x0262, r24
    12ee:	90 93 63 02 	sts	0x0263, r25
    12f2:	a0 93 64 02 	sts	0x0264, r26
    12f6:	b0 93 65 02 	sts	0x0265, r27
		delay_us(50);
    12fa:	62 e3       	ldi	r22, 0x32	; 50
    12fc:	70 e0       	ldi	r23, 0x00	; 0
    12fe:	80 e0       	ldi	r24, 0x00	; 0
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	0e 94 b4 1e 	call	0x3d68	; 0x3d68 <delay_us>

void calc_var_x(){
	accelerometerRead(acc_330);
	float x = acc_330.accelerometer.x_axis_mG;
	
	for(float iter = 1; iter < 5000; iter++){
    1306:	69 81       	ldd	r22, Y+1	; 0x01
    1308:	7a 81       	ldd	r23, Y+2	; 0x02
    130a:	8b 81       	ldd	r24, Y+3	; 0x03
    130c:	9c 81       	ldd	r25, Y+4	; 0x04
    130e:	20 e0       	ldi	r18, 0x00	; 0
    1310:	30 e0       	ldi	r19, 0x00	; 0
    1312:	40 e8       	ldi	r20, 0x80	; 128
    1314:	5f e3       	ldi	r21, 0x3F	; 63
    1316:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    131a:	dc 01       	movw	r26, r24
    131c:	cb 01       	movw	r24, r22
    131e:	89 83       	std	Y+1, r24	; 0x01
    1320:	9a 83       	std	Y+2, r25	; 0x02
    1322:	ab 83       	std	Y+3, r26	; 0x03
    1324:	bc 83       	std	Y+4, r27	; 0x04
    1326:	69 81       	ldd	r22, Y+1	; 0x01
    1328:	7a 81       	ldd	r23, Y+2	; 0x02
    132a:	8b 81       	ldd	r24, Y+3	; 0x03
    132c:	9c 81       	ldd	r25, Y+4	; 0x04
    132e:	20 e0       	ldi	r18, 0x00	; 0
    1330:	30 e4       	ldi	r19, 0x40	; 64
    1332:	4c e9       	ldi	r20, 0x9C	; 156
    1334:	55 e4       	ldi	r21, 0x45	; 69
    1336:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    133a:	88 23       	and	r24, r24
    133c:	0c f4       	brge	.+2      	; 0x1340 <calc_var_x+0x1b8>
    133e:	51 cf       	rjmp	.-350    	; 0x11e2 <calc_var_x+0x5a>
		x = acc_330.accelerometer.x_axis_mG;
		var_x = (1/iter)*(mean_x - x)*(mean_x - x) + ((iter - 1)/iter)*var_x;
		delay_us(50);
	}
	rprintf("Variance: ");
    1340:	21 e8       	ldi	r18, 0x81	; 129
    1342:	33 e0       	ldi	r19, 0x03	; 3
    1344:	00 d0       	rcall	.+0      	; 0x1346 <calc_var_x+0x1be>
    1346:	0f 92       	push	r0
    1348:	ed b7       	in	r30, 0x3d	; 61
    134a:	fe b7       	in	r31, 0x3e	; 62
    134c:	31 96       	adiw	r30, 0x01	; 1
    134e:	81 e0       	ldi	r24, 0x01	; 1
    1350:	80 83       	st	Z, r24
    1352:	32 83       	std	Z+2, r19	; 0x02
    1354:	21 83       	std	Z+1, r18	; 0x01
    1356:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    135a:	0f 90       	pop	r0
    135c:	0f 90       	pop	r0
    135e:	0f 90       	pop	r0
	rprintfFloat(5, var_x);
    1360:	20 91 62 02 	lds	r18, 0x0262
    1364:	30 91 63 02 	lds	r19, 0x0263
    1368:	40 91 64 02 	lds	r20, 0x0264
    136c:	50 91 65 02 	lds	r21, 0x0265
    1370:	85 e0       	ldi	r24, 0x05	; 5
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	ba 01       	movw	r22, r20
    1376:	a9 01       	movw	r20, r18
    1378:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <rprintfFloat>
	rprintfCRLF();
    137c:	0e 94 f7 14 	call	0x29ee	; 0x29ee <rprintfCRLF>
}
    1380:	28 96       	adiw	r28, 0x08	; 8
    1382:	0f b6       	in	r0, 0x3f	; 63
    1384:	f8 94       	cli
    1386:	de bf       	out	0x3e, r29	; 62
    1388:	0f be       	out	0x3f, r0	; 63
    138a:	cd bf       	out	0x3d, r28	; 61
    138c:	cf 91       	pop	r28
    138e:	df 91       	pop	r29
    1390:	1f 91       	pop	r17
    1392:	0f 91       	pop	r16
    1394:	ff 90       	pop	r15
    1396:	ef 90       	pop	r14
    1398:	08 95       	ret

0000139a <appInitSoftware>:

// Initialise the software
TICK_COUNT appInitSoftware(TICK_COUNT loopStart){
    139a:	df 93       	push	r29
    139c:	cf 93       	push	r28
    139e:	00 d0       	rcall	.+0      	; 0x13a0 <appInitSoftware+0x6>
    13a0:	00 d0       	rcall	.+0      	; 0x13a2 <appInitSoftware+0x8>
    13a2:	cd b7       	in	r28, 0x3d	; 61
    13a4:	de b7       	in	r29, 0x3e	; 62
    13a6:	69 83       	std	Y+1, r22	; 0x01
    13a8:	7a 83       	std	Y+2, r23	; 0x02
    13aa:	8b 83       	std	Y+3, r24	; 0x03
    13ac:	9c 83       	std	Y+4, r25	; 0x04
	
	delay_ms(1000);	
    13ae:	68 ee       	ldi	r22, 0xE8	; 232
    13b0:	73 e0       	ldi	r23, 0x03	; 3
    13b2:	80 e0       	ldi	r24, 0x00	; 0
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <delay_ms>
	rprintf("Entering calc mean\n");
    13ba:	24 ec       	ldi	r18, 0xC4	; 196
    13bc:	33 e0       	ldi	r19, 0x03	; 3
    13be:	00 d0       	rcall	.+0      	; 0x13c0 <appInitSoftware+0x26>
    13c0:	0f 92       	push	r0
    13c2:	ed b7       	in	r30, 0x3d	; 61
    13c4:	fe b7       	in	r31, 0x3e	; 62
    13c6:	31 96       	adiw	r30, 0x01	; 1
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	80 83       	st	Z, r24
    13cc:	32 83       	std	Z+2, r19	; 0x02
    13ce:	21 83       	std	Z+1, r18	; 0x01
    13d0:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    13d4:	0f 90       	pop	r0
    13d6:	0f 90       	pop	r0
    13d8:	0f 90       	pop	r0
	calc_mean_x();
    13da:	0e 94 e5 07 	call	0xfca	; 0xfca <calc_mean_x>
	rprintf("Exiting calc mean\n");
    13de:	21 eb       	ldi	r18, 0xB1	; 177
    13e0:	33 e0       	ldi	r19, 0x03	; 3
    13e2:	00 d0       	rcall	.+0      	; 0x13e4 <appInitSoftware+0x4a>
    13e4:	0f 92       	push	r0
    13e6:	ed b7       	in	r30, 0x3d	; 61
    13e8:	fe b7       	in	r31, 0x3e	; 62
    13ea:	31 96       	adiw	r30, 0x01	; 1
    13ec:	81 e0       	ldi	r24, 0x01	; 1
    13ee:	80 83       	st	Z, r24
    13f0:	32 83       	std	Z+2, r19	; 0x02
    13f2:	21 83       	std	Z+1, r18	; 0x01
    13f4:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    13f8:	0f 90       	pop	r0
    13fa:	0f 90       	pop	r0
    13fc:	0f 90       	pop	r0
	rprintf("Entering calc var\n");
    13fe:	2e e9       	ldi	r18, 0x9E	; 158
    1400:	33 e0       	ldi	r19, 0x03	; 3
    1402:	00 d0       	rcall	.+0      	; 0x1404 <appInitSoftware+0x6a>
    1404:	0f 92       	push	r0
    1406:	ed b7       	in	r30, 0x3d	; 61
    1408:	fe b7       	in	r31, 0x3e	; 62
    140a:	31 96       	adiw	r30, 0x01	; 1
    140c:	81 e0       	ldi	r24, 0x01	; 1
    140e:	80 83       	st	Z, r24
    1410:	32 83       	std	Z+2, r19	; 0x02
    1412:	21 83       	std	Z+1, r18	; 0x01
    1414:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    1418:	0f 90       	pop	r0
    141a:	0f 90       	pop	r0
    141c:	0f 90       	pop	r0
	calc_var_x();
    141e:	0e 94 c4 08 	call	0x1188	; 0x1188 <calc_var_x>
	rprintf("Exiting calc var\n");
    1422:	2c e8       	ldi	r18, 0x8C	; 140
    1424:	33 e0       	ldi	r19, 0x03	; 3
    1426:	00 d0       	rcall	.+0      	; 0x1428 <appInitSoftware+0x8e>
    1428:	0f 92       	push	r0
    142a:	ed b7       	in	r30, 0x3d	; 61
    142c:	fe b7       	in	r31, 0x3e	; 62
    142e:	31 96       	adiw	r30, 0x01	; 1
    1430:	81 e0       	ldi	r24, 0x01	; 1
    1432:	80 83       	st	Z, r24
    1434:	32 83       	std	Z+2, r19	; 0x02
    1436:	21 83       	std	Z+1, r18	; 0x01
    1438:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    143c:	0f 90       	pop	r0
    143e:	0f 90       	pop	r0
    1440:	0f 90       	pop	r0
	delay_ms(1000);	
    1442:	68 ee       	ldi	r22, 0xE8	; 232
    1444:	73 e0       	ldi	r23, 0x03	; 3
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <delay_ms>
	
	return 0;
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	a0 e0       	ldi	r26, 0x00	; 0
    1454:	b0 e0       	ldi	r27, 0x00	; 0
}
    1456:	bc 01       	movw	r22, r24
    1458:	cd 01       	movw	r24, r26
    145a:	0f 90       	pop	r0
    145c:	0f 90       	pop	r0
    145e:	0f 90       	pop	r0
    1460:	0f 90       	pop	r0
    1462:	cf 91       	pop	r28
    1464:	df 91       	pop	r29
    1466:	08 95       	ret

00001468 <k_filter_x>:

int16_t k_filter_x(){
    1468:	ef 92       	push	r14
    146a:	ff 92       	push	r15
    146c:	0f 93       	push	r16
    146e:	1f 93       	push	r17
    1470:	df 93       	push	r29
    1472:	cf 93       	push	r28
    1474:	cd b7       	in	r28, 0x3d	; 61
    1476:	de b7       	in	r29, 0x3e	; 62
    1478:	a8 97       	sbiw	r28, 0x28	; 40
    147a:	0f b6       	in	r0, 0x3f	; 63
    147c:	f8 94       	cli
    147e:	de bf       	out	0x3e, r29	; 62
    1480:	0f be       	out	0x3f, r0	; 63
    1482:	cd bf       	out	0x3d, r28	; 61

	accelerometerRead(acc_330);
    1484:	83 e3       	ldi	r24, 0x33	; 51
    1486:	92 e0       	ldi	r25, 0x02	; 2
    1488:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
	gyroRead(gyro_300);	
    148c:	8f e4       	ldi	r24, 0x4F	; 79
    148e:	92 e0       	ldi	r25, 0x02	; 2
    1490:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
	
	float weight;
	float sig = 100;
    1494:	80 e0       	ldi	r24, 0x00	; 0
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	a8 ec       	ldi	r26, 0xC8	; 200
    149a:	b2 e4       	ldi	r27, 0x42	; 66
    149c:	89 a3       	std	Y+33, r24	; 0x21
    149e:	9a a3       	std	Y+34, r25	; 0x22
    14a0:	ab a3       	std	Y+35, r26	; 0x23
    14a2:	bc a3       	std	Y+36, r27	; 0x24
	float acc_x = (180*asin(acc_330.accelerometer.x_axis_mG/1000.0))/M_PI;
    14a4:	80 91 3a 02 	lds	r24, 0x023A
    14a8:	90 91 3b 02 	lds	r25, 0x023B
    14ac:	aa 27       	eor	r26, r26
    14ae:	97 fd       	sbrc	r25, 7
    14b0:	a0 95       	com	r26
    14b2:	ba 2f       	mov	r27, r26
    14b4:	bc 01       	movw	r22, r24
    14b6:	cd 01       	movw	r24, r26
    14b8:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    14bc:	dc 01       	movw	r26, r24
    14be:	cb 01       	movw	r24, r22
    14c0:	bc 01       	movw	r22, r24
    14c2:	cd 01       	movw	r24, r26
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	4a e7       	ldi	r20, 0x7A	; 122
    14ca:	54 e4       	ldi	r21, 0x44	; 68
    14cc:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    14d0:	dc 01       	movw	r26, r24
    14d2:	cb 01       	movw	r24, r22
    14d4:	bc 01       	movw	r22, r24
    14d6:	cd 01       	movw	r24, r26
    14d8:	0e 94 41 23 	call	0x4682	; 0x4682 <asin>
    14dc:	dc 01       	movw	r26, r24
    14de:	cb 01       	movw	r24, r22
    14e0:	bc 01       	movw	r22, r24
    14e2:	cd 01       	movw	r24, r26
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	30 e0       	ldi	r19, 0x00	; 0
    14e8:	44 e3       	ldi	r20, 0x34	; 52
    14ea:	53 e4       	ldi	r21, 0x43	; 67
    14ec:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    14f0:	dc 01       	movw	r26, r24
    14f2:	cb 01       	movw	r24, r22
    14f4:	bc 01       	movw	r22, r24
    14f6:	cd 01       	movw	r24, r26
    14f8:	2b ed       	ldi	r18, 0xDB	; 219
    14fa:	3f e0       	ldi	r19, 0x0F	; 15
    14fc:	49 e4       	ldi	r20, 0x49	; 73
    14fe:	50 e4       	ldi	r21, 0x40	; 64
    1500:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1504:	dc 01       	movw	r26, r24
    1506:	cb 01       	movw	r24, r22
    1508:	8d 8f       	std	Y+29, r24	; 0x1d
    150a:	9e 8f       	std	Y+30, r25	; 0x1e
    150c:	af 8f       	std	Y+31, r26	; 0x1f
    150e:	b8 a3       	std	Y+32, r27	; 0x20
	float gyro_y;
	float est_x, est_x2 = est_x = acc_x;
    1510:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1512:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1514:	af 8d       	ldd	r26, Y+31	; 0x1f
    1516:	b8 a1       	ldd	r27, Y+32	; 0x20
    1518:	8d 8b       	std	Y+21, r24	; 0x15
    151a:	9e 8b       	std	Y+22, r25	; 0x16
    151c:	af 8b       	std	Y+23, r26	; 0x17
    151e:	b8 8f       	std	Y+24, r27	; 0x18
    1520:	8d 89       	ldd	r24, Y+21	; 0x15
    1522:	9e 89       	ldd	r25, Y+22	; 0x16
    1524:	af 89       	ldd	r26, Y+23	; 0x17
    1526:	b8 8d       	ldd	r27, Y+24	; 0x18
    1528:	89 8b       	std	Y+17, r24	; 0x11
    152a:	9a 8b       	std	Y+18, r25	; 0x12
    152c:	ab 8b       	std	Y+19, r26	; 0x13
    152e:	bc 8b       	std	Y+20, r27	; 0x14

	TICK_COUNT start = clockGetus();
    1530:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    1534:	dc 01       	movw	r26, r24
    1536:	cb 01       	movw	r24, r22
    1538:	8d 87       	std	Y+13, r24	; 0x0d
    153a:	9e 87       	std	Y+14, r25	; 0x0e
    153c:	af 87       	std	Y+15, r26	; 0x0f
    153e:	b8 8b       	std	Y+16, r27	; 0x10
	TICK_COUNT end;
	float duration;

	for(float iter = 0; iter < 100; iter++){
    1540:	80 e0       	ldi	r24, 0x00	; 0
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	a0 e0       	ldi	r26, 0x00	; 0
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	89 83       	std	Y+1, r24	; 0x01
    154a:	9a 83       	std	Y+2, r25	; 0x02
    154c:	ab 83       	std	Y+3, r26	; 0x03
    154e:	bc 83       	std	Y+4, r27	; 0x04
    1550:	4c c1       	rjmp	.+664    	; 0x17ea <k_filter_x+0x382>
		gyro_y = gyro_300.gyro.y_axis_degrees_per_second;
    1552:	80 91 58 02 	lds	r24, 0x0258
    1556:	90 91 59 02 	lds	r25, 0x0259
    155a:	aa 27       	eor	r26, r26
    155c:	97 fd       	sbrc	r25, 7
    155e:	a0 95       	com	r26
    1560:	ba 2f       	mov	r27, r26
    1562:	bc 01       	movw	r22, r24
    1564:	cd 01       	movw	r24, r26
    1566:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    156a:	dc 01       	movw	r26, r24
    156c:	cb 01       	movw	r24, r22
    156e:	89 8f       	std	Y+25, r24	; 0x19
    1570:	9a 8f       	std	Y+26, r25	; 0x1a
    1572:	ab 8f       	std	Y+27, r26	; 0x1b
    1574:	bc 8f       	std	Y+28, r27	; 0x1c
		sig += 0.001;
    1576:	69 a1       	ldd	r22, Y+33	; 0x21
    1578:	7a a1       	ldd	r23, Y+34	; 0x22
    157a:	8b a1       	ldd	r24, Y+35	; 0x23
    157c:	9c a1       	ldd	r25, Y+36	; 0x24
    157e:	2f e6       	ldi	r18, 0x6F	; 111
    1580:	32 e1       	ldi	r19, 0x12	; 18
    1582:	43 e8       	ldi	r20, 0x83	; 131
    1584:	5a e3       	ldi	r21, 0x3A	; 58
    1586:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    158a:	dc 01       	movw	r26, r24
    158c:	cb 01       	movw	r24, r22
    158e:	89 a3       	std	Y+33, r24	; 0x21
    1590:	9a a3       	std	Y+34, r25	; 0x22
    1592:	ab a3       	std	Y+35, r26	; 0x23
    1594:	bc a3       	std	Y+36, r27	; 0x24
		end = clockGetus();
    1596:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    159a:	dc 01       	movw	r26, r24
    159c:	cb 01       	movw	r24, r22
    159e:	89 87       	std	Y+9, r24	; 0x09
    15a0:	9a 87       	std	Y+10, r25	; 0x0a
    15a2:	ab 87       	std	Y+11, r26	; 0x0b
    15a4:	bc 87       	std	Y+12, r27	; 0x0c
		duration = end - start;
    15a6:	29 85       	ldd	r18, Y+9	; 0x09
    15a8:	3a 85       	ldd	r19, Y+10	; 0x0a
    15aa:	4b 85       	ldd	r20, Y+11	; 0x0b
    15ac:	5c 85       	ldd	r21, Y+12	; 0x0c
    15ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    15b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    15b2:	af 85       	ldd	r26, Y+15	; 0x0f
    15b4:	b8 89       	ldd	r27, Y+16	; 0x10
    15b6:	79 01       	movw	r14, r18
    15b8:	8a 01       	movw	r16, r20
    15ba:	e8 1a       	sub	r14, r24
    15bc:	f9 0a       	sbc	r15, r25
    15be:	0a 0b       	sbc	r16, r26
    15c0:	1b 0b       	sbc	r17, r27
    15c2:	d8 01       	movw	r26, r16
    15c4:	c7 01       	movw	r24, r14
    15c6:	bc 01       	movw	r22, r24
    15c8:	cd 01       	movw	r24, r26
    15ca:	0e 94 f5 23 	call	0x47ea	; 0x47ea <__floatunsisf>
    15ce:	dc 01       	movw	r26, r24
    15d0:	cb 01       	movw	r24, r22
    15d2:	8d 83       	std	Y+5, r24	; 0x05
    15d4:	9e 83       	std	Y+6, r25	; 0x06
    15d6:	af 83       	std	Y+7, r26	; 0x07
    15d8:	b8 87       	std	Y+8, r27	; 0x08
		est_x += fma(duration,0.000001,0)*gyro_y;
    15da:	8d 81       	ldd	r24, Y+5	; 0x05
    15dc:	9e 81       	ldd	r25, Y+6	; 0x06
    15de:	af 81       	ldd	r26, Y+7	; 0x07
    15e0:	b8 85       	ldd	r27, Y+8	; 0x08
    15e2:	bc 01       	movw	r22, r24
    15e4:	cd 01       	movw	r24, r26
    15e6:	2d eb       	ldi	r18, 0xBD	; 189
    15e8:	37 e3       	ldi	r19, 0x37	; 55
    15ea:	46 e8       	ldi	r20, 0x86	; 134
    15ec:	55 e3       	ldi	r21, 0x35	; 53
    15ee:	0f 2e       	mov	r0, r31
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	ef 2e       	mov	r14, r31
    15f4:	f0 e0       	ldi	r31, 0x00	; 0
    15f6:	ff 2e       	mov	r15, r31
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	0f 2f       	mov	r16, r31
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	1f 2f       	mov	r17, r31
    1600:	f0 2d       	mov	r31, r0
    1602:	0e 94 32 24 	call	0x4864	; 0x4864 <fma>
    1606:	dc 01       	movw	r26, r24
    1608:	cb 01       	movw	r24, r22
    160a:	bc 01       	movw	r22, r24
    160c:	cd 01       	movw	r24, r26
    160e:	29 8d       	ldd	r18, Y+25	; 0x19
    1610:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1612:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1614:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1616:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    161a:	dc 01       	movw	r26, r24
    161c:	cb 01       	movw	r24, r22
    161e:	9c 01       	movw	r18, r24
    1620:	ad 01       	movw	r20, r26
    1622:	6d 89       	ldd	r22, Y+21	; 0x15
    1624:	7e 89       	ldd	r23, Y+22	; 0x16
    1626:	8f 89       	ldd	r24, Y+23	; 0x17
    1628:	98 8d       	ldd	r25, Y+24	; 0x18
    162a:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    162e:	dc 01       	movw	r26, r24
    1630:	cb 01       	movw	r24, r22
    1632:	8d 8b       	std	Y+21, r24	; 0x15
    1634:	9e 8b       	std	Y+22, r25	; 0x16
    1636:	af 8b       	std	Y+23, r26	; 0x17
    1638:	b8 8f       	std	Y+24, r27	; 0x18

		accelerometerRead(acc_330);
    163a:	83 e3       	ldi	r24, 0x33	; 51
    163c:	92 e0       	ldi	r25, 0x02	; 2
    163e:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
		start = clockGetus();
    1642:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    1646:	dc 01       	movw	r26, r24
    1648:	cb 01       	movw	r24, r22
    164a:	8d 87       	std	Y+13, r24	; 0x0d
    164c:	9e 87       	std	Y+14, r25	; 0x0e
    164e:	af 87       	std	Y+15, r26	; 0x0f
    1650:	b8 8b       	std	Y+16, r27	; 0x10
		gyroRead(gyro_300);	
    1652:	8f e4       	ldi	r24, 0x4F	; 79
    1654:	92 e0       	ldi	r25, 0x02	; 2
    1656:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
		acc_x = (180*asin(acc_330.accelerometer.x_axis_mG/1000.0))/M_PI;
    165a:	80 91 3a 02 	lds	r24, 0x023A
    165e:	90 91 3b 02 	lds	r25, 0x023B
    1662:	aa 27       	eor	r26, r26
    1664:	97 fd       	sbrc	r25, 7
    1666:	a0 95       	com	r26
    1668:	ba 2f       	mov	r27, r26
    166a:	bc 01       	movw	r22, r24
    166c:	cd 01       	movw	r24, r26
    166e:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    1672:	dc 01       	movw	r26, r24
    1674:	cb 01       	movw	r24, r22
    1676:	bc 01       	movw	r22, r24
    1678:	cd 01       	movw	r24, r26
    167a:	20 e0       	ldi	r18, 0x00	; 0
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	4a e7       	ldi	r20, 0x7A	; 122
    1680:	54 e4       	ldi	r21, 0x44	; 68
    1682:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1686:	dc 01       	movw	r26, r24
    1688:	cb 01       	movw	r24, r22
    168a:	bc 01       	movw	r22, r24
    168c:	cd 01       	movw	r24, r26
    168e:	0e 94 41 23 	call	0x4682	; 0x4682 <asin>
    1692:	dc 01       	movw	r26, r24
    1694:	cb 01       	movw	r24, r22
    1696:	bc 01       	movw	r22, r24
    1698:	cd 01       	movw	r24, r26
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	30 e0       	ldi	r19, 0x00	; 0
    169e:	44 e3       	ldi	r20, 0x34	; 52
    16a0:	53 e4       	ldi	r21, 0x43	; 67
    16a2:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    16a6:	dc 01       	movw	r26, r24
    16a8:	cb 01       	movw	r24, r22
    16aa:	bc 01       	movw	r22, r24
    16ac:	cd 01       	movw	r24, r26
    16ae:	2b ed       	ldi	r18, 0xDB	; 219
    16b0:	3f e0       	ldi	r19, 0x0F	; 15
    16b2:	49 e4       	ldi	r20, 0x49	; 73
    16b4:	50 e4       	ldi	r21, 0x40	; 64
    16b6:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    16ba:	dc 01       	movw	r26, r24
    16bc:	cb 01       	movw	r24, r22
    16be:	8d 8f       	std	Y+29, r24	; 0x1d
    16c0:	9e 8f       	std	Y+30, r25	; 0x1e
    16c2:	af 8f       	std	Y+31, r26	; 0x1f
    16c4:	b8 a3       	std	Y+32, r27	; 0x20
		weight = sig/(sig + var_x);
    16c6:	80 91 62 02 	lds	r24, 0x0262
    16ca:	90 91 63 02 	lds	r25, 0x0263
    16ce:	a0 91 64 02 	lds	r26, 0x0264
    16d2:	b0 91 65 02 	lds	r27, 0x0265
    16d6:	bc 01       	movw	r22, r24
    16d8:	cd 01       	movw	r24, r26
    16da:	29 a1       	ldd	r18, Y+33	; 0x21
    16dc:	3a a1       	ldd	r19, Y+34	; 0x22
    16de:	4b a1       	ldd	r20, Y+35	; 0x23
    16e0:	5c a1       	ldd	r21, Y+36	; 0x24
    16e2:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    16e6:	dc 01       	movw	r26, r24
    16e8:	cb 01       	movw	r24, r22
    16ea:	9c 01       	movw	r18, r24
    16ec:	ad 01       	movw	r20, r26
    16ee:	69 a1       	ldd	r22, Y+33	; 0x21
    16f0:	7a a1       	ldd	r23, Y+34	; 0x22
    16f2:	8b a1       	ldd	r24, Y+35	; 0x23
    16f4:	9c a1       	ldd	r25, Y+36	; 0x24
    16f6:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    16fa:	dc 01       	movw	r26, r24
    16fc:	cb 01       	movw	r24, r22
    16fe:	8d a3       	std	Y+37, r24	; 0x25
    1700:	9e a3       	std	Y+38, r25	; 0x26
    1702:	af a3       	std	Y+39, r26	; 0x27
    1704:	b8 a7       	std	Y+40, r27	; 0x28
		est_x2 += weight*(acc_x - est_x2);
    1706:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1708:	7e 8d       	ldd	r23, Y+30	; 0x1e
    170a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    170c:	98 a1       	ldd	r25, Y+32	; 0x20
    170e:	29 89       	ldd	r18, Y+17	; 0x11
    1710:	3a 89       	ldd	r19, Y+18	; 0x12
    1712:	4b 89       	ldd	r20, Y+19	; 0x13
    1714:	5c 89       	ldd	r21, Y+20	; 0x14
    1716:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    171a:	dc 01       	movw	r26, r24
    171c:	cb 01       	movw	r24, r22
    171e:	bc 01       	movw	r22, r24
    1720:	cd 01       	movw	r24, r26
    1722:	2d a1       	ldd	r18, Y+37	; 0x25
    1724:	3e a1       	ldd	r19, Y+38	; 0x26
    1726:	4f a1       	ldd	r20, Y+39	; 0x27
    1728:	58 a5       	ldd	r21, Y+40	; 0x28
    172a:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    172e:	dc 01       	movw	r26, r24
    1730:	cb 01       	movw	r24, r22
    1732:	9c 01       	movw	r18, r24
    1734:	ad 01       	movw	r20, r26
    1736:	69 89       	ldd	r22, Y+17	; 0x11
    1738:	7a 89       	ldd	r23, Y+18	; 0x12
    173a:	8b 89       	ldd	r24, Y+19	; 0x13
    173c:	9c 89       	ldd	r25, Y+20	; 0x14
    173e:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1742:	dc 01       	movw	r26, r24
    1744:	cb 01       	movw	r24, r22
    1746:	89 8b       	std	Y+17, r24	; 0x11
    1748:	9a 8b       	std	Y+18, r25	; 0x12
    174a:	ab 8b       	std	Y+19, r26	; 0x13
    174c:	bc 8b       	std	Y+20, r27	; 0x14
		est_x += weight*(acc_x - est_x);
    174e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1750:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1752:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1754:	98 a1       	ldd	r25, Y+32	; 0x20
    1756:	2d 89       	ldd	r18, Y+21	; 0x15
    1758:	3e 89       	ldd	r19, Y+22	; 0x16
    175a:	4f 89       	ldd	r20, Y+23	; 0x17
    175c:	58 8d       	ldd	r21, Y+24	; 0x18
    175e:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    1762:	dc 01       	movw	r26, r24
    1764:	cb 01       	movw	r24, r22
    1766:	bc 01       	movw	r22, r24
    1768:	cd 01       	movw	r24, r26
    176a:	2d a1       	ldd	r18, Y+37	; 0x25
    176c:	3e a1       	ldd	r19, Y+38	; 0x26
    176e:	4f a1       	ldd	r20, Y+39	; 0x27
    1770:	58 a5       	ldd	r21, Y+40	; 0x28
    1772:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1776:	dc 01       	movw	r26, r24
    1778:	cb 01       	movw	r24, r22
    177a:	9c 01       	movw	r18, r24
    177c:	ad 01       	movw	r20, r26
    177e:	6d 89       	ldd	r22, Y+21	; 0x15
    1780:	7e 89       	ldd	r23, Y+22	; 0x16
    1782:	8f 89       	ldd	r24, Y+23	; 0x17
    1784:	98 8d       	ldd	r25, Y+24	; 0x18
    1786:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    178a:	dc 01       	movw	r26, r24
    178c:	cb 01       	movw	r24, r22
    178e:	8d 8b       	std	Y+21, r24	; 0x15
    1790:	9e 8b       	std	Y+22, r25	; 0x16
    1792:	af 8b       	std	Y+23, r26	; 0x17
    1794:	b8 8f       	std	Y+24, r27	; 0x18
		sig = (1 - weight)*sig;
    1796:	60 e0       	ldi	r22, 0x00	; 0
    1798:	70 e0       	ldi	r23, 0x00	; 0
    179a:	80 e8       	ldi	r24, 0x80	; 128
    179c:	9f e3       	ldi	r25, 0x3F	; 63
    179e:	2d a1       	ldd	r18, Y+37	; 0x25
    17a0:	3e a1       	ldd	r19, Y+38	; 0x26
    17a2:	4f a1       	ldd	r20, Y+39	; 0x27
    17a4:	58 a5       	ldd	r21, Y+40	; 0x28
    17a6:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    17aa:	dc 01       	movw	r26, r24
    17ac:	cb 01       	movw	r24, r22
    17ae:	9c 01       	movw	r18, r24
    17b0:	ad 01       	movw	r20, r26
    17b2:	69 a1       	ldd	r22, Y+33	; 0x21
    17b4:	7a a1       	ldd	r23, Y+34	; 0x22
    17b6:	8b a1       	ldd	r24, Y+35	; 0x23
    17b8:	9c a1       	ldd	r25, Y+36	; 0x24
    17ba:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    17be:	dc 01       	movw	r26, r24
    17c0:	cb 01       	movw	r24, r22
    17c2:	89 a3       	std	Y+33, r24	; 0x21
    17c4:	9a a3       	std	Y+34, r25	; 0x22
    17c6:	ab a3       	std	Y+35, r26	; 0x23
    17c8:	bc a3       	std	Y+36, r27	; 0x24

	TICK_COUNT start = clockGetus();
	TICK_COUNT end;
	float duration;

	for(float iter = 0; iter < 100; iter++){
    17ca:	69 81       	ldd	r22, Y+1	; 0x01
    17cc:	7a 81       	ldd	r23, Y+2	; 0x02
    17ce:	8b 81       	ldd	r24, Y+3	; 0x03
    17d0:	9c 81       	ldd	r25, Y+4	; 0x04
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	40 e8       	ldi	r20, 0x80	; 128
    17d8:	5f e3       	ldi	r21, 0x3F	; 63
    17da:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	89 83       	std	Y+1, r24	; 0x01
    17e4:	9a 83       	std	Y+2, r25	; 0x02
    17e6:	ab 83       	std	Y+3, r26	; 0x03
    17e8:	bc 83       	std	Y+4, r27	; 0x04
    17ea:	69 81       	ldd	r22, Y+1	; 0x01
    17ec:	7a 81       	ldd	r23, Y+2	; 0x02
    17ee:	8b 81       	ldd	r24, Y+3	; 0x03
    17f0:	9c 81       	ldd	r25, Y+4	; 0x04
    17f2:	20 e0       	ldi	r18, 0x00	; 0
    17f4:	30 e0       	ldi	r19, 0x00	; 0
    17f6:	48 ec       	ldi	r20, 0xC8	; 200
    17f8:	52 e4       	ldi	r21, 0x42	; 66
    17fa:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    17fe:	88 23       	and	r24, r24
    1800:	0c f4       	brge	.+2      	; 0x1804 <k_filter_x+0x39c>
    1802:	a7 ce       	rjmp	.-690    	; 0x1552 <k_filter_x+0xea>
		est_x2 += weight*(acc_x - est_x2);
		est_x += weight*(acc_x - est_x);
		sig = (1 - weight)*sig;
		}
//	rprintf("%d\t%d",(int16_t)est_x,(int16_t)est_x2);
	return est_x;
    1804:	6d 89       	ldd	r22, Y+21	; 0x15
    1806:	7e 89       	ldd	r23, Y+22	; 0x16
    1808:	8f 89       	ldd	r24, Y+23	; 0x17
    180a:	98 8d       	ldd	r25, Y+24	; 0x18
    180c:	0e 94 c4 23 	call	0x4788	; 0x4788 <__fixsfsi>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22

}
    1814:	a8 96       	adiw	r28, 0x28	; 40
    1816:	0f b6       	in	r0, 0x3f	; 63
    1818:	f8 94       	cli
    181a:	de bf       	out	0x3e, r29	; 62
    181c:	0f be       	out	0x3f, r0	; 63
    181e:	cd bf       	out	0x3d, r28	; 61
    1820:	cf 91       	pop	r28
    1822:	df 91       	pop	r29
    1824:	1f 91       	pop	r17
    1826:	0f 91       	pop	r16
    1828:	ff 90       	pop	r15
    182a:	ef 90       	pop	r14
    182c:	08 95       	ret

0000182e <k_filter_ang>:

int16_t k_filter_ang(){
    182e:	ef 92       	push	r14
    1830:	ff 92       	push	r15
    1832:	0f 93       	push	r16
    1834:	1f 93       	push	r17
    1836:	df 93       	push	r29
    1838:	cf 93       	push	r28
    183a:	cd b7       	in	r28, 0x3d	; 61
    183c:	de b7       	in	r29, 0x3e	; 62
    183e:	a8 97       	sbiw	r28, 0x28	; 40
    1840:	0f b6       	in	r0, 0x3f	; 63
    1842:	f8 94       	cli
    1844:	de bf       	out	0x3e, r29	; 62
    1846:	0f be       	out	0x3f, r0	; 63
    1848:	cd bf       	out	0x3d, r28	; 61

	accelerometerRead(acc_330);
    184a:	83 e3       	ldi	r24, 0x33	; 51
    184c:	92 e0       	ldi	r25, 0x02	; 2
    184e:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
	gyroRead(gyro_300);	
    1852:	8f e4       	ldi	r24, 0x4F	; 79
    1854:	92 e0       	ldi	r25, 0x02	; 2
    1856:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
	
	float weight, h;
	float sig = 100;
    185a:	80 e0       	ldi	r24, 0x00	; 0
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	a8 ec       	ldi	r26, 0xC8	; 200
    1860:	b2 e4       	ldi	r27, 0x42	; 66
    1862:	8d 8f       	std	Y+29, r24	; 0x1d
    1864:	9e 8f       	std	Y+30, r25	; 0x1e
    1866:	af 8f       	std	Y+31, r26	; 0x1f
    1868:	b8 a3       	std	Y+32, r27	; 0x20
	float acc_x = (180*asin(acc_330.accelerometer.x_axis_mG/1000.0))/M_PI;
    186a:	80 91 3a 02 	lds	r24, 0x023A
    186e:	90 91 3b 02 	lds	r25, 0x023B
    1872:	aa 27       	eor	r26, r26
    1874:	97 fd       	sbrc	r25, 7
    1876:	a0 95       	com	r26
    1878:	ba 2f       	mov	r27, r26
    187a:	bc 01       	movw	r22, r24
    187c:	cd 01       	movw	r24, r26
    187e:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    1882:	dc 01       	movw	r26, r24
    1884:	cb 01       	movw	r24, r22
    1886:	bc 01       	movw	r22, r24
    1888:	cd 01       	movw	r24, r26
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	4a e7       	ldi	r20, 0x7A	; 122
    1890:	54 e4       	ldi	r21, 0x44	; 68
    1892:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1896:	dc 01       	movw	r26, r24
    1898:	cb 01       	movw	r24, r22
    189a:	bc 01       	movw	r22, r24
    189c:	cd 01       	movw	r24, r26
    189e:	0e 94 41 23 	call	0x4682	; 0x4682 <asin>
    18a2:	dc 01       	movw	r26, r24
    18a4:	cb 01       	movw	r24, r22
    18a6:	bc 01       	movw	r22, r24
    18a8:	cd 01       	movw	r24, r26
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	44 e3       	ldi	r20, 0x34	; 52
    18b0:	53 e4       	ldi	r21, 0x43	; 67
    18b2:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    18b6:	dc 01       	movw	r26, r24
    18b8:	cb 01       	movw	r24, r22
    18ba:	bc 01       	movw	r22, r24
    18bc:	cd 01       	movw	r24, r26
    18be:	2b ed       	ldi	r18, 0xDB	; 219
    18c0:	3f e0       	ldi	r19, 0x0F	; 15
    18c2:	49 e4       	ldi	r20, 0x49	; 73
    18c4:	50 e4       	ldi	r21, 0x40	; 64
    18c6:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    18ca:	dc 01       	movw	r26, r24
    18cc:	cb 01       	movw	r24, r22
    18ce:	89 8f       	std	Y+25, r24	; 0x19
    18d0:	9a 8f       	std	Y+26, r25	; 0x1a
    18d2:	ab 8f       	std	Y+27, r26	; 0x1b
    18d4:	bc 8f       	std	Y+28, r27	; 0x1c
	float gyro_y = gyro_300.gyro.y_axis_degrees_per_second;
    18d6:	80 91 58 02 	lds	r24, 0x0258
    18da:	90 91 59 02 	lds	r25, 0x0259
    18de:	aa 27       	eor	r26, r26
    18e0:	97 fd       	sbrc	r25, 7
    18e2:	a0 95       	com	r26
    18e4:	ba 2f       	mov	r27, r26
    18e6:	bc 01       	movw	r22, r24
    18e8:	cd 01       	movw	r24, r26
    18ea:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    18ee:	dc 01       	movw	r26, r24
    18f0:	cb 01       	movw	r24, r22
    18f2:	8d 8b       	std	Y+21, r24	; 0x15
    18f4:	9e 8b       	std	Y+22, r25	; 0x16
    18f6:	af 8b       	std	Y+23, r26	; 0x17
    18f8:	b8 8f       	std	Y+24, r27	; 0x18
	float est_ang = acc_x;
    18fa:	89 8d       	ldd	r24, Y+25	; 0x19
    18fc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    18fe:	ab 8d       	ldd	r26, Y+27	; 0x1b
    1900:	bc 8d       	ldd	r27, Y+28	; 0x1c
    1902:	89 8b       	std	Y+17, r24	; 0x11
    1904:	9a 8b       	std	Y+18, r25	; 0x12
    1906:	ab 8b       	std	Y+19, r26	; 0x13
    1908:	bc 8b       	std	Y+20, r27	; 0x14
	//float est_vel = gyro_y;

	TICK_COUNT start = clockGetus();
    190a:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    190e:	dc 01       	movw	r26, r24
    1910:	cb 01       	movw	r24, r22
    1912:	8d 87       	std	Y+13, r24	; 0x0d
    1914:	9e 87       	std	Y+14, r25	; 0x0e
    1916:	af 87       	std	Y+15, r26	; 0x0f
    1918:	b8 8b       	std	Y+16, r27	; 0x10
	TICK_COUNT end;
	float duration;

	for(float iter = 0; iter < 100; iter++){
    191a:	80 e0       	ldi	r24, 0x00	; 0
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	a0 e0       	ldi	r26, 0x00	; 0
    1920:	b0 e0       	ldi	r27, 0x00	; 0
    1922:	89 83       	std	Y+1, r24	; 0x01
    1924:	9a 83       	std	Y+2, r25	; 0x02
    1926:	ab 83       	std	Y+3, r26	; 0x03
    1928:	bc 83       	std	Y+4, r27	; 0x04
    192a:	56 c1       	rjmp	.+684    	; 0x1bd8 <k_filter_ang+0x3aa>
	//while(1){
		gyro_y = gyro_300.gyro.y_axis_degrees_per_second;
    192c:	80 91 58 02 	lds	r24, 0x0258
    1930:	90 91 59 02 	lds	r25, 0x0259
    1934:	aa 27       	eor	r26, r26
    1936:	97 fd       	sbrc	r25, 7
    1938:	a0 95       	com	r26
    193a:	ba 2f       	mov	r27, r26
    193c:	bc 01       	movw	r22, r24
    193e:	cd 01       	movw	r24, r26
    1940:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    1944:	dc 01       	movw	r26, r24
    1946:	cb 01       	movw	r24, r22
    1948:	8d 8b       	std	Y+21, r24	; 0x15
    194a:	9e 8b       	std	Y+22, r25	; 0x16
    194c:	af 8b       	std	Y+23, r26	; 0x17
    194e:	b8 8f       	std	Y+24, r27	; 0x18
		sig += 0.001;
    1950:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1952:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1954:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1956:	98 a1       	ldd	r25, Y+32	; 0x20
    1958:	2f e6       	ldi	r18, 0x6F	; 111
    195a:	32 e1       	ldi	r19, 0x12	; 18
    195c:	43 e8       	ldi	r20, 0x83	; 131
    195e:	5a e3       	ldi	r21, 0x3A	; 58
    1960:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1964:	dc 01       	movw	r26, r24
    1966:	cb 01       	movw	r24, r22
    1968:	8d 8f       	std	Y+29, r24	; 0x1d
    196a:	9e 8f       	std	Y+30, r25	; 0x1e
    196c:	af 8f       	std	Y+31, r26	; 0x1f
    196e:	b8 a3       	std	Y+32, r27	; 0x20
		end = clockGetus();
    1970:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    1974:	dc 01       	movw	r26, r24
    1976:	cb 01       	movw	r24, r22
    1978:	89 87       	std	Y+9, r24	; 0x09
    197a:	9a 87       	std	Y+10, r25	; 0x0a
    197c:	ab 87       	std	Y+11, r26	; 0x0b
    197e:	bc 87       	std	Y+12, r27	; 0x0c
		duration = end - start;
    1980:	29 85       	ldd	r18, Y+9	; 0x09
    1982:	3a 85       	ldd	r19, Y+10	; 0x0a
    1984:	4b 85       	ldd	r20, Y+11	; 0x0b
    1986:	5c 85       	ldd	r21, Y+12	; 0x0c
    1988:	8d 85       	ldd	r24, Y+13	; 0x0d
    198a:	9e 85       	ldd	r25, Y+14	; 0x0e
    198c:	af 85       	ldd	r26, Y+15	; 0x0f
    198e:	b8 89       	ldd	r27, Y+16	; 0x10
    1990:	79 01       	movw	r14, r18
    1992:	8a 01       	movw	r16, r20
    1994:	e8 1a       	sub	r14, r24
    1996:	f9 0a       	sbc	r15, r25
    1998:	0a 0b       	sbc	r16, r26
    199a:	1b 0b       	sbc	r17, r27
    199c:	d8 01       	movw	r26, r16
    199e:	c7 01       	movw	r24, r14
    19a0:	bc 01       	movw	r22, r24
    19a2:	cd 01       	movw	r24, r26
    19a4:	0e 94 f5 23 	call	0x47ea	; 0x47ea <__floatunsisf>
    19a8:	dc 01       	movw	r26, r24
    19aa:	cb 01       	movw	r24, r22
    19ac:	8d 83       	std	Y+5, r24	; 0x05
    19ae:	9e 83       	std	Y+6, r25	; 0x06
    19b0:	af 83       	std	Y+7, r26	; 0x07
    19b2:	b8 87       	std	Y+8, r27	; 0x08
		est_ang += fma(duration,0.000001,0)*gyro_y;
    19b4:	8d 81       	ldd	r24, Y+5	; 0x05
    19b6:	9e 81       	ldd	r25, Y+6	; 0x06
    19b8:	af 81       	ldd	r26, Y+7	; 0x07
    19ba:	b8 85       	ldd	r27, Y+8	; 0x08
    19bc:	bc 01       	movw	r22, r24
    19be:	cd 01       	movw	r24, r26
    19c0:	2d eb       	ldi	r18, 0xBD	; 189
    19c2:	37 e3       	ldi	r19, 0x37	; 55
    19c4:	46 e8       	ldi	r20, 0x86	; 134
    19c6:	55 e3       	ldi	r21, 0x35	; 53
    19c8:	0f 2e       	mov	r0, r31
    19ca:	f0 e0       	ldi	r31, 0x00	; 0
    19cc:	ef 2e       	mov	r14, r31
    19ce:	f0 e0       	ldi	r31, 0x00	; 0
    19d0:	ff 2e       	mov	r15, r31
    19d2:	f0 e0       	ldi	r31, 0x00	; 0
    19d4:	0f 2f       	mov	r16, r31
    19d6:	f0 e0       	ldi	r31, 0x00	; 0
    19d8:	1f 2f       	mov	r17, r31
    19da:	f0 2d       	mov	r31, r0
    19dc:	0e 94 32 24 	call	0x4864	; 0x4864 <fma>
    19e0:	dc 01       	movw	r26, r24
    19e2:	cb 01       	movw	r24, r22
    19e4:	bc 01       	movw	r22, r24
    19e6:	cd 01       	movw	r24, r26
    19e8:	2d 89       	ldd	r18, Y+21	; 0x15
    19ea:	3e 89       	ldd	r19, Y+22	; 0x16
    19ec:	4f 89       	ldd	r20, Y+23	; 0x17
    19ee:	58 8d       	ldd	r21, Y+24	; 0x18
    19f0:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    19f4:	dc 01       	movw	r26, r24
    19f6:	cb 01       	movw	r24, r22
    19f8:	9c 01       	movw	r18, r24
    19fa:	ad 01       	movw	r20, r26
    19fc:	69 89       	ldd	r22, Y+17	; 0x11
    19fe:	7a 89       	ldd	r23, Y+18	; 0x12
    1a00:	8b 89       	ldd	r24, Y+19	; 0x13
    1a02:	9c 89       	ldd	r25, Y+20	; 0x14
    1a04:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1a08:	dc 01       	movw	r26, r24
    1a0a:	cb 01       	movw	r24, r22
    1a0c:	89 8b       	std	Y+17, r24	; 0x11
    1a0e:	9a 8b       	std	Y+18, r25	; 0x12
    1a10:	ab 8b       	std	Y+19, r26	; 0x13
    1a12:	bc 8b       	std	Y+20, r27	; 0x14

		accelerometerRead(acc_330);
    1a14:	83 e3       	ldi	r24, 0x33	; 51
    1a16:	92 e0       	ldi	r25, 0x02	; 2
    1a18:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
		start = clockGetus();
    1a1c:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    1a20:	dc 01       	movw	r26, r24
    1a22:	cb 01       	movw	r24, r22
    1a24:	8d 87       	std	Y+13, r24	; 0x0d
    1a26:	9e 87       	std	Y+14, r25	; 0x0e
    1a28:	af 87       	std	Y+15, r26	; 0x0f
    1a2a:	b8 8b       	std	Y+16, r27	; 0x10
		gyroRead(gyro_300);	
    1a2c:	8f e4       	ldi	r24, 0x4F	; 79
    1a2e:	92 e0       	ldi	r25, 0x02	; 2
    1a30:	0e 94 ba 0f 	call	0x1f74	; 0x1f74 <_sensorRead_>
		acc_x = (180*asin(acc_330.accelerometer.x_axis_mG/1000.0))/M_PI;
    1a34:	80 91 3a 02 	lds	r24, 0x023A
    1a38:	90 91 3b 02 	lds	r25, 0x023B
    1a3c:	aa 27       	eor	r26, r26
    1a3e:	97 fd       	sbrc	r25, 7
    1a40:	a0 95       	com	r26
    1a42:	ba 2f       	mov	r27, r26
    1a44:	bc 01       	movw	r22, r24
    1a46:	cd 01       	movw	r24, r26
    1a48:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    1a4c:	dc 01       	movw	r26, r24
    1a4e:	cb 01       	movw	r24, r22
    1a50:	bc 01       	movw	r22, r24
    1a52:	cd 01       	movw	r24, r26
    1a54:	20 e0       	ldi	r18, 0x00	; 0
    1a56:	30 e0       	ldi	r19, 0x00	; 0
    1a58:	4a e7       	ldi	r20, 0x7A	; 122
    1a5a:	54 e4       	ldi	r21, 0x44	; 68
    1a5c:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1a60:	dc 01       	movw	r26, r24
    1a62:	cb 01       	movw	r24, r22
    1a64:	bc 01       	movw	r22, r24
    1a66:	cd 01       	movw	r24, r26
    1a68:	0e 94 41 23 	call	0x4682	; 0x4682 <asin>
    1a6c:	dc 01       	movw	r26, r24
    1a6e:	cb 01       	movw	r24, r22
    1a70:	bc 01       	movw	r22, r24
    1a72:	cd 01       	movw	r24, r26
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	44 e3       	ldi	r20, 0x34	; 52
    1a7a:	53 e4       	ldi	r21, 0x43	; 67
    1a7c:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1a80:	dc 01       	movw	r26, r24
    1a82:	cb 01       	movw	r24, r22
    1a84:	bc 01       	movw	r22, r24
    1a86:	cd 01       	movw	r24, r26
    1a88:	2b ed       	ldi	r18, 0xDB	; 219
    1a8a:	3f e0       	ldi	r19, 0x0F	; 15
    1a8c:	49 e4       	ldi	r20, 0x49	; 73
    1a8e:	50 e4       	ldi	r21, 0x40	; 64
    1a90:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1a94:	dc 01       	movw	r26, r24
    1a96:	cb 01       	movw	r24, r22
    1a98:	89 8f       	std	Y+25, r24	; 0x19
    1a9a:	9a 8f       	std	Y+26, r25	; 0x1a
    1a9c:	ab 8f       	std	Y+27, r26	; 0x1b
    1a9e:	bc 8f       	std	Y+28, r27	; 0x1c
		//h = (180/M_PI)/(sqrt(1 - square(acc_330.accelerometer.x_axis_mG/1000.0)));
		h = 1;
    1aa0:	80 e0       	ldi	r24, 0x00	; 0
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	a0 e8       	ldi	r26, 0x80	; 128
    1aa6:	bf e3       	ldi	r27, 0x3F	; 63
    1aa8:	89 a3       	std	Y+33, r24	; 0x21
    1aaa:	9a a3       	std	Y+34, r25	; 0x22
    1aac:	ab a3       	std	Y+35, r26	; 0x23
    1aae:	bc a3       	std	Y+36, r27	; 0x24
		weight = h*sig/(square(h)*sig + var_x);
    1ab0:	69 a1       	ldd	r22, Y+33	; 0x21
    1ab2:	7a a1       	ldd	r23, Y+34	; 0x22
    1ab4:	8b a1       	ldd	r24, Y+35	; 0x23
    1ab6:	9c a1       	ldd	r25, Y+36	; 0x24
    1ab8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1aba:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1abc:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1abe:	58 a1       	ldd	r21, Y+32	; 0x20
    1ac0:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1ac4:	dc 01       	movw	r26, r24
    1ac6:	cb 01       	movw	r24, r22
    1ac8:	7c 01       	movw	r14, r24
    1aca:	8d 01       	movw	r16, r26
    1acc:	89 a1       	ldd	r24, Y+33	; 0x21
    1ace:	9a a1       	ldd	r25, Y+34	; 0x22
    1ad0:	ab a1       	ldd	r26, Y+35	; 0x23
    1ad2:	bc a1       	ldd	r27, Y+36	; 0x24
    1ad4:	bc 01       	movw	r22, r24
    1ad6:	cd 01       	movw	r24, r26
    1ad8:	0e 94 b3 25 	call	0x4b66	; 0x4b66 <square>
    1adc:	dc 01       	movw	r26, r24
    1ade:	cb 01       	movw	r24, r22
    1ae0:	bc 01       	movw	r22, r24
    1ae2:	cd 01       	movw	r24, r26
    1ae4:	2d 8d       	ldd	r18, Y+29	; 0x1d
    1ae6:	3e 8d       	ldd	r19, Y+30	; 0x1e
    1ae8:	4f 8d       	ldd	r20, Y+31	; 0x1f
    1aea:	58 a1       	ldd	r21, Y+32	; 0x20
    1aec:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1af0:	dc 01       	movw	r26, r24
    1af2:	cb 01       	movw	r24, r22
    1af4:	20 91 62 02 	lds	r18, 0x0262
    1af8:	30 91 63 02 	lds	r19, 0x0263
    1afc:	40 91 64 02 	lds	r20, 0x0264
    1b00:	50 91 65 02 	lds	r21, 0x0265
    1b04:	bc 01       	movw	r22, r24
    1b06:	cd 01       	movw	r24, r26
    1b08:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1b0c:	dc 01       	movw	r26, r24
    1b0e:	cb 01       	movw	r24, r22
    1b10:	9c 01       	movw	r18, r24
    1b12:	ad 01       	movw	r20, r26
    1b14:	c8 01       	movw	r24, r16
    1b16:	b7 01       	movw	r22, r14
    1b18:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    1b1c:	dc 01       	movw	r26, r24
    1b1e:	cb 01       	movw	r24, r22
    1b20:	8d a3       	std	Y+37, r24	; 0x25
    1b22:	9e a3       	std	Y+38, r25	; 0x26
    1b24:	af a3       	std	Y+39, r26	; 0x27
    1b26:	b8 a7       	std	Y+40, r27	; 0x28
		est_ang += weight*(acc_x - est_ang);
    1b28:	69 8d       	ldd	r22, Y+25	; 0x19
    1b2a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1b2c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1b2e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1b30:	29 89       	ldd	r18, Y+17	; 0x11
    1b32:	3a 89       	ldd	r19, Y+18	; 0x12
    1b34:	4b 89       	ldd	r20, Y+19	; 0x13
    1b36:	5c 89       	ldd	r21, Y+20	; 0x14
    1b38:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    1b3c:	dc 01       	movw	r26, r24
    1b3e:	cb 01       	movw	r24, r22
    1b40:	bc 01       	movw	r22, r24
    1b42:	cd 01       	movw	r24, r26
    1b44:	2d a1       	ldd	r18, Y+37	; 0x25
    1b46:	3e a1       	ldd	r19, Y+38	; 0x26
    1b48:	4f a1       	ldd	r20, Y+39	; 0x27
    1b4a:	58 a5       	ldd	r21, Y+40	; 0x28
    1b4c:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1b50:	dc 01       	movw	r26, r24
    1b52:	cb 01       	movw	r24, r22
    1b54:	9c 01       	movw	r18, r24
    1b56:	ad 01       	movw	r20, r26
    1b58:	69 89       	ldd	r22, Y+17	; 0x11
    1b5a:	7a 89       	ldd	r23, Y+18	; 0x12
    1b5c:	8b 89       	ldd	r24, Y+19	; 0x13
    1b5e:	9c 89       	ldd	r25, Y+20	; 0x14
    1b60:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1b64:	dc 01       	movw	r26, r24
    1b66:	cb 01       	movw	r24, r22
    1b68:	89 8b       	std	Y+17, r24	; 0x11
    1b6a:	9a 8b       	std	Y+18, r25	; 0x12
    1b6c:	ab 8b       	std	Y+19, r26	; 0x13
    1b6e:	bc 8b       	std	Y+20, r27	; 0x14
		sig = (1 - h*weight)*sig;
    1b70:	69 a1       	ldd	r22, Y+33	; 0x21
    1b72:	7a a1       	ldd	r23, Y+34	; 0x22
    1b74:	8b a1       	ldd	r24, Y+35	; 0x23
    1b76:	9c a1       	ldd	r25, Y+36	; 0x24
    1b78:	2d a1       	ldd	r18, Y+37	; 0x25
    1b7a:	3e a1       	ldd	r19, Y+38	; 0x26
    1b7c:	4f a1       	ldd	r20, Y+39	; 0x27
    1b7e:	58 a5       	ldd	r21, Y+40	; 0x28
    1b80:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1b84:	dc 01       	movw	r26, r24
    1b86:	cb 01       	movw	r24, r22
    1b88:	9c 01       	movw	r18, r24
    1b8a:	ad 01       	movw	r20, r26
    1b8c:	60 e0       	ldi	r22, 0x00	; 0
    1b8e:	70 e0       	ldi	r23, 0x00	; 0
    1b90:	80 e8       	ldi	r24, 0x80	; 128
    1b92:	9f e3       	ldi	r25, 0x3F	; 63
    1b94:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    1b98:	dc 01       	movw	r26, r24
    1b9a:	cb 01       	movw	r24, r22
    1b9c:	9c 01       	movw	r18, r24
    1b9e:	ad 01       	movw	r20, r26
    1ba0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ba2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1ba4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ba6:	98 a1       	ldd	r25, Y+32	; 0x20
    1ba8:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    1bac:	dc 01       	movw	r26, r24
    1bae:	cb 01       	movw	r24, r22
    1bb0:	8d 8f       	std	Y+29, r24	; 0x1d
    1bb2:	9e 8f       	std	Y+30, r25	; 0x1e
    1bb4:	af 8f       	std	Y+31, r26	; 0x1f
    1bb6:	b8 a3       	std	Y+32, r27	; 0x20

	TICK_COUNT start = clockGetus();
	TICK_COUNT end;
	float duration;

	for(float iter = 0; iter < 100; iter++){
    1bb8:	69 81       	ldd	r22, Y+1	; 0x01
    1bba:	7a 81       	ldd	r23, Y+2	; 0x02
    1bbc:	8b 81       	ldd	r24, Y+3	; 0x03
    1bbe:	9c 81       	ldd	r25, Y+4	; 0x04
    1bc0:	20 e0       	ldi	r18, 0x00	; 0
    1bc2:	30 e0       	ldi	r19, 0x00	; 0
    1bc4:	40 e8       	ldi	r20, 0x80	; 128
    1bc6:	5f e3       	ldi	r21, 0x3F	; 63
    1bc8:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1bcc:	dc 01       	movw	r26, r24
    1bce:	cb 01       	movw	r24, r22
    1bd0:	89 83       	std	Y+1, r24	; 0x01
    1bd2:	9a 83       	std	Y+2, r25	; 0x02
    1bd4:	ab 83       	std	Y+3, r26	; 0x03
    1bd6:	bc 83       	std	Y+4, r27	; 0x04
    1bd8:	69 81       	ldd	r22, Y+1	; 0x01
    1bda:	7a 81       	ldd	r23, Y+2	; 0x02
    1bdc:	8b 81       	ldd	r24, Y+3	; 0x03
    1bde:	9c 81       	ldd	r25, Y+4	; 0x04
    1be0:	20 e0       	ldi	r18, 0x00	; 0
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	48 ec       	ldi	r20, 0xC8	; 200
    1be6:	52 e4       	ldi	r21, 0x42	; 66
    1be8:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    1bec:	88 23       	and	r24, r24
    1bee:	0c f4       	brge	.+2      	; 0x1bf2 <k_filter_ang+0x3c4>
    1bf0:	9d ce       	rjmp	.-710    	; 0x192c <k_filter_ang+0xfe>
		
		//rprintf("%d\n",(int16_t)est_ang);
		//delay_us(5000);
	}

	return est_ang;
    1bf2:	69 89       	ldd	r22, Y+17	; 0x11
    1bf4:	7a 89       	ldd	r23, Y+18	; 0x12
    1bf6:	8b 89       	ldd	r24, Y+19	; 0x13
    1bf8:	9c 89       	ldd	r25, Y+20	; 0x14
    1bfa:	0e 94 c4 23 	call	0x4788	; 0x4788 <__fixsfsi>
    1bfe:	dc 01       	movw	r26, r24
    1c00:	cb 01       	movw	r24, r22

}
    1c02:	a8 96       	adiw	r28, 0x28	; 40
    1c04:	0f b6       	in	r0, 0x3f	; 63
    1c06:	f8 94       	cli
    1c08:	de bf       	out	0x3e, r29	; 62
    1c0a:	0f be       	out	0x3f, r0	; 63
    1c0c:	cd bf       	out	0x3d, r28	; 61
    1c0e:	cf 91       	pop	r28
    1c10:	df 91       	pop	r29
    1c12:	1f 91       	pop	r17
    1c14:	0f 91       	pop	r16
    1c16:	ff 90       	pop	r15
    1c18:	ef 90       	pop	r14
    1c1a:	08 95       	ret

00001c1c <appControl>:
int16_t sum = 0;
char adj;
float iter = 0;

// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {
    1c1c:	0f 93       	push	r16
    1c1e:	1f 93       	push	r17
    1c20:	df 93       	push	r29
    1c22:	cf 93       	push	r28
    1c24:	cd b7       	in	r28, 0x3d	; 61
    1c26:	de b7       	in	r29, 0x3e	; 62
    1c28:	28 97       	sbiw	r28, 0x08	; 8
    1c2a:	0f b6       	in	r0, 0x3f	; 63
    1c2c:	f8 94       	cli
    1c2e:	de bf       	out	0x3e, r29	; 62
    1c30:	0f be       	out	0x3f, r0	; 63
    1c32:	cd bf       	out	0x3d, r28	; 61
    1c34:	69 83       	std	Y+1, r22	; 0x01
    1c36:	7a 83       	std	Y+2, r23	; 0x02
    1c38:	8b 83       	std	Y+3, r24	; 0x03
    1c3a:	9c 83       	std	Y+4, r25	; 0x04
    1c3c:	2d 83       	std	Y+5, r18	; 0x05
    1c3e:	3e 83       	std	Y+6, r19	; 0x06
    1c40:	4f 83       	std	Y+7, r20	; 0x07
    1c42:	58 87       	std	Y+8, r21	; 0x08

	// -------- Start Switch/Button-------
	// Switch/Button - see switch.h
	
	// To test if it is pressed then
	if(SWITCH_pressed(&button)){
    1c44:	81 e3       	ldi	r24, 0x31	; 49
    1c46:	92 e0       	ldi	r25, 0x02	; 2
    1c48:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <SWITCH_pressed>
		// pressed
	}
	
	// To test if it is released then
	if(SWITCH_released(&button)){
    1c4c:	81 e3       	ldi	r24, 0x31	; 49
    1c4e:	92 e0       	ldi	r25, 0x02	; 2
    1c50:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <SWITCH_released>
//	rprintf("MAX Z: %d\tMIN Z: %d",max_z, min_z);
//	rprintf("%d",a2dConvert8bit(adc0));
	//rprintf("%d",x/10 + 50);
	//delay_ms(10);
	//sum = k_filter_x();
	rprintf("%d",k_filter_ang());
    1c54:	08 ed       	ldi	r16, 0xD8	; 216
    1c56:	13 e0       	ldi	r17, 0x03	; 3
    1c58:	0e 94 17 0c 	call	0x182e	; 0x182e <k_filter_ang>
    1c5c:	9c 01       	movw	r18, r24
    1c5e:	00 d0       	rcall	.+0      	; 0x1c60 <appControl+0x44>
    1c60:	00 d0       	rcall	.+0      	; 0x1c62 <appControl+0x46>
    1c62:	0f 92       	push	r0
    1c64:	ed b7       	in	r30, 0x3d	; 61
    1c66:	fe b7       	in	r31, 0x3e	; 62
    1c68:	31 96       	adiw	r30, 0x01	; 1
    1c6a:	81 e0       	ldi	r24, 0x01	; 1
    1c6c:	80 83       	st	Z, r24
    1c6e:	12 83       	std	Z+2, r17	; 0x02
    1c70:	01 83       	std	Z+1, r16	; 0x01
    1c72:	34 83       	std	Z+4, r19	; 0x04
    1c74:	23 83       	std	Z+3, r18	; 0x03
    1c76:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    1c7a:	0f 90       	pop	r0
    1c7c:	0f 90       	pop	r0
    1c7e:	0f 90       	pop	r0
    1c80:	0f 90       	pop	r0
    1c82:	0f 90       	pop	r0
	//rprintfFloat(5, (float)k_filter_x());
	adj = uart1GetByte();
    1c84:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <uart1GetByte>
    1c88:	80 93 38 03 	sts	0x0338, r24
	if(adj == 'p'){ var_x+= 10;}
    1c8c:	80 91 38 03 	lds	r24, 0x0338
    1c90:	80 37       	cpi	r24, 0x70	; 112
    1c92:	d9 f4       	brne	.+54     	; 0x1cca <appControl+0xae>
    1c94:	80 91 62 02 	lds	r24, 0x0262
    1c98:	90 91 63 02 	lds	r25, 0x0263
    1c9c:	a0 91 64 02 	lds	r26, 0x0264
    1ca0:	b0 91 65 02 	lds	r27, 0x0265
    1ca4:	bc 01       	movw	r22, r24
    1ca6:	cd 01       	movw	r24, r26
    1ca8:	20 e0       	ldi	r18, 0x00	; 0
    1caa:	30 e0       	ldi	r19, 0x00	; 0
    1cac:	40 e2       	ldi	r20, 0x20	; 32
    1cae:	51 e4       	ldi	r21, 0x41	; 65
    1cb0:	0e 94 dd 22 	call	0x45ba	; 0x45ba <__addsf3>
    1cb4:	dc 01       	movw	r26, r24
    1cb6:	cb 01       	movw	r24, r22
    1cb8:	80 93 62 02 	sts	0x0262, r24
    1cbc:	90 93 63 02 	sts	0x0263, r25
    1cc0:	a0 93 64 02 	sts	0x0264, r26
    1cc4:	b0 93 65 02 	sts	0x0265, r27
    1cc8:	1e c0       	rjmp	.+60     	; 0x1d06 <appControl+0xea>
	else if(adj == 'l'){ var_x -= 10;}
    1cca:	80 91 38 03 	lds	r24, 0x0338
    1cce:	8c 36       	cpi	r24, 0x6C	; 108
    1cd0:	d1 f4       	brne	.+52     	; 0x1d06 <appControl+0xea>
    1cd2:	80 91 62 02 	lds	r24, 0x0262
    1cd6:	90 91 63 02 	lds	r25, 0x0263
    1cda:	a0 91 64 02 	lds	r26, 0x0264
    1cde:	b0 91 65 02 	lds	r27, 0x0265
    1ce2:	bc 01       	movw	r22, r24
    1ce4:	cd 01       	movw	r24, r26
    1ce6:	20 e0       	ldi	r18, 0x00	; 0
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	40 e2       	ldi	r20, 0x20	; 32
    1cec:	51 e4       	ldi	r21, 0x41	; 65
    1cee:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    1cf2:	dc 01       	movw	r26, r24
    1cf4:	cb 01       	movw	r24, r22
    1cf6:	80 93 62 02 	sts	0x0262, r24
    1cfa:	90 93 63 02 	sts	0x0263, r25
    1cfe:	a0 93 64 02 	sts	0x0264, r26
    1d02:	b0 93 65 02 	sts	0x0265, r27
//	accelerometerDump(acc_330);
	rprintfCRLF();
    1d06:	0e 94 f7 14 	call	0x29ee	; 0x29ee <rprintfCRLF>
	// -------- End   ADXL335 3 Axis Accelerometer-------

	return 0;
    1d0a:	80 e0       	ldi	r24, 0x00	; 0
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	a0 e0       	ldi	r26, 0x00	; 0
    1d10:	b0 e0       	ldi	r27, 0x00	; 0
}
    1d12:	bc 01       	movw	r22, r24
    1d14:	cd 01       	movw	r24, r26
    1d16:	28 96       	adiw	r28, 0x08	; 8
    1d18:	0f b6       	in	r0, 0x3f	; 63
    1d1a:	f8 94       	cli
    1d1c:	de bf       	out	0x3e, r29	; 62
    1d1e:	0f be       	out	0x3f, r0	; 63
    1d20:	cd bf       	out	0x3d, r28	; 61
    1d22:	cf 91       	pop	r28
    1d24:	df 91       	pop	r29
    1d26:	1f 91       	pop	r17
    1d28:	0f 91       	pop	r16
    1d2a:	08 95       	ret

00001d2c <SWITCH_pressed>:
	const IOPin* pin;
} SWITCH;

#define MAKE_SWITCH(pin) {pin}

static __inline__ boolean SWITCH_pressed(SWITCH* sw){
    1d2c:	df 93       	push	r29
    1d2e:	cf 93       	push	r28
    1d30:	00 d0       	rcall	.+0      	; 0x1d32 <SWITCH_pressed+0x6>
    1d32:	0f 92       	push	r0
    1d34:	cd b7       	in	r28, 0x3d	; 61
    1d36:	de b7       	in	r29, 0x3e	; 62
    1d38:	9a 83       	std	Y+2, r25	; 0x02
    1d3a:	89 83       	std	Y+1, r24	; 0x01
	return pin_is_low(sw->pin);
    1d3c:	e9 81       	ldd	r30, Y+1	; 0x01
    1d3e:	fa 81       	ldd	r31, Y+2	; 0x02
    1d40:	80 81       	ld	r24, Z
    1d42:	91 81       	ldd	r25, Z+1	; 0x01
    1d44:	0e 94 9c 13 	call	0x2738	; 0x2738 <pin_is_high>
    1d48:	1b 82       	std	Y+3, r1	; 0x03
    1d4a:	88 23       	and	r24, r24
    1d4c:	11 f4       	brne	.+4      	; 0x1d52 <SWITCH_pressed+0x26>
    1d4e:	81 e0       	ldi	r24, 0x01	; 1
    1d50:	8b 83       	std	Y+3, r24	; 0x03
    1d52:	8b 81       	ldd	r24, Y+3	; 0x03
}
    1d54:	0f 90       	pop	r0
    1d56:	0f 90       	pop	r0
    1d58:	0f 90       	pop	r0
    1d5a:	cf 91       	pop	r28
    1d5c:	df 91       	pop	r29
    1d5e:	08 95       	ret

00001d60 <SWITCH_released>:

static __inline__ boolean SWITCH_released(SWITCH* sw){
    1d60:	df 93       	push	r29
    1d62:	cf 93       	push	r28
    1d64:	00 d0       	rcall	.+0      	; 0x1d66 <SWITCH_released+0x6>
    1d66:	cd b7       	in	r28, 0x3d	; 61
    1d68:	de b7       	in	r29, 0x3e	; 62
    1d6a:	9a 83       	std	Y+2, r25	; 0x02
    1d6c:	89 83       	std	Y+1, r24	; 0x01
	return pin_is_high(sw->pin);
    1d6e:	e9 81       	ldd	r30, Y+1	; 0x01
    1d70:	fa 81       	ldd	r31, Y+2	; 0x02
    1d72:	80 81       	ld	r24, Z
    1d74:	91 81       	ldd	r25, Z+1	; 0x01
    1d76:	0e 94 9c 13 	call	0x2738	; 0x2738 <pin_is_high>
}
    1d7a:	0f 90       	pop	r0
    1d7c:	0f 90       	pop	r0
    1d7e:	cf 91       	pop	r28
    1d80:	df 91       	pop	r29
    1d82:	08 95       	ret

00001d84 <__read_channel>:
    1d84:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <a2dReadMv>
    1d88:	82 57       	subi	r24, 0x72	; 114
    1d8a:	96 40       	sbci	r25, 0x06	; 6
    1d8c:	aa 27       	eor	r26, r26
    1d8e:	97 fd       	sbrc	r25, 7
    1d90:	a0 95       	com	r26
    1d92:	ba 2f       	mov	r27, r26
    1d94:	bc 01       	movw	r22, r24
    1d96:	cd 01       	movw	r24, r26
    1d98:	28 ee       	ldi	r18, 0xE8	; 232
    1d9a:	33 e0       	ldi	r19, 0x03	; 3
    1d9c:	40 e0       	ldi	r20, 0x00	; 0
    1d9e:	50 e0       	ldi	r21, 0x00	; 0
    1da0:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    1da4:	2a e4       	ldi	r18, 0x4A	; 74
    1da6:	31 e0       	ldi	r19, 0x01	; 1
    1da8:	40 e0       	ldi	r20, 0x00	; 0
    1daa:	50 e0       	ldi	r21, 0x00	; 0
    1dac:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divmodsi4>
    1db0:	c9 01       	movw	r24, r18
    1db2:	08 95       	ret

00001db4 <__ad_adxl335_read>:
    1db4:	ff 92       	push	r15
    1db6:	0f 93       	push	r16
    1db8:	1f 93       	push	r17
    1dba:	f9 2e       	mov	r15, r25
    1dbc:	08 2f       	mov	r16, r24
    1dbe:	19 2f       	mov	r17, r25
    1dc0:	f8 01       	movw	r30, r16
    1dc2:	81 8d       	ldd	r24, Z+25	; 0x19
    1dc4:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <__read_channel>
    1dc8:	bc 01       	movw	r22, r24
    1dca:	80 2f       	mov	r24, r16
    1dcc:	9f 2d       	mov	r25, r15
    1dce:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <__accelerometerSetX>
    1dd2:	f8 01       	movw	r30, r16
    1dd4:	82 8d       	ldd	r24, Z+26	; 0x1a
    1dd6:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <__read_channel>
    1dda:	bc 01       	movw	r22, r24
    1ddc:	80 2f       	mov	r24, r16
    1dde:	9f 2d       	mov	r25, r15
    1de0:	0e 94 2a 0f 	call	0x1e54	; 0x1e54 <__accelerometerSetY>
    1de4:	f8 01       	movw	r30, r16
    1de6:	83 8d       	ldd	r24, Z+27	; 0x1b
    1de8:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <__read_channel>
    1dec:	bc 01       	movw	r22, r24
    1dee:	80 2f       	mov	r24, r16
    1df0:	9f 2d       	mov	r25, r15
    1df2:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__accelerometerSetZ>
    1df6:	1f 91       	pop	r17
    1df8:	0f 91       	pop	r16
    1dfa:	ff 90       	pop	r15
    1dfc:	08 95       	ret

00001dfe <__accelerometerCalibrateX>:
    1dfe:	fc 01       	movw	r30, r24
    1e00:	76 87       	std	Z+14, r23	; 0x0e
    1e02:	65 87       	std	Z+13, r22	; 0x0d
    1e04:	50 8b       	std	Z+16, r21	; 0x10
    1e06:	47 87       	std	Z+15, r20	; 0x0f
    1e08:	08 95       	ret

00001e0a <__accelerometerCalibrateY>:
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	72 8b       	std	Z+18, r23	; 0x12
    1e0e:	61 8b       	std	Z+17, r22	; 0x11
    1e10:	54 8b       	std	Z+20, r21	; 0x14
    1e12:	43 8b       	std	Z+19, r20	; 0x13
    1e14:	08 95       	ret

00001e16 <__accelerometerCalibrateZ>:
    1e16:	fc 01       	movw	r30, r24
    1e18:	76 8b       	std	Z+22, r23	; 0x16
    1e1a:	65 8b       	std	Z+21, r22	; 0x15
    1e1c:	50 8f       	std	Z+24, r21	; 0x18
    1e1e:	47 8b       	std	Z+23, r20	; 0x17
    1e20:	08 95       	ret

00001e22 <__accelerometerSetZ>:
    1e22:	ef 92       	push	r14
    1e24:	ff 92       	push	r15
    1e26:	0f 93       	push	r16
    1e28:	1f 93       	push	r17
    1e2a:	7c 01       	movw	r14, r24
    1e2c:	cb 01       	movw	r24, r22
    1e2e:	f7 01       	movw	r30, r14
    1e30:	65 89       	ldd	r22, Z+21	; 0x15
    1e32:	76 89       	ldd	r23, Z+22	; 0x16
    1e34:	47 89       	ldd	r20, Z+23	; 0x17
    1e36:	50 8d       	ldd	r21, Z+24	; 0x18
    1e38:	28 e1       	ldi	r18, 0x18	; 24
    1e3a:	3c ef       	ldi	r19, 0xFC	; 252
    1e3c:	08 ee       	ldi	r16, 0xE8	; 232
    1e3e:	13 e0       	ldi	r17, 0x03	; 3
    1e40:	0e 94 14 13 	call	0x2628	; 0x2628 <interpolate>
    1e44:	f7 01       	movw	r30, r14
    1e46:	94 87       	std	Z+12, r25	; 0x0c
    1e48:	83 87       	std	Z+11, r24	; 0x0b
    1e4a:	1f 91       	pop	r17
    1e4c:	0f 91       	pop	r16
    1e4e:	ff 90       	pop	r15
    1e50:	ef 90       	pop	r14
    1e52:	08 95       	ret

00001e54 <__accelerometerSetY>:
    1e54:	ef 92       	push	r14
    1e56:	ff 92       	push	r15
    1e58:	0f 93       	push	r16
    1e5a:	1f 93       	push	r17
    1e5c:	7c 01       	movw	r14, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	f7 01       	movw	r30, r14
    1e62:	61 89       	ldd	r22, Z+17	; 0x11
    1e64:	72 89       	ldd	r23, Z+18	; 0x12
    1e66:	43 89       	ldd	r20, Z+19	; 0x13
    1e68:	54 89       	ldd	r21, Z+20	; 0x14
    1e6a:	28 e1       	ldi	r18, 0x18	; 24
    1e6c:	3c ef       	ldi	r19, 0xFC	; 252
    1e6e:	08 ee       	ldi	r16, 0xE8	; 232
    1e70:	13 e0       	ldi	r17, 0x03	; 3
    1e72:	0e 94 14 13 	call	0x2628	; 0x2628 <interpolate>
    1e76:	f7 01       	movw	r30, r14
    1e78:	92 87       	std	Z+10, r25	; 0x0a
    1e7a:	81 87       	std	Z+9, r24	; 0x09
    1e7c:	1f 91       	pop	r17
    1e7e:	0f 91       	pop	r16
    1e80:	ff 90       	pop	r15
    1e82:	ef 90       	pop	r14
    1e84:	08 95       	ret

00001e86 <__accelerometerSetX>:
    1e86:	ef 92       	push	r14
    1e88:	ff 92       	push	r15
    1e8a:	0f 93       	push	r16
    1e8c:	1f 93       	push	r17
    1e8e:	7c 01       	movw	r14, r24
    1e90:	cb 01       	movw	r24, r22
    1e92:	f7 01       	movw	r30, r14
    1e94:	65 85       	ldd	r22, Z+13	; 0x0d
    1e96:	76 85       	ldd	r23, Z+14	; 0x0e
    1e98:	47 85       	ldd	r20, Z+15	; 0x0f
    1e9a:	50 89       	ldd	r21, Z+16	; 0x10
    1e9c:	28 e1       	ldi	r18, 0x18	; 24
    1e9e:	3c ef       	ldi	r19, 0xFC	; 252
    1ea0:	08 ee       	ldi	r16, 0xE8	; 232
    1ea2:	13 e0       	ldi	r17, 0x03	; 3
    1ea4:	0e 94 14 13 	call	0x2628	; 0x2628 <interpolate>
    1ea8:	f7 01       	movw	r30, r14
    1eaa:	90 87       	std	Z+8, r25	; 0x08
    1eac:	87 83       	std	Z+7, r24	; 0x07
    1eae:	1f 91       	pop	r17
    1eb0:	0f 91       	pop	r16
    1eb2:	ff 90       	pop	r15
    1eb4:	ef 90       	pop	r14
    1eb6:	08 95       	ret

00001eb8 <__read_channel>:
    1eb8:	0f 93       	push	r16
    1eba:	1f 93       	push	r17
    1ebc:	8b 01       	movw	r16, r22
    1ebe:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <a2dReadMv>
    1ec2:	80 1b       	sub	r24, r16
    1ec4:	91 0b       	sbc	r25, r17
    1ec6:	62 e0       	ldi	r22, 0x02	; 2
    1ec8:	70 e0       	ldi	r23, 0x00	; 0
    1eca:	0e 94 00 26 	call	0x4c00	; 0x4c00 <__divmodhi4>
    1ece:	cb 01       	movw	r24, r22
    1ed0:	1f 91       	pop	r17
    1ed2:	0f 91       	pop	r16
    1ed4:	08 95       	ret

00001ed6 <__idg300_read>:
    1ed6:	0f 93       	push	r16
    1ed8:	1f 93       	push	r17
    1eda:	8c 01       	movw	r16, r24
    1edc:	fc 01       	movw	r30, r24
    1ede:	67 85       	ldd	r22, Z+15	; 0x0f
    1ee0:	70 89       	ldd	r23, Z+16	; 0x10
    1ee2:	85 85       	ldd	r24, Z+13	; 0x0d
    1ee4:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <__read_channel>
    1ee8:	f8 01       	movw	r30, r16
    1eea:	90 87       	std	Z+8, r25	; 0x08
    1eec:	87 83       	std	Z+7, r24	; 0x07
    1eee:	61 89       	ldd	r22, Z+17	; 0x11
    1ef0:	72 89       	ldd	r23, Z+18	; 0x12
    1ef2:	86 85       	ldd	r24, Z+14	; 0x0e
    1ef4:	0e 94 5c 0f 	call	0x1eb8	; 0x1eb8 <__read_channel>
    1ef8:	f8 01       	movw	r30, r16
    1efa:	92 87       	std	Z+10, r25	; 0x0a
    1efc:	81 87       	std	Z+9, r24	; 0x09
    1efe:	1f 91       	pop	r17
    1f00:	0f 91       	pop	r16
    1f02:	08 95       	ret

00001f04 <__idg300_init>:
    1f04:	ff 92       	push	r15
    1f06:	0f 93       	push	r16
    1f08:	1f 93       	push	r17
    1f0a:	cf 93       	push	r28
    1f0c:	df 93       	push	r29
    1f0e:	ec 01       	movw	r28, r24
    1f10:	18 8a       	std	Y+16, r1	; 0x10
    1f12:	1f 86       	std	Y+15, r1	; 0x0f
    1f14:	1a 8a       	std	Y+18, r1	; 0x12
    1f16:	19 8a       	std	Y+17, r1	; 0x11
    1f18:	ff 24       	eor	r15, r15
    1f1a:	0f 85       	ldd	r16, Y+15	; 0x0f
    1f1c:	18 89       	ldd	r17, Y+16	; 0x10
    1f1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f20:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <a2dReadMv>
    1f24:	08 0f       	add	r16, r24
    1f26:	19 1f       	adc	r17, r25
    1f28:	18 8b       	std	Y+16, r17	; 0x10
    1f2a:	0f 87       	std	Y+15, r16	; 0x0f
    1f2c:	09 89       	ldd	r16, Y+17	; 0x11
    1f2e:	1a 89       	ldd	r17, Y+18	; 0x12
    1f30:	8e 85       	ldd	r24, Y+14	; 0x0e
    1f32:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <a2dReadMv>
    1f36:	9c 01       	movw	r18, r24
    1f38:	20 0f       	add	r18, r16
    1f3a:	31 1f       	adc	r19, r17
    1f3c:	3a 8b       	std	Y+18, r19	; 0x12
    1f3e:	29 8b       	std	Y+17, r18	; 0x11
    1f40:	f3 94       	inc	r15
    1f42:	88 e0       	ldi	r24, 0x08	; 8
    1f44:	f8 16       	cp	r15, r24
    1f46:	49 f7       	brne	.-46     	; 0x1f1a <__idg300_init+0x16>
    1f48:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f4a:	98 89       	ldd	r25, Y+16	; 0x10
    1f4c:	43 e0       	ldi	r20, 0x03	; 3
    1f4e:	96 95       	lsr	r25
    1f50:	87 95       	ror	r24
    1f52:	4a 95       	dec	r20
    1f54:	e1 f7       	brne	.-8      	; 0x1f4e <__idg300_init+0x4a>
    1f56:	98 8b       	std	Y+16, r25	; 0x10
    1f58:	8f 87       	std	Y+15, r24	; 0x0f
    1f5a:	83 e0       	ldi	r24, 0x03	; 3
    1f5c:	36 95       	lsr	r19
    1f5e:	27 95       	ror	r18
    1f60:	8a 95       	dec	r24
    1f62:	e1 f7       	brne	.-8      	; 0x1f5c <__idg300_init+0x58>
    1f64:	3a 8b       	std	Y+18, r19	; 0x12
    1f66:	29 8b       	std	Y+17, r18	; 0x11
    1f68:	df 91       	pop	r29
    1f6a:	cf 91       	pop	r28
    1f6c:	1f 91       	pop	r17
    1f6e:	0f 91       	pop	r16
    1f70:	ff 90       	pop	r15
    1f72:	08 95       	ret

00001f74 <_sensorRead_>:
    1f74:	cf 92       	push	r12
    1f76:	df 92       	push	r13
    1f78:	ef 92       	push	r14
    1f7a:	ff 92       	push	r15
    1f7c:	0f 93       	push	r16
    1f7e:	1f 93       	push	r17
    1f80:	cf 93       	push	r28
    1f82:	df 93       	push	r29
    1f84:	ec 01       	movw	r28, r24
    1f86:	08 81       	ld	r16, Y
    1f88:	19 81       	ldd	r17, Y+1	; 0x01
    1f8a:	8e 81       	ldd	r24, Y+6	; 0x06
    1f8c:	88 23       	and	r24, r24
    1f8e:	51 f4       	brne	.+20     	; 0x1fa4 <_sensorRead_+0x30>
    1f90:	f8 01       	movw	r30, r16
    1f92:	85 91       	lpm	r24, Z+
    1f94:	94 91       	lpm	r25, Z+
    1f96:	89 2b       	or	r24, r25
    1f98:	29 f0       	breq	.+10     	; 0x1fa4 <_sensorRead_+0x30>
    1f9a:	84 ee       	ldi	r24, 0xE4	; 228
    1f9c:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    1fa0:	80 e0       	ldi	r24, 0x00	; 0
    1fa2:	35 c0       	rjmp	.+106    	; 0x200e <_sensorRead_+0x9a>
    1fa4:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    1fa8:	6b 01       	movw	r12, r22
    1faa:	7c 01       	movw	r14, r24
    1fac:	f8 01       	movw	r30, r16
    1fae:	36 96       	adiw	r30, 0x06	; 6
    1fb0:	65 91       	lpm	r22, Z+
    1fb2:	74 91       	lpm	r23, Z+
    1fb4:	61 15       	cp	r22, r1
    1fb6:	71 05       	cpc	r23, r1
    1fb8:	e9 f0       	breq	.+58     	; 0x1ff4 <_sensorRead_+0x80>
    1fba:	80 e0       	ldi	r24, 0x00	; 0
    1fbc:	90 e0       	ldi	r25, 0x00	; 0
    1fbe:	28 ee       	ldi	r18, 0xE8	; 232
    1fc0:	33 e0       	ldi	r19, 0x03	; 3
    1fc2:	40 e0       	ldi	r20, 0x00	; 0
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    1fca:	9b 01       	movw	r18, r22
    1fcc:	ac 01       	movw	r20, r24
    1fce:	80 91 41 03 	lds	r24, 0x0341
    1fd2:	90 91 42 03 	lds	r25, 0x0342
    1fd6:	89 2b       	or	r24, r25
    1fd8:	29 f4       	brne	.+10     	; 0x1fe4 <_sensorRead_+0x70>
    1fda:	ca 01       	movw	r24, r20
    1fdc:	b9 01       	movw	r22, r18
    1fde:	0e 94 b4 1e 	call	0x3d68	; 0x3d68 <delay_us>
    1fe2:	08 c0       	rjmp	.+16     	; 0x1ff4 <_sensorRead_+0x80>
    1fe4:	6a 81       	ldd	r22, Y+2	; 0x02
    1fe6:	7b 81       	ldd	r23, Y+3	; 0x03
    1fe8:	8c 81       	ldd	r24, Y+4	; 0x04
    1fea:	9d 81       	ldd	r25, Y+5	; 0x05
    1fec:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <clockHasElapsed>
    1ff0:	88 23       	and	r24, r24
    1ff2:	69 f0       	breq	.+26     	; 0x200e <_sensorRead_+0x9a>
    1ff4:	c8 01       	movw	r24, r16
    1ff6:	02 96       	adiw	r24, 0x02	; 2
    1ff8:	fc 01       	movw	r30, r24
    1ffa:	25 91       	lpm	r18, Z+
    1ffc:	34 91       	lpm	r19, Z+
    1ffe:	ce 01       	movw	r24, r28
    2000:	f9 01       	movw	r30, r18
    2002:	09 95       	icall
    2004:	ca 82       	std	Y+2, r12	; 0x02
    2006:	db 82       	std	Y+3, r13	; 0x03
    2008:	ec 82       	std	Y+4, r14	; 0x04
    200a:	fd 82       	std	Y+5, r15	; 0x05
    200c:	8f ef       	ldi	r24, 0xFF	; 255
    200e:	df 91       	pop	r29
    2010:	cf 91       	pop	r28
    2012:	1f 91       	pop	r17
    2014:	0f 91       	pop	r16
    2016:	ff 90       	pop	r15
    2018:	ef 90       	pop	r14
    201a:	df 90       	pop	r13
    201c:	cf 90       	pop	r12
    201e:	08 95       	ret

00002020 <_sensorInit_>:
    2020:	cf 92       	push	r12
    2022:	df 92       	push	r13
    2024:	ef 92       	push	r14
    2026:	ff 92       	push	r15
    2028:	0f 93       	push	r16
    202a:	1f 93       	push	r17
    202c:	cf 93       	push	r28
    202e:	df 93       	push	r29
    2030:	ec 01       	movw	r28, r24
    2032:	8e 81       	ldd	r24, Y+6	; 0x06
    2034:	88 23       	and	r24, r24
    2036:	b1 f5       	brne	.+108    	; 0x20a4 <_sensorInit_+0x84>
    2038:	88 81       	ld	r24, Y
    203a:	99 81       	ldd	r25, Y+1	; 0x01
    203c:	fc 01       	movw	r30, r24
    203e:	c5 90       	lpm	r12, Z+
    2040:	d4 90       	lpm	r13, Z+
    2042:	c1 14       	cp	r12, r1
    2044:	d1 04       	cpc	r13, r1
    2046:	61 f1       	breq	.+88     	; 0x20a0 <_sensorInit_+0x80>
    2048:	fc 01       	movw	r30, r24
    204a:	34 96       	adiw	r30, 0x04	; 4
    204c:	65 91       	lpm	r22, Z+
    204e:	74 91       	lpm	r23, Z+
    2050:	61 15       	cp	r22, r1
    2052:	71 05       	cpc	r23, r1
    2054:	11 f1       	breq	.+68     	; 0x209a <_sensorInit_+0x7a>
    2056:	80 91 41 03 	lds	r24, 0x0341
    205a:	90 91 42 03 	lds	r25, 0x0342
    205e:	9b 01       	movw	r18, r22
    2060:	40 e0       	ldi	r20, 0x00	; 0
    2062:	50 e0       	ldi	r21, 0x00	; 0
    2064:	89 2b       	or	r24, r25
    2066:	29 f4       	brne	.+10     	; 0x2072 <_sensorInit_+0x52>
    2068:	ca 01       	movw	r24, r20
    206a:	b9 01       	movw	r22, r18
    206c:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <delay_ms>
    2070:	14 c0       	rjmp	.+40     	; 0x209a <_sensorInit_+0x7a>
    2072:	ca 01       	movw	r24, r20
    2074:	b9 01       	movw	r22, r18
    2076:	28 ee       	ldi	r18, 0xE8	; 232
    2078:	33 e0       	ldi	r19, 0x03	; 3
    207a:	40 e0       	ldi	r20, 0x00	; 0
    207c:	50 e0       	ldi	r21, 0x00	; 0
    207e:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    2082:	7b 01       	movw	r14, r22
    2084:	8c 01       	movw	r16, r24
    2086:	60 e0       	ldi	r22, 0x00	; 0
    2088:	70 e0       	ldi	r23, 0x00	; 0
    208a:	80 e0       	ldi	r24, 0x00	; 0
    208c:	90 e0       	ldi	r25, 0x00	; 0
    208e:	a8 01       	movw	r20, r16
    2090:	97 01       	movw	r18, r14
    2092:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <clockHasElapsed>
    2096:	88 23       	and	r24, r24
    2098:	b1 f3       	breq	.-20     	; 0x2086 <_sensorInit_+0x66>
    209a:	ce 01       	movw	r24, r28
    209c:	f6 01       	movw	r30, r12
    209e:	09 95       	icall
    20a0:	8f ef       	ldi	r24, 0xFF	; 255
    20a2:	8e 83       	std	Y+6, r24	; 0x06
    20a4:	df 91       	pop	r29
    20a6:	cf 91       	pop	r28
    20a8:	1f 91       	pop	r17
    20aa:	0f 91       	pop	r16
    20ac:	ff 90       	pop	r15
    20ae:	ef 90       	pop	r14
    20b0:	df 90       	pop	r13
    20b2:	cf 90       	pop	r12
    20b4:	08 95       	ret

000020b6 <_uartStartXmit>:
    20b6:	dc 01       	movw	r26, r24
    20b8:	17 96       	adiw	r26, 0x07	; 7
    20ba:	8d 91       	ld	r24, X+
    20bc:	9c 91       	ld	r25, X
    20be:	18 97       	sbiw	r26, 0x08	; 8
    20c0:	02 96       	adiw	r24, 0x02	; 2
    20c2:	fc 01       	movw	r30, r24
    20c4:	25 91       	lpm	r18, Z+
    20c6:	34 91       	lpm	r19, Z+
    20c8:	cd 01       	movw	r24, r26
    20ca:	f9 01       	movw	r30, r18
    20cc:	09 95       	icall
    20ce:	08 95       	ret

000020d0 <_uartTransmitBlockStart>:
    20d0:	cf 93       	push	r28
    20d2:	df 93       	push	r29
    20d4:	ec 01       	movw	r28, r24
    20d6:	8e 81       	ldd	r24, Y+6	; 0x06
    20d8:	8e 7f       	andi	r24, 0xFE	; 254
    20da:	8e 83       	std	Y+6, r24	; 0x06
    20dc:	ec 89       	ldd	r30, Y+20	; 0x14
    20de:	fd 89       	ldd	r31, Y+21	; 0x15
    20e0:	30 97       	sbiw	r30, 0x00	; 0
    20e2:	21 f0       	breq	.+8      	; 0x20ec <_uartTransmitBlockStart+0x1c>
    20e4:	8e 89       	ldd	r24, Y+22	; 0x16
    20e6:	9f 89       	ldd	r25, Y+23	; 0x17
    20e8:	6f ef       	ldi	r22, 0xFF	; 255
    20ea:	09 95       	icall
    20ec:	ef 81       	ldd	r30, Y+7	; 0x07
    20ee:	f8 85       	ldd	r31, Y+8	; 0x08
    20f0:	38 96       	adiw	r30, 0x08	; 8
    20f2:	25 91       	lpm	r18, Z+
    20f4:	34 91       	lpm	r19, Z+
    20f6:	21 15       	cp	r18, r1
    20f8:	31 05       	cpc	r19, r1
    20fa:	19 f0       	breq	.+6      	; 0x2102 <_uartTransmitBlockStart+0x32>
    20fc:	ce 01       	movw	r24, r28
    20fe:	f9 01       	movw	r30, r18
    2100:	09 95       	icall
    2102:	df 91       	pop	r29
    2104:	cf 91       	pop	r28
    2106:	08 95       	ret

00002108 <_uartTransmitBlockEnd>:
    2108:	cf 93       	push	r28
    210a:	df 93       	push	r29
    210c:	ec 01       	movw	r28, r24
    210e:	8e 81       	ldd	r24, Y+6	; 0x06
    2110:	81 60       	ori	r24, 0x01	; 1
    2112:	8e 83       	std	Y+6, r24	; 0x06
    2114:	ef 81       	ldd	r30, Y+7	; 0x07
    2116:	f8 85       	ldd	r31, Y+8	; 0x08
    2118:	3a 96       	adiw	r30, 0x0a	; 10
    211a:	25 91       	lpm	r18, Z+
    211c:	34 91       	lpm	r19, Z+
    211e:	21 15       	cp	r18, r1
    2120:	31 05       	cpc	r19, r1
    2122:	19 f0       	breq	.+6      	; 0x212a <_uartTransmitBlockEnd+0x22>
    2124:	ce 01       	movw	r24, r28
    2126:	f9 01       	movw	r30, r18
    2128:	09 95       	icall
    212a:	ec 89       	ldd	r30, Y+20	; 0x14
    212c:	fd 89       	ldd	r31, Y+21	; 0x15
    212e:	30 97       	sbiw	r30, 0x00	; 0
    2130:	21 f0       	breq	.+8      	; 0x213a <_uartTransmitBlockEnd+0x32>
    2132:	8e 89       	ldd	r24, Y+22	; 0x16
    2134:	9f 89       	ldd	r25, Y+23	; 0x17
    2136:	60 e0       	ldi	r22, 0x00	; 0
    2138:	09 95       	icall
    213a:	df 91       	pop	r29
    213c:	cf 91       	pop	r28
    213e:	08 95       	ret

00002140 <_uartSetBaudRate>:
    2140:	dc 01       	movw	r26, r24
    2142:	17 96       	adiw	r26, 0x07	; 7
    2144:	8d 91       	ld	r24, X+
    2146:	9c 91       	ld	r25, X
    2148:	18 97       	sbiw	r26, 0x08	; 8
    214a:	fc 01       	movw	r30, r24
    214c:	25 91       	lpm	r18, Z+
    214e:	34 91       	lpm	r19, Z+
    2150:	cd 01       	movw	r24, r26
    2152:	f9 01       	movw	r30, r18
    2154:	09 95       	icall
    2156:	08 95       	ret

00002158 <_uartOff>:
    2158:	dc 01       	movw	r26, r24
    215a:	17 96       	adiw	r26, 0x07	; 7
    215c:	ed 91       	ld	r30, X+
    215e:	fc 91       	ld	r31, X
    2160:	18 97       	sbiw	r26, 0x08	; 8
    2162:	36 96       	adiw	r30, 0x06	; 6
    2164:	25 91       	lpm	r18, Z+
    2166:	34 91       	lpm	r19, Z+
    2168:	9f b7       	in	r25, 0x3f	; 63
    216a:	78 94       	sei
    216c:	16 96       	adiw	r26, 0x06	; 6
    216e:	8c 91       	ld	r24, X
    2170:	16 97       	sbiw	r26, 0x06	; 6
    2172:	80 ff       	sbrs	r24, 0
    2174:	fb cf       	rjmp	.-10     	; 0x216c <_uartOff+0x14>
    2176:	9f bf       	out	0x3f, r25	; 63
    2178:	cd 01       	movw	r24, r26
    217a:	f9 01       	movw	r30, r18
    217c:	09 95       	icall
    217e:	08 95       	ret

00002180 <__uartReceiveBufferIsEmpty>:
    2180:	dc 01       	movw	r26, r24
    2182:	ed 91       	ld	r30, X+
    2184:	fc 91       	ld	r31, X
    2186:	11 97       	sbiw	r26, 0x01	; 1
    2188:	30 97       	sbiw	r30, 0x00	; 0
    218a:	59 f0       	breq	.+22     	; 0x21a2 <__uartReceiveBufferIsEmpty+0x22>
    218c:	2f b7       	in	r18, 0x3f	; 63
    218e:	f8 94       	cli
    2190:	84 81       	ldd	r24, Z+4	; 0x04
    2192:	95 81       	ldd	r25, Z+5	; 0x05
    2194:	89 2b       	or	r24, r25
    2196:	11 f0       	breq	.+4      	; 0x219c <__uartReceiveBufferIsEmpty+0x1c>
    2198:	80 e0       	ldi	r24, 0x00	; 0
    219a:	01 c0       	rjmp	.+2      	; 0x219e <__uartReceiveBufferIsEmpty+0x1e>
    219c:	8f ef       	ldi	r24, 0xFF	; 255
    219e:	2f bf       	out	0x3f, r18	; 63
    21a0:	08 95       	ret
    21a2:	2f b7       	in	r18, 0x3f	; 63
    21a4:	f8 94       	cli
    21a6:	19 96       	adiw	r26, 0x09	; 9
    21a8:	8d 91       	ld	r24, X+
    21aa:	9c 91       	ld	r25, X
    21ac:	1a 97       	sbiw	r26, 0x0a	; 10
    21ae:	8f 5f       	subi	r24, 0xFF	; 255
    21b0:	9f 4f       	sbci	r25, 0xFF	; 255
    21b2:	11 f0       	breq	.+4      	; 0x21b8 <__uartReceiveBufferIsEmpty+0x38>
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	01 c0       	rjmp	.+2      	; 0x21ba <__uartReceiveBufferIsEmpty+0x3a>
    21b8:	8f ef       	ldi	r24, 0xFF	; 255
    21ba:	2f bf       	out	0x3f, r18	; 63
    21bc:	08 95       	ret

000021be <__uartFlushReceiveBuffer>:
    21be:	fc 01       	movw	r30, r24
    21c0:	80 81       	ld	r24, Z
    21c2:	91 81       	ldd	r25, Z+1	; 0x01
    21c4:	00 97       	sbiw	r24, 0x00	; 0
    21c6:	19 f0       	breq	.+6      	; 0x21ce <__uartFlushReceiveBuffer+0x10>
    21c8:	0e 94 93 12 	call	0x2526	; 0x2526 <bufferFlush>
    21cc:	08 95       	ret
    21ce:	2f b7       	in	r18, 0x3f	; 63
    21d0:	f8 94       	cli
    21d2:	8f ef       	ldi	r24, 0xFF	; 255
    21d4:	9f ef       	ldi	r25, 0xFF	; 255
    21d6:	92 87       	std	Z+10, r25	; 0x0a
    21d8:	81 87       	std	Z+9, r24	; 0x09
    21da:	2f bf       	out	0x3f, r18	; 63
    21dc:	08 95       	ret

000021de <_uartInit>:
    21de:	ef 92       	push	r14
    21e0:	ff 92       	push	r15
    21e2:	0f 93       	push	r16
    21e4:	1f 93       	push	r17
    21e6:	cf 93       	push	r28
    21e8:	df 93       	push	r29
    21ea:	ec 01       	movw	r28, r24
    21ec:	7a 01       	movw	r14, r20
    21ee:	8b 01       	movw	r16, r22
    21f0:	f8 94       	cli
    21f2:	8b 89       	ldd	r24, Y+19	; 0x13
    21f4:	88 23       	and	r24, r24
    21f6:	81 f0       	breq	.+32     	; 0x2218 <__stack+0x19>
    21f8:	2b 85       	ldd	r18, Y+11	; 0x0b
    21fa:	3c 85       	ldd	r19, Y+12	; 0x0c
    21fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    21fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    2200:	28 17       	cp	r18, r24
    2202:	39 07       	cpc	r19, r25
    2204:	21 f0       	breq	.+8      	; 0x220e <__stack+0xf>
    2206:	c9 01       	movw	r24, r18
    2208:	60 e0       	ldi	r22, 0x00	; 0
    220a:	0e 94 b1 13 	call	0x2762	; 0x2762 <pin_make_input>
    220e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2210:	9e 85       	ldd	r25, Y+14	; 0x0e
    2212:	6f ef       	ldi	r22, 0xFF	; 255
    2214:	0e 94 b1 13 	call	0x2762	; 0x2762 <pin_make_input>
    2218:	8e 81       	ldd	r24, Y+6	; 0x06
    221a:	81 60       	ori	r24, 0x01	; 1
    221c:	8e 83       	std	Y+6, r24	; 0x06
    221e:	8e 81       	ldd	r24, Y+6	; 0x06
    2220:	8b 7f       	andi	r24, 0xFB	; 251
    2222:	8e 83       	std	Y+6, r24	; 0x06
    2224:	8e 81       	ldd	r24, Y+6	; 0x06
    2226:	8d 7f       	andi	r24, 0xFD	; 253
    2228:	8e 83       	std	Y+6, r24	; 0x06
    222a:	8f 81       	ldd	r24, Y+7	; 0x07
    222c:	98 85       	ldd	r25, Y+8	; 0x08
    222e:	04 96       	adiw	r24, 0x04	; 4
    2230:	fc 01       	movw	r30, r24
    2232:	25 91       	lpm	r18, Z+
    2234:	34 91       	lpm	r19, Z+
    2236:	ce 01       	movw	r24, r28
    2238:	b8 01       	movw	r22, r16
    223a:	a7 01       	movw	r20, r14
    223c:	f9 01       	movw	r30, r18
    223e:	09 95       	icall
    2240:	78 94       	sei
    2242:	df 91       	pop	r29
    2244:	cf 91       	pop	r28
    2246:	1f 91       	pop	r17
    2248:	0f 91       	pop	r16
    224a:	ff 90       	pop	r15
    224c:	ef 90       	pop	r14
    224e:	08 95       	ret

00002250 <_uartSendByte>:
    2250:	0f 93       	push	r16
    2252:	1f 93       	push	r17
    2254:	cf 93       	push	r28
    2256:	df 93       	push	r29
    2258:	ec 01       	movw	r28, r24
    225a:	06 2f       	mov	r16, r22
    225c:	8a 81       	ldd	r24, Y+2	; 0x02
    225e:	9b 81       	ldd	r25, Y+3	; 0x03
    2260:	89 2b       	or	r24, r25
    2262:	19 f4       	brne	.+6      	; 0x226a <_uartSendByte+0x1a>
    2264:	19 c0       	rjmp	.+50     	; 0x2298 <_uartSendByte+0x48>
    2266:	0e 94 9c 12 	call	0x2538	; 0x2538 <breathe>
    226a:	8a 81       	ldd	r24, Y+2	; 0x02
    226c:	9b 81       	ldd	r25, Y+3	; 0x03
    226e:	0e 94 8b 12 	call	0x2516	; 0x2516 <bufferIsFull>
    2272:	88 23       	and	r24, r24
    2274:	c1 f7       	brne	.-16     	; 0x2266 <_uartSendByte+0x16>
    2276:	1f b7       	in	r17, 0x3f	; 63
    2278:	f8 94       	cli
    227a:	8e 81       	ldd	r24, Y+6	; 0x06
    227c:	81 fd       	sbrc	r24, 1
    227e:	04 c0       	rjmp	.+8      	; 0x2288 <_uartSendByte+0x38>
    2280:	8e 81       	ldd	r24, Y+6	; 0x06
    2282:	82 60       	ori	r24, 0x02	; 2
    2284:	8e 83       	std	Y+6, r24	; 0x06
    2286:	0d c0       	rjmp	.+26     	; 0x22a2 <_uartSendByte+0x52>
    2288:	8a 81       	ldd	r24, Y+2	; 0x02
    228a:	9b 81       	ldd	r25, Y+3	; 0x03
    228c:	60 2f       	mov	r22, r16
    228e:	0e 94 47 12 	call	0x248e	; 0x248e <bufferPut>
    2292:	0e c0       	rjmp	.+28     	; 0x22b0 <_uartSendByte+0x60>
    2294:	0e 94 9c 12 	call	0x2538	; 0x2538 <breathe>
    2298:	8e 81       	ldd	r24, Y+6	; 0x06
    229a:	80 ff       	sbrs	r24, 0
    229c:	fb cf       	rjmp	.-10     	; 0x2294 <_uartSendByte+0x44>
    229e:	1f b7       	in	r17, 0x3f	; 63
    22a0:	f8 94       	cli
    22a2:	ce 01       	movw	r24, r28
    22a4:	0e 94 68 10 	call	0x20d0	; 0x20d0 <_uartTransmitBlockStart>
    22a8:	ce 01       	movw	r24, r28
    22aa:	60 2f       	mov	r22, r16
    22ac:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <_uartStartXmit>
    22b0:	1f bf       	out	0x3f, r17	; 63
    22b2:	80 2f       	mov	r24, r16
    22b4:	df 91       	pop	r29
    22b6:	cf 91       	pop	r28
    22b8:	1f 91       	pop	r17
    22ba:	0f 91       	pop	r16
    22bc:	08 95       	ret

000022be <_uartSendBuffer>:
    22be:	ef 92       	push	r14
    22c0:	ff 92       	push	r15
    22c2:	0f 93       	push	r16
    22c4:	1f 93       	push	r17
    22c6:	cf 93       	push	r28
    22c8:	df 93       	push	r29
    22ca:	7c 01       	movw	r14, r24
    22cc:	8b 01       	movw	r16, r22
    22ce:	ea 01       	movw	r28, r20
    22d0:	07 c0       	rjmp	.+14     	; 0x22e0 <_uartSendBuffer+0x22>
    22d2:	f8 01       	movw	r30, r16
    22d4:	61 91       	ld	r22, Z+
    22d6:	8f 01       	movw	r16, r30
    22d8:	c7 01       	movw	r24, r14
    22da:	0e 94 28 11 	call	0x2250	; 0x2250 <_uartSendByte>
    22de:	21 97       	sbiw	r28, 0x01	; 1
    22e0:	20 97       	sbiw	r28, 0x00	; 0
    22e2:	b9 f7       	brne	.-18     	; 0x22d2 <_uartSendBuffer+0x14>
    22e4:	df 91       	pop	r29
    22e6:	cf 91       	pop	r28
    22e8:	1f 91       	pop	r17
    22ea:	0f 91       	pop	r16
    22ec:	ff 90       	pop	r15
    22ee:	ef 90       	pop	r14
    22f0:	08 95       	ret

000022f2 <__uartGetByte>:
    22f2:	df 93       	push	r29
    22f4:	cf 93       	push	r28
    22f6:	0f 92       	push	r0
    22f8:	cd b7       	in	r28, 0x3d	; 61
    22fa:	de b7       	in	r29, 0x3e	; 62
    22fc:	fc 01       	movw	r30, r24
    22fe:	80 81       	ld	r24, Z
    2300:	91 81       	ldd	r25, Z+1	; 0x01
    2302:	00 97       	sbiw	r24, 0x00	; 0
    2304:	71 f0       	breq	.+28     	; 0x2322 <__uartGetByte+0x30>
    2306:	be 01       	movw	r22, r28
    2308:	6f 5f       	subi	r22, 0xFF	; 255
    230a:	7f 4f       	sbci	r23, 0xFF	; 255
    230c:	0e 94 1a 12 	call	0x2434	; 0x2434 <bufferGet>
    2310:	88 23       	and	r24, r24
    2312:	19 f4       	brne	.+6      	; 0x231a <__uartGetByte+0x28>
    2314:	4f ef       	ldi	r20, 0xFF	; 255
    2316:	5f ef       	ldi	r21, 0xFF	; 255
    2318:	0d c0       	rjmp	.+26     	; 0x2334 <__uartGetByte+0x42>
    231a:	89 81       	ldd	r24, Y+1	; 0x01
    231c:	48 2f       	mov	r20, r24
    231e:	50 e0       	ldi	r21, 0x00	; 0
    2320:	09 c0       	rjmp	.+18     	; 0x2334 <__uartGetByte+0x42>
    2322:	2f b7       	in	r18, 0x3f	; 63
    2324:	f8 94       	cli
    2326:	41 85       	ldd	r20, Z+9	; 0x09
    2328:	52 85       	ldd	r21, Z+10	; 0x0a
    232a:	8f ef       	ldi	r24, 0xFF	; 255
    232c:	9f ef       	ldi	r25, 0xFF	; 255
    232e:	92 87       	std	Z+10, r25	; 0x0a
    2330:	81 87       	std	Z+9, r24	; 0x09
    2332:	2f bf       	out	0x3f, r18	; 63
    2334:	ca 01       	movw	r24, r20
    2336:	0f 90       	pop	r0
    2338:	cf 91       	pop	r28
    233a:	df 91       	pop	r29
    233c:	08 95       	ret

0000233e <__uartTransmitService>:
    233e:	ef 92       	push	r14
    2340:	ff 92       	push	r15
    2342:	1f 93       	push	r17
    2344:	df 93       	push	r29
    2346:	cf 93       	push	r28
    2348:	0f 92       	push	r0
    234a:	cd b7       	in	r28, 0x3d	; 61
    234c:	de b7       	in	r29, 0x3e	; 62
    234e:	7c 01       	movw	r14, r24
    2350:	fc 01       	movw	r30, r24
    2352:	86 81       	ldd	r24, Z+6	; 0x06
    2354:	81 ff       	sbrs	r24, 1
    2356:	19 c0       	rjmp	.+50     	; 0x238a <__uartTransmitService+0x4c>
    2358:	1f b7       	in	r17, 0x3f	; 63
    235a:	f8 94       	cli
    235c:	f7 01       	movw	r30, r14
    235e:	82 81       	ldd	r24, Z+2	; 0x02
    2360:	93 81       	ldd	r25, Z+3	; 0x03
    2362:	be 01       	movw	r22, r28
    2364:	6f 5f       	subi	r22, 0xFF	; 255
    2366:	7f 4f       	sbci	r23, 0xFF	; 255
    2368:	0e 94 1a 12 	call	0x2434	; 0x2434 <bufferGet>
    236c:	88 23       	and	r24, r24
    236e:	29 f0       	breq	.+10     	; 0x237a <__uartTransmitService+0x3c>
    2370:	c7 01       	movw	r24, r14
    2372:	69 81       	ldd	r22, Y+1	; 0x01
    2374:	0e 94 5b 10 	call	0x20b6	; 0x20b6 <_uartStartXmit>
    2378:	0d c0       	rjmp	.+26     	; 0x2394 <__uartTransmitService+0x56>
    237a:	c7 01       	movw	r24, r14
    237c:	0e 94 84 10 	call	0x2108	; 0x2108 <_uartTransmitBlockEnd>
    2380:	f7 01       	movw	r30, r14
    2382:	86 81       	ldd	r24, Z+6	; 0x06
    2384:	8d 7f       	andi	r24, 0xFD	; 253
    2386:	86 83       	std	Z+6, r24	; 0x06
    2388:	05 c0       	rjmp	.+10     	; 0x2394 <__uartTransmitService+0x56>
    238a:	1f b7       	in	r17, 0x3f	; 63
    238c:	f8 94       	cli
    238e:	c7 01       	movw	r24, r14
    2390:	0e 94 84 10 	call	0x2108	; 0x2108 <_uartTransmitBlockEnd>
    2394:	1f bf       	out	0x3f, r17	; 63
    2396:	0f 90       	pop	r0
    2398:	cf 91       	pop	r28
    239a:	df 91       	pop	r29
    239c:	1f 91       	pop	r17
    239e:	ff 90       	pop	r15
    23a0:	ef 90       	pop	r14
    23a2:	08 95       	ret

000023a4 <__uartReceiveService>:
    23a4:	cf 93       	push	r28
    23a6:	df 93       	push	r29
    23a8:	ec 01       	movw	r28, r24
    23aa:	8c 81       	ldd	r24, Y+4	; 0x04
    23ac:	9d 81       	ldd	r25, Y+5	; 0x05
    23ae:	89 2b       	or	r24, r25
    23b0:	29 f0       	breq	.+10     	; 0x23bc <__uartReceiveService+0x18>
    23b2:	ec 81       	ldd	r30, Y+4	; 0x04
    23b4:	fd 81       	ldd	r31, Y+5	; 0x05
    23b6:	86 2f       	mov	r24, r22
    23b8:	09 95       	icall
    23ba:	19 c0       	rjmp	.+50     	; 0x23ee <__uartReceiveService+0x4a>
    23bc:	88 81       	ld	r24, Y
    23be:	99 81       	ldd	r25, Y+1	; 0x01
    23c0:	00 97       	sbiw	r24, 0x00	; 0
    23c2:	29 f0       	breq	.+10     	; 0x23ce <__uartReceiveService+0x2a>
    23c4:	0e 94 47 12 	call	0x248e	; 0x248e <bufferPut>
    23c8:	88 23       	and	r24, r24
    23ca:	89 f4       	brne	.+34     	; 0x23ee <__uartReceiveService+0x4a>
    23cc:	0a c0       	rjmp	.+20     	; 0x23e2 <__uartReceiveService+0x3e>
    23ce:	89 85       	ldd	r24, Y+9	; 0x09
    23d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    23d2:	8f 5f       	subi	r24, 0xFF	; 255
    23d4:	9f 4f       	sbci	r25, 0xFF	; 255
    23d6:	29 f4       	brne	.+10     	; 0x23e2 <__uartReceiveService+0x3e>
    23d8:	86 2f       	mov	r24, r22
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	9a 87       	std	Y+10, r25	; 0x0a
    23de:	89 87       	std	Y+9, r24	; 0x09
    23e0:	06 c0       	rjmp	.+12     	; 0x23ee <__uartReceiveService+0x4a>
    23e2:	8e 81       	ldd	r24, Y+6	; 0x06
    23e4:	84 60       	ori	r24, 0x04	; 4
    23e6:	8e 83       	std	Y+6, r24	; 0x06
    23e8:	85 ef       	ldi	r24, 0xF5	; 245
    23ea:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    23ee:	df 91       	pop	r29
    23f0:	cf 91       	pop	r28
    23f2:	08 95       	ret

000023f4 <a2dReadMv>:
    23f4:	0f 93       	push	r16
    23f6:	1f 93       	push	r17
    23f8:	0e 94 9d 20 	call	0x413a	; 0x413a <a2dConvert10bit>
    23fc:	e8 e7       	ldi	r30, 0x78	; 120
    23fe:	f3 e0       	ldi	r31, 0x03	; 3
    2400:	05 91       	lpm	r16, Z+
    2402:	14 91       	lpm	r17, Z+
    2404:	60 e0       	ldi	r22, 0x00	; 0
    2406:	70 e0       	ldi	r23, 0x00	; 0
    2408:	4f ef       	ldi	r20, 0xFF	; 255
    240a:	53 e0       	ldi	r21, 0x03	; 3
    240c:	20 e0       	ldi	r18, 0x00	; 0
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <interpolateU>
    2414:	1f 91       	pop	r17
    2416:	0f 91       	pop	r16
    2418:	08 95       	ret

0000241a <bufferInit>:
    241a:	fc 01       	movw	r30, r24
    241c:	8f b7       	in	r24, 0x3f	; 63
    241e:	f8 94       	cli
    2420:	71 83       	std	Z+1, r23	; 0x01
    2422:	60 83       	st	Z, r22
    2424:	53 83       	std	Z+3, r21	; 0x03
    2426:	42 83       	std	Z+2, r20	; 0x02
    2428:	15 82       	std	Z+5, r1	; 0x05
    242a:	14 82       	std	Z+4, r1	; 0x04
    242c:	17 82       	std	Z+7, r1	; 0x07
    242e:	16 82       	std	Z+6, r1	; 0x06
    2430:	8f bf       	out	0x3f, r24	; 63
    2432:	08 95       	ret

00002434 <bufferGet>:
    2434:	cf 93       	push	r28
    2436:	df 93       	push	r29
    2438:	ec 01       	movw	r28, r24
    243a:	db 01       	movw	r26, r22
    243c:	2f b7       	in	r18, 0x3f	; 63
    243e:	f8 94       	cli
    2440:	00 97       	sbiw	r24, 0x00	; 0
    2442:	01 f1       	breq	.+64     	; 0x2484 <bufferGet+0x50>
    2444:	8a 81       	ldd	r24, Y+2	; 0x02
    2446:	9b 81       	ldd	r25, Y+3	; 0x03
    2448:	89 2b       	or	r24, r25
    244a:	e1 f0       	breq	.+56     	; 0x2484 <bufferGet+0x50>
    244c:	8c 81       	ldd	r24, Y+4	; 0x04
    244e:	9d 81       	ldd	r25, Y+5	; 0x05
    2450:	89 2b       	or	r24, r25
    2452:	c1 f0       	breq	.+48     	; 0x2484 <bufferGet+0x50>
    2454:	e8 81       	ld	r30, Y
    2456:	f9 81       	ldd	r31, Y+1	; 0x01
    2458:	8e 81       	ldd	r24, Y+6	; 0x06
    245a:	9f 81       	ldd	r25, Y+7	; 0x07
    245c:	e8 0f       	add	r30, r24
    245e:	f9 1f       	adc	r31, r25
    2460:	80 81       	ld	r24, Z
    2462:	8c 93       	st	X, r24
    2464:	8e 81       	ldd	r24, Y+6	; 0x06
    2466:	9f 81       	ldd	r25, Y+7	; 0x07
    2468:	6a 81       	ldd	r22, Y+2	; 0x02
    246a:	7b 81       	ldd	r23, Y+3	; 0x03
    246c:	01 96       	adiw	r24, 0x01	; 1
    246e:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    2472:	9f 83       	std	Y+7, r25	; 0x07
    2474:	8e 83       	std	Y+6, r24	; 0x06
    2476:	8c 81       	ldd	r24, Y+4	; 0x04
    2478:	9d 81       	ldd	r25, Y+5	; 0x05
    247a:	01 97       	sbiw	r24, 0x01	; 1
    247c:	9d 83       	std	Y+5, r25	; 0x05
    247e:	8c 83       	std	Y+4, r24	; 0x04
    2480:	8f ef       	ldi	r24, 0xFF	; 255
    2482:	01 c0       	rjmp	.+2      	; 0x2486 <bufferGet+0x52>
    2484:	80 e0       	ldi	r24, 0x00	; 0
    2486:	2f bf       	out	0x3f, r18	; 63
    2488:	df 91       	pop	r29
    248a:	cf 91       	pop	r28
    248c:	08 95       	ret

0000248e <bufferPut>:
    248e:	1f 93       	push	r17
    2490:	cf 93       	push	r28
    2492:	df 93       	push	r29
    2494:	ec 01       	movw	r28, r24
    2496:	46 2f       	mov	r20, r22
    2498:	1f b7       	in	r17, 0x3f	; 63
    249a:	f8 94       	cli
    249c:	2c 81       	ldd	r18, Y+4	; 0x04
    249e:	3d 81       	ldd	r19, Y+5	; 0x05
    24a0:	6a 81       	ldd	r22, Y+2	; 0x02
    24a2:	7b 81       	ldd	r23, Y+3	; 0x03
    24a4:	26 17       	cp	r18, r22
    24a6:	37 07       	cpc	r19, r23
    24a8:	10 f0       	brcs	.+4      	; 0x24ae <bufferPut+0x20>
    24aa:	80 e0       	ldi	r24, 0x00	; 0
    24ac:	11 c0       	rjmp	.+34     	; 0x24d0 <bufferPut+0x42>
    24ae:	8e 81       	ldd	r24, Y+6	; 0x06
    24b0:	9f 81       	ldd	r25, Y+7	; 0x07
    24b2:	82 0f       	add	r24, r18
    24b4:	93 1f       	adc	r25, r19
    24b6:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    24ba:	e8 81       	ld	r30, Y
    24bc:	f9 81       	ldd	r31, Y+1	; 0x01
    24be:	e8 0f       	add	r30, r24
    24c0:	f9 1f       	adc	r31, r25
    24c2:	40 83       	st	Z, r20
    24c4:	8c 81       	ldd	r24, Y+4	; 0x04
    24c6:	9d 81       	ldd	r25, Y+5	; 0x05
    24c8:	01 96       	adiw	r24, 0x01	; 1
    24ca:	9d 83       	std	Y+5, r25	; 0x05
    24cc:	8c 83       	std	Y+4, r24	; 0x04
    24ce:	8f ef       	ldi	r24, 0xFF	; 255
    24d0:	1f bf       	out	0x3f, r17	; 63
    24d2:	df 91       	pop	r29
    24d4:	cf 91       	pop	r28
    24d6:	1f 91       	pop	r17
    24d8:	08 95       	ret

000024da <bufferFreeSpace>:
    24da:	fc 01       	movw	r30, r24
    24dc:	4f b7       	in	r20, 0x3f	; 63
    24de:	f8 94       	cli
    24e0:	00 97       	sbiw	r24, 0x00	; 0
    24e2:	19 f4       	brne	.+6      	; 0x24ea <bufferFreeSpace+0x10>
    24e4:	20 e0       	ldi	r18, 0x00	; 0
    24e6:	30 e0       	ldi	r19, 0x00	; 0
    24e8:	06 c0       	rjmp	.+12     	; 0x24f6 <bufferFreeSpace+0x1c>
    24ea:	22 81       	ldd	r18, Z+2	; 0x02
    24ec:	33 81       	ldd	r19, Z+3	; 0x03
    24ee:	84 81       	ldd	r24, Z+4	; 0x04
    24f0:	95 81       	ldd	r25, Z+5	; 0x05
    24f2:	28 1b       	sub	r18, r24
    24f4:	39 0b       	sbc	r19, r25
    24f6:	4f bf       	out	0x3f, r20	; 63
    24f8:	c9 01       	movw	r24, r18
    24fa:	08 95       	ret

000024fc <bufferBytesUsed>:
    24fc:	fc 01       	movw	r30, r24
    24fe:	8f b7       	in	r24, 0x3f	; 63
    2500:	f8 94       	cli
    2502:	30 97       	sbiw	r30, 0x00	; 0
    2504:	19 f4       	brne	.+6      	; 0x250c <bufferBytesUsed+0x10>
    2506:	20 e0       	ldi	r18, 0x00	; 0
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	02 c0       	rjmp	.+4      	; 0x2510 <bufferBytesUsed+0x14>
    250c:	24 81       	ldd	r18, Z+4	; 0x04
    250e:	35 81       	ldd	r19, Z+5	; 0x05
    2510:	8f bf       	out	0x3f, r24	; 63
    2512:	c9 01       	movw	r24, r18
    2514:	08 95       	ret

00002516 <bufferIsFull>:
    2516:	0e 94 6d 12 	call	0x24da	; 0x24da <bufferFreeSpace>
    251a:	89 2b       	or	r24, r25
    251c:	11 f0       	breq	.+4      	; 0x2522 <bufferIsFull+0xc>
    251e:	80 e0       	ldi	r24, 0x00	; 0
    2520:	08 95       	ret
    2522:	8f ef       	ldi	r24, 0xFF	; 255
    2524:	08 95       	ret

00002526 <bufferFlush>:
    2526:	fc 01       	movw	r30, r24
    2528:	00 97       	sbiw	r24, 0x00	; 0
    252a:	29 f0       	breq	.+10     	; 0x2536 <bufferFlush+0x10>
    252c:	8f b7       	in	r24, 0x3f	; 63
    252e:	f8 94       	cli
    2530:	15 82       	std	Z+5, r1	; 0x05
    2532:	14 82       	std	Z+4, r1	; 0x04
    2534:	8f bf       	out	0x3f, r24	; 63
    2536:	08 95       	ret

00002538 <breathe>:
    2538:	8f b7       	in	r24, 0x3f	; 63
    253a:	78 94       	sei
	...
    2548:	00 00       	nop
    254a:	8f bf       	out	0x3f, r24	; 63
    254c:	08 95       	ret

0000254e <__portMaskSet>:
    254e:	9c 01       	movw	r18, r24
    2550:	fc 01       	movw	r30, r24
    2552:	a5 91       	lpm	r26, Z+
    2554:	b4 91       	lpm	r27, Z+
    2556:	2e 5f       	subi	r18, 0xFE	; 254
    2558:	3f 4f       	sbci	r19, 0xFF	; 255
    255a:	f9 01       	movw	r30, r18
    255c:	94 91       	lpm	r25, Z+
    255e:	8c 91       	ld	r24, X
    2560:	89 2b       	or	r24, r25
    2562:	8c 93       	st	X, r24
    2564:	08 95       	ret

00002566 <__portMaskGet>:
    2566:	9c 01       	movw	r18, r24
    2568:	fc 01       	movw	r30, r24
    256a:	a5 91       	lpm	r26, Z+
    256c:	b4 91       	lpm	r27, Z+
    256e:	2e 5f       	subi	r18, 0xFE	; 254
    2570:	3f 4f       	sbci	r19, 0xFF	; 255
    2572:	f9 01       	movw	r30, r18
    2574:	94 91       	lpm	r25, Z+
    2576:	8c 91       	ld	r24, X
    2578:	89 23       	and	r24, r25
    257a:	09 f0       	breq	.+2      	; 0x257e <__portMaskGet+0x18>
    257c:	8f ef       	ldi	r24, 0xFF	; 255
    257e:	08 95       	ret

00002580 <__portMaskClear>:
    2580:	9c 01       	movw	r18, r24
    2582:	fc 01       	movw	r30, r24
    2584:	a5 91       	lpm	r26, Z+
    2586:	b4 91       	lpm	r27, Z+
    2588:	2e 5f       	subi	r18, 0xFE	; 254
    258a:	3f 4f       	sbci	r19, 0xFF	; 255
    258c:	f9 01       	movw	r30, r18
    258e:	94 91       	lpm	r25, Z+
    2590:	8c 91       	ld	r24, X
    2592:	90 95       	com	r25
    2594:	89 23       	and	r24, r25
    2596:	8c 93       	st	X, r24
    2598:	08 95       	ret

0000259a <main>:
    259a:	6f 92       	push	r6
    259c:	7f 92       	push	r7
    259e:	8f 92       	push	r8
    25a0:	9f 92       	push	r9
    25a2:	af 92       	push	r10
    25a4:	bf 92       	push	r11
    25a6:	cf 92       	push	r12
    25a8:	df 92       	push	r13
    25aa:	ef 92       	push	r14
    25ac:	ff 92       	push	r15
    25ae:	0f 93       	push	r16
    25b0:	1f 93       	push	r17
    25b2:	0e 94 cd 07 	call	0xf9a	; 0xf9a <configure_ports>
    25b6:	0e 94 88 07 	call	0xf10	; 0xf10 <registerLED>
    25ba:	0e 94 6c 1c 	call	0x38d8	; 0x38d8 <initTimers>
    25be:	0e 94 4b 07 	call	0xe96	; 0xe96 <sysInitHardware>
    25c2:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <appInitHardware>
    25c6:	0e 94 03 1d 	call	0x3a06	; 0x3a06 <__clockInit>
    25ca:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    25ce:	5b 01       	movw	r10, r22
    25d0:	6c 01       	movw	r12, r24
    25d2:	0e 94 cd 09 	call	0x139a	; 0x139a <appInitSoftware>
    25d6:	7b 01       	movw	r14, r22
    25d8:	8c 01       	movw	r16, r24
    25da:	66 24       	eor	r6, r6
    25dc:	77 24       	eor	r7, r7
    25de:	43 01       	movw	r8, r6
    25e0:	0e 94 9c 12 	call	0x2538	; 0x2538 <breathe>
    25e4:	e1 14       	cp	r14, r1
    25e6:	f1 04       	cpc	r15, r1
    25e8:	01 05       	cpc	r16, r1
    25ea:	11 05       	cpc	r17, r1
    25ec:	19 f4       	brne	.+6      	; 0x25f4 <main+0x5a>
    25ee:	0a c0       	rjmp	.+20     	; 0x2604 <main+0x6a>
    25f0:	0e 94 9c 12 	call	0x2538	; 0x2538 <breathe>
    25f4:	c6 01       	movw	r24, r12
    25f6:	b5 01       	movw	r22, r10
    25f8:	a8 01       	movw	r20, r16
    25fa:	97 01       	movw	r18, r14
    25fc:	0e 94 cf 1e 	call	0x3d9e	; 0x3d9e <clockHasElapsed>
    2600:	88 23       	and	r24, r24
    2602:	b1 f3       	breq	.-20     	; 0x25f0 <main+0x56>
    2604:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    2608:	5b 01       	movw	r10, r22
    260a:	6c 01       	movw	r12, r24
    260c:	08 94       	sec
    260e:	61 1c       	adc	r6, r1
    2610:	71 1c       	adc	r7, r1
    2612:	81 1c       	adc	r8, r1
    2614:	91 1c       	adc	r9, r1
    2616:	c4 01       	movw	r24, r8
    2618:	b3 01       	movw	r22, r6
    261a:	a6 01       	movw	r20, r12
    261c:	95 01       	movw	r18, r10
    261e:	0e 94 0e 0e 	call	0x1c1c	; 0x1c1c <appControl>
    2622:	7b 01       	movw	r14, r22
    2624:	8c 01       	movw	r16, r24
    2626:	dc cf       	rjmp	.-72     	; 0x25e0 <main+0x46>

00002628 <interpolate>:
    2628:	4f 92       	push	r4
    262a:	5f 92       	push	r5
    262c:	6f 92       	push	r6
    262e:	7f 92       	push	r7
    2630:	8f 92       	push	r8
    2632:	9f 92       	push	r9
    2634:	af 92       	push	r10
    2636:	bf 92       	push	r11
    2638:	cf 92       	push	r12
    263a:	df 92       	push	r13
    263c:	ef 92       	push	r14
    263e:	ff 92       	push	r15
    2640:	0f 93       	push	r16
    2642:	1f 93       	push	r17
    2644:	2b 01       	movw	r4, r22
    2646:	3a 01       	movw	r6, r20
    2648:	59 01       	movw	r10, r18
    264a:	78 01       	movw	r14, r16
    264c:	e2 1a       	sub	r14, r18
    264e:	f3 0a       	sbc	r15, r19
    2650:	00 27       	eor	r16, r16
    2652:	f7 fc       	sbrc	r15, 7
    2654:	00 95       	com	r16
    2656:	10 2f       	mov	r17, r16
    2658:	9c 01       	movw	r18, r24
    265a:	26 1b       	sub	r18, r22
    265c:	37 0b       	sbc	r19, r23
    265e:	44 27       	eor	r20, r20
    2660:	37 fd       	sbrc	r19, 7
    2662:	40 95       	com	r20
    2664:	54 2f       	mov	r21, r20
    2666:	c8 01       	movw	r24, r16
    2668:	b7 01       	movw	r22, r14
    266a:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    266e:	64 18       	sub	r6, r4
    2670:	75 08       	sbc	r7, r5
    2672:	88 24       	eor	r8, r8
    2674:	77 fc       	sbrc	r7, 7
    2676:	80 94       	com	r8
    2678:	98 2c       	mov	r9, r8
    267a:	a4 01       	movw	r20, r8
    267c:	93 01       	movw	r18, r6
    267e:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divmodsi4>
    2682:	c9 01       	movw	r24, r18
    2684:	da 01       	movw	r26, r20
    2686:	cc 24       	eor	r12, r12
    2688:	b7 fc       	sbrc	r11, 7
    268a:	c0 94       	com	r12
    268c:	dc 2c       	mov	r13, r12
    268e:	a8 0e       	add	r10, r24
    2690:	b9 1e       	adc	r11, r25
    2692:	ca 1e       	adc	r12, r26
    2694:	db 1e       	adc	r13, r27
    2696:	c5 01       	movw	r24, r10
    2698:	1f 91       	pop	r17
    269a:	0f 91       	pop	r16
    269c:	ff 90       	pop	r15
    269e:	ef 90       	pop	r14
    26a0:	df 90       	pop	r13
    26a2:	cf 90       	pop	r12
    26a4:	bf 90       	pop	r11
    26a6:	af 90       	pop	r10
    26a8:	9f 90       	pop	r9
    26aa:	8f 90       	pop	r8
    26ac:	7f 90       	pop	r7
    26ae:	6f 90       	pop	r6
    26b0:	5f 90       	pop	r5
    26b2:	4f 90       	pop	r4
    26b4:	08 95       	ret

000026b6 <interpolateU>:
    26b6:	4f 92       	push	r4
    26b8:	5f 92       	push	r5
    26ba:	6f 92       	push	r6
    26bc:	7f 92       	push	r7
    26be:	8f 92       	push	r8
    26c0:	9f 92       	push	r9
    26c2:	af 92       	push	r10
    26c4:	bf 92       	push	r11
    26c6:	cf 92       	push	r12
    26c8:	df 92       	push	r13
    26ca:	ef 92       	push	r14
    26cc:	ff 92       	push	r15
    26ce:	0f 93       	push	r16
    26d0:	1f 93       	push	r17
    26d2:	2b 01       	movw	r4, r22
    26d4:	5a 01       	movw	r10, r20
    26d6:	39 01       	movw	r6, r18
    26d8:	78 01       	movw	r14, r16
    26da:	e2 1a       	sub	r14, r18
    26dc:	f3 0a       	sbc	r15, r19
    26de:	00 e0       	ldi	r16, 0x00	; 0
    26e0:	10 e0       	ldi	r17, 0x00	; 0
    26e2:	9c 01       	movw	r18, r24
    26e4:	26 1b       	sub	r18, r22
    26e6:	37 0b       	sbc	r19, r23
    26e8:	44 27       	eor	r20, r20
    26ea:	37 fd       	sbrc	r19, 7
    26ec:	40 95       	com	r20
    26ee:	54 2f       	mov	r21, r20
    26f0:	c8 01       	movw	r24, r16
    26f2:	b7 01       	movw	r22, r14
    26f4:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    26f8:	a4 18       	sub	r10, r4
    26fa:	b5 08       	sbc	r11, r5
    26fc:	cc 24       	eor	r12, r12
    26fe:	b7 fc       	sbrc	r11, 7
    2700:	c0 94       	com	r12
    2702:	dc 2c       	mov	r13, r12
    2704:	a6 01       	movw	r20, r12
    2706:	95 01       	movw	r18, r10
    2708:	0e 94 35 26 	call	0x4c6a	; 0x4c6a <__divmodsi4>
    270c:	88 24       	eor	r8, r8
    270e:	99 24       	eor	r9, r9
    2710:	26 0d       	add	r18, r6
    2712:	37 1d       	adc	r19, r7
    2714:	48 1d       	adc	r20, r8
    2716:	59 1d       	adc	r21, r9
    2718:	c9 01       	movw	r24, r18
    271a:	1f 91       	pop	r17
    271c:	0f 91       	pop	r16
    271e:	ff 90       	pop	r15
    2720:	ef 90       	pop	r14
    2722:	df 90       	pop	r13
    2724:	cf 90       	pop	r12
    2726:	bf 90       	pop	r11
    2728:	af 90       	pop	r10
    272a:	9f 90       	pop	r9
    272c:	8f 90       	pop	r8
    272e:	7f 90       	pop	r7
    2730:	6f 90       	pop	r6
    2732:	5f 90       	pop	r5
    2734:	4f 90       	pop	r4
    2736:	08 95       	ret

00002738 <pin_is_high>:
    2738:	9c 01       	movw	r18, r24
    273a:	00 97       	sbiw	r24, 0x00	; 0
    273c:	81 f0       	breq	.+32     	; 0x275e <pin_is_high+0x26>
    273e:	fc 01       	movw	r30, r24
    2740:	85 91       	lpm	r24, Z+
    2742:	94 91       	lpm	r25, Z+
    2744:	04 96       	adiw	r24, 0x04	; 4
    2746:	fc 01       	movw	r30, r24
    2748:	a5 91       	lpm	r26, Z+
    274a:	b4 91       	lpm	r27, Z+
    274c:	2e 5f       	subi	r18, 0xFE	; 254
    274e:	3f 4f       	sbci	r19, 0xFF	; 255
    2750:	f9 01       	movw	r30, r18
    2752:	94 91       	lpm	r25, Z+
    2754:	8c 91       	ld	r24, X
    2756:	89 23       	and	r24, r25
    2758:	11 f0       	breq	.+4      	; 0x275e <pin_is_high+0x26>
    275a:	8f ef       	ldi	r24, 0xFF	; 255
    275c:	08 95       	ret
    275e:	80 e0       	ldi	r24, 0x00	; 0
    2760:	08 95       	ret

00002762 <pin_make_input>:
    2762:	cf 93       	push	r28
    2764:	df 93       	push	r29
    2766:	9c 01       	movw	r18, r24
    2768:	00 97       	sbiw	r24, 0x00	; 0
    276a:	f9 f0       	breq	.+62     	; 0x27aa <pin_make_input+0x48>
    276c:	fc 01       	movw	r30, r24
    276e:	45 91       	lpm	r20, Z+
    2770:	54 91       	lpm	r21, Z+
    2772:	ca 01       	movw	r24, r20
    2774:	02 96       	adiw	r24, 0x02	; 2
    2776:	fc 01       	movw	r30, r24
    2778:	a5 91       	lpm	r26, Z+
    277a:	b4 91       	lpm	r27, Z+
    277c:	fa 01       	movw	r30, r20
    277e:	c5 91       	lpm	r28, Z+
    2780:	d4 91       	lpm	r29, Z+
    2782:	2e 5f       	subi	r18, 0xFE	; 254
    2784:	3f 4f       	sbci	r19, 0xFF	; 255
    2786:	f9 01       	movw	r30, r18
    2788:	94 91       	lpm	r25, Z+
    278a:	3f b7       	in	r19, 0x3f	; 63
    278c:	f8 94       	cli
    278e:	8c 91       	ld	r24, X
    2790:	29 2f       	mov	r18, r25
    2792:	20 95       	com	r18
    2794:	82 23       	and	r24, r18
    2796:	8c 93       	st	X, r24
    2798:	66 23       	and	r22, r22
    279a:	19 f0       	breq	.+6      	; 0x27a2 <pin_make_input+0x40>
    279c:	88 81       	ld	r24, Y
    279e:	89 2b       	or	r24, r25
    27a0:	02 c0       	rjmp	.+4      	; 0x27a6 <pin_make_input+0x44>
    27a2:	88 81       	ld	r24, Y
    27a4:	82 23       	and	r24, r18
    27a6:	88 83       	st	Y, r24
    27a8:	3f bf       	out	0x3f, r19	; 63
    27aa:	df 91       	pop	r29
    27ac:	cf 91       	pop	r28
    27ae:	08 95       	ret

000027b0 <pin_make_output>:
    27b0:	cf 93       	push	r28
    27b2:	df 93       	push	r29
    27b4:	9c 01       	movw	r18, r24
    27b6:	00 97       	sbiw	r24, 0x00	; 0
    27b8:	f9 f0       	breq	.+62     	; 0x27f8 <pin_make_output+0x48>
    27ba:	fc 01       	movw	r30, r24
    27bc:	45 91       	lpm	r20, Z+
    27be:	54 91       	lpm	r21, Z+
    27c0:	ca 01       	movw	r24, r20
    27c2:	02 96       	adiw	r24, 0x02	; 2
    27c4:	fc 01       	movw	r30, r24
    27c6:	c5 91       	lpm	r28, Z+
    27c8:	d4 91       	lpm	r29, Z+
    27ca:	fa 01       	movw	r30, r20
    27cc:	a5 91       	lpm	r26, Z+
    27ce:	b4 91       	lpm	r27, Z+
    27d0:	2e 5f       	subi	r18, 0xFE	; 254
    27d2:	3f 4f       	sbci	r19, 0xFF	; 255
    27d4:	f9 01       	movw	r30, r18
    27d6:	24 91       	lpm	r18, Z+
    27d8:	3f b7       	in	r19, 0x3f	; 63
    27da:	f8 94       	cli
    27dc:	66 23       	and	r22, r22
    27de:	19 f0       	breq	.+6      	; 0x27e6 <pin_make_output+0x36>
    27e0:	8c 91       	ld	r24, X
    27e2:	82 2b       	or	r24, r18
    27e4:	04 c0       	rjmp	.+8      	; 0x27ee <pin_make_output+0x3e>
    27e6:	8c 91       	ld	r24, X
    27e8:	92 2f       	mov	r25, r18
    27ea:	90 95       	com	r25
    27ec:	89 23       	and	r24, r25
    27ee:	8c 93       	st	X, r24
    27f0:	88 81       	ld	r24, Y
    27f2:	82 2b       	or	r24, r18
    27f4:	88 83       	st	Y, r24
    27f6:	3f bf       	out	0x3f, r19	; 63
    27f8:	df 91       	pop	r29
    27fa:	cf 91       	pop	r28
    27fc:	08 95       	ret

000027fe <pin_is_output>:
    27fe:	9c 01       	movw	r18, r24
    2800:	00 97       	sbiw	r24, 0x00	; 0
    2802:	81 f0       	breq	.+32     	; 0x2824 <pin_is_output+0x26>
    2804:	fc 01       	movw	r30, r24
    2806:	85 91       	lpm	r24, Z+
    2808:	94 91       	lpm	r25, Z+
    280a:	02 96       	adiw	r24, 0x02	; 2
    280c:	fc 01       	movw	r30, r24
    280e:	a5 91       	lpm	r26, Z+
    2810:	b4 91       	lpm	r27, Z+
    2812:	2e 5f       	subi	r18, 0xFE	; 254
    2814:	3f 4f       	sbci	r19, 0xFF	; 255
    2816:	f9 01       	movw	r30, r18
    2818:	94 91       	lpm	r25, Z+
    281a:	8c 91       	ld	r24, X
    281c:	89 23       	and	r24, r25
    281e:	11 f0       	breq	.+4      	; 0x2824 <pin_is_output+0x26>
    2820:	8f ef       	ldi	r24, 0xFF	; 255
    2822:	08 95       	ret
    2824:	80 e0       	ldi	r24, 0x00	; 0
    2826:	08 95       	ret

00002828 <pin_toggle>:
    2828:	cf 93       	push	r28
    282a:	df 93       	push	r29
    282c:	9c 01       	movw	r18, r24
    282e:	00 97       	sbiw	r24, 0x00	; 0
    2830:	e1 f0       	breq	.+56     	; 0x286a <pin_toggle+0x42>
    2832:	fc 01       	movw	r30, r24
    2834:	85 91       	lpm	r24, Z+
    2836:	94 91       	lpm	r25, Z+
    2838:	fc 01       	movw	r30, r24
    283a:	a5 91       	lpm	r26, Z+
    283c:	b4 91       	lpm	r27, Z+
    283e:	02 96       	adiw	r24, 0x02	; 2
    2840:	fc 01       	movw	r30, r24
    2842:	c5 91       	lpm	r28, Z+
    2844:	d4 91       	lpm	r29, Z+
    2846:	2e 5f       	subi	r18, 0xFE	; 254
    2848:	3f 4f       	sbci	r19, 0xFF	; 255
    284a:	f9 01       	movw	r30, r18
    284c:	24 91       	lpm	r18, Z+
    284e:	88 81       	ld	r24, Y
    2850:	82 23       	and	r24, r18
    2852:	41 f0       	breq	.+16     	; 0x2864 <pin_toggle+0x3c>
    2854:	9f b7       	in	r25, 0x3f	; 63
    2856:	f8 94       	cli
    2858:	8c 91       	ld	r24, X
    285a:	82 27       	eor	r24, r18
    285c:	8c 93       	st	X, r24
    285e:	9f bf       	out	0x3f, r25	; 63
    2860:	00 00       	nop
    2862:	03 c0       	rjmp	.+6      	; 0x286a <pin_toggle+0x42>
    2864:	87 ef       	ldi	r24, 0xF7	; 247
    2866:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    286a:	df 91       	pop	r29
    286c:	cf 91       	pop	r28
    286e:	08 95       	ret

00002870 <pin_low>:
    2870:	cf 93       	push	r28
    2872:	df 93       	push	r29
    2874:	9c 01       	movw	r18, r24
    2876:	00 97       	sbiw	r24, 0x00	; 0
    2878:	e9 f0       	breq	.+58     	; 0x28b4 <pin_low+0x44>
    287a:	fc 01       	movw	r30, r24
    287c:	85 91       	lpm	r24, Z+
    287e:	94 91       	lpm	r25, Z+
    2880:	fc 01       	movw	r30, r24
    2882:	a5 91       	lpm	r26, Z+
    2884:	b4 91       	lpm	r27, Z+
    2886:	02 96       	adiw	r24, 0x02	; 2
    2888:	fc 01       	movw	r30, r24
    288a:	c5 91       	lpm	r28, Z+
    288c:	d4 91       	lpm	r29, Z+
    288e:	2e 5f       	subi	r18, 0xFE	; 254
    2890:	3f 4f       	sbci	r19, 0xFF	; 255
    2892:	f9 01       	movw	r30, r18
    2894:	24 91       	lpm	r18, Z+
    2896:	88 81       	ld	r24, Y
    2898:	82 23       	and	r24, r18
    289a:	49 f0       	breq	.+18     	; 0x28ae <pin_low+0x3e>
    289c:	9f b7       	in	r25, 0x3f	; 63
    289e:	f8 94       	cli
    28a0:	8c 91       	ld	r24, X
    28a2:	20 95       	com	r18
    28a4:	82 23       	and	r24, r18
    28a6:	8c 93       	st	X, r24
    28a8:	9f bf       	out	0x3f, r25	; 63
    28aa:	00 00       	nop
    28ac:	03 c0       	rjmp	.+6      	; 0x28b4 <pin_low+0x44>
    28ae:	87 ef       	ldi	r24, 0xF7	; 247
    28b0:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    28b4:	df 91       	pop	r29
    28b6:	cf 91       	pop	r28
    28b8:	08 95       	ret

000028ba <pin_high>:
    28ba:	cf 93       	push	r28
    28bc:	df 93       	push	r29
    28be:	9c 01       	movw	r18, r24
    28c0:	00 97       	sbiw	r24, 0x00	; 0
    28c2:	e1 f0       	breq	.+56     	; 0x28fc <pin_high+0x42>
    28c4:	fc 01       	movw	r30, r24
    28c6:	85 91       	lpm	r24, Z+
    28c8:	94 91       	lpm	r25, Z+
    28ca:	fc 01       	movw	r30, r24
    28cc:	a5 91       	lpm	r26, Z+
    28ce:	b4 91       	lpm	r27, Z+
    28d0:	02 96       	adiw	r24, 0x02	; 2
    28d2:	fc 01       	movw	r30, r24
    28d4:	c5 91       	lpm	r28, Z+
    28d6:	d4 91       	lpm	r29, Z+
    28d8:	2e 5f       	subi	r18, 0xFE	; 254
    28da:	3f 4f       	sbci	r19, 0xFF	; 255
    28dc:	f9 01       	movw	r30, r18
    28de:	24 91       	lpm	r18, Z+
    28e0:	88 81       	ld	r24, Y
    28e2:	82 23       	and	r24, r18
    28e4:	41 f0       	breq	.+16     	; 0x28f6 <pin_high+0x3c>
    28e6:	9f b7       	in	r25, 0x3f	; 63
    28e8:	f8 94       	cli
    28ea:	8c 91       	ld	r24, X
    28ec:	82 2b       	or	r24, r18
    28ee:	8c 93       	st	X, r24
    28f0:	9f bf       	out	0x3f, r25	; 63
    28f2:	00 00       	nop
    28f4:	03 c0       	rjmp	.+6      	; 0x28fc <pin_high+0x42>
    28f6:	87 ef       	ldi	r24, 0xF7	; 247
    28f8:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    28fc:	df 91       	pop	r29
    28fe:	cf 91       	pop	r28
    2900:	08 95       	ret

00002902 <pin_set>:
    2902:	66 23       	and	r22, r22
    2904:	19 f0       	breq	.+6      	; 0x290c <pin_set+0xa>
    2906:	0e 94 5d 14 	call	0x28ba	; 0x28ba <pin_high>
    290a:	08 95       	ret
    290c:	0e 94 38 14 	call	0x2870	; 0x2870 <pin_low>
    2910:	08 95       	ret

00002912 <LED_set>:
    2912:	1f 93       	push	r17
    2914:	cf 93       	push	r28
    2916:	df 93       	push	r29
    2918:	ec 01       	movw	r28, r24
    291a:	16 2f       	mov	r17, r22
    291c:	88 81       	ld	r24, Y
    291e:	99 81       	ldd	r25, Y+1	; 0x01
    2920:	00 97       	sbiw	r24, 0x00	; 0
    2922:	a9 f0       	breq	.+42     	; 0x294e <LED_set+0x3c>
    2924:	3a 81       	ldd	r19, Y+2	; 0x02
    2926:	30 fd       	sbrc	r19, 0
    2928:	05 c0       	rjmp	.+10     	; 0x2934 <LED_set+0x22>
    292a:	20 e0       	ldi	r18, 0x00	; 0
    292c:	66 23       	and	r22, r22
    292e:	09 f4       	brne	.+2      	; 0x2932 <LED_set+0x20>
    2930:	21 e0       	ldi	r18, 0x01	; 1
    2932:	12 2f       	mov	r17, r18
    2934:	31 fd       	sbrc	r19, 1
    2936:	06 c0       	rjmp	.+12     	; 0x2944 <LED_set+0x32>
    2938:	61 2f       	mov	r22, r17
    293a:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <pin_make_output>
    293e:	8a 81       	ldd	r24, Y+2	; 0x02
    2940:	82 60       	ori	r24, 0x02	; 2
    2942:	8a 83       	std	Y+2, r24	; 0x02
    2944:	88 81       	ld	r24, Y
    2946:	99 81       	ldd	r25, Y+1	; 0x01
    2948:	61 2f       	mov	r22, r17
    294a:	0e 94 81 14 	call	0x2902	; 0x2902 <pin_set>
    294e:	df 91       	pop	r29
    2950:	cf 91       	pop	r28
    2952:	1f 91       	pop	r17
    2954:	08 95       	ret

00002956 <rprintfIgnore>:
    2956:	08 95       	ret

00002958 <rprintfInit>:
    2958:	20 91 6a 02 	lds	r18, 0x026A
    295c:	30 91 6b 02 	lds	r19, 0x026B
    2960:	90 93 6b 02 	sts	0x026B, r25
    2964:	80 93 6a 02 	sts	0x026A, r24
    2968:	c9 01       	movw	r24, r18
    296a:	08 95       	ret

0000296c <rprintfChar>:
    296c:	1f 93       	push	r17
    296e:	18 2f       	mov	r17, r24
    2970:	8a 30       	cpi	r24, 0x0A	; 10
    2972:	31 f4       	brne	.+12     	; 0x2980 <rprintfChar+0x14>
    2974:	e0 91 6a 02 	lds	r30, 0x026A
    2978:	f0 91 6b 02 	lds	r31, 0x026B
    297c:	8d e0       	ldi	r24, 0x0D	; 13
    297e:	09 95       	icall
    2980:	e0 91 6a 02 	lds	r30, 0x026A
    2984:	f0 91 6b 02 	lds	r31, 0x026B
    2988:	81 2f       	mov	r24, r17
    298a:	09 95       	icall
    298c:	1f 91       	pop	r17
    298e:	08 95       	ret

00002990 <rprintfCharN>:
    2990:	1f 93       	push	r17
    2992:	cf 93       	push	r28
    2994:	df 93       	push	r29
    2996:	18 2f       	mov	r17, r24
    2998:	eb 01       	movw	r28, r22
    299a:	04 c0       	rjmp	.+8      	; 0x29a4 <rprintfCharN+0x14>
    299c:	81 2f       	mov	r24, r17
    299e:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    29a2:	21 97       	sbiw	r28, 0x01	; 1
    29a4:	20 97       	sbiw	r28, 0x00	; 0
    29a6:	d1 f7       	brne	.-12     	; 0x299c <rprintfCharN+0xc>
    29a8:	df 91       	pop	r29
    29aa:	cf 91       	pop	r28
    29ac:	1f 91       	pop	r17
    29ae:	08 95       	ret

000029b0 <rprintfStr>:
    29b0:	cf 93       	push	r28
    29b2:	df 93       	push	r29
    29b4:	ec 01       	movw	r28, r24
    29b6:	00 97       	sbiw	r24, 0x00	; 0
    29b8:	21 f4       	brne	.+8      	; 0x29c2 <rprintfStr+0x12>
    29ba:	06 c0       	rjmp	.+12     	; 0x29c8 <rprintfStr+0x18>
    29bc:	21 96       	adiw	r28, 0x01	; 1
    29be:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    29c2:	88 81       	ld	r24, Y
    29c4:	88 23       	and	r24, r24
    29c6:	d1 f7       	brne	.-12     	; 0x29bc <rprintfStr+0xc>
    29c8:	df 91       	pop	r29
    29ca:	cf 91       	pop	r28
    29cc:	08 95       	ret

000029ce <rprintfProgStr>:
    29ce:	cf 93       	push	r28
    29d0:	df 93       	push	r29
    29d2:	ec 01       	movw	r28, r24
    29d4:	00 97       	sbiw	r24, 0x00	; 0
    29d6:	19 f4       	brne	.+6      	; 0x29de <rprintfProgStr+0x10>
    29d8:	07 c0       	rjmp	.+14     	; 0x29e8 <rprintfProgStr+0x1a>
    29da:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    29de:	fe 01       	movw	r30, r28
    29e0:	21 96       	adiw	r28, 0x01	; 1
    29e2:	84 91       	lpm	r24, Z+
    29e4:	88 23       	and	r24, r24
    29e6:	c9 f7       	brne	.-14     	; 0x29da <rprintfProgStr+0xc>
    29e8:	df 91       	pop	r29
    29ea:	cf 91       	pop	r28
    29ec:	08 95       	ret

000029ee <rprintfCRLF>:
    29ee:	8a e0       	ldi	r24, 0x0A	; 10
    29f0:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    29f4:	08 95       	ret

000029f6 <rprintfu04>:
    29f6:	e8 2f       	mov	r30, r24
    29f8:	f0 e0       	ldi	r31, 0x00	; 0
    29fa:	ef 70       	andi	r30, 0x0F	; 15
    29fc:	f0 70       	andi	r31, 0x00	; 0
    29fe:	e5 51       	subi	r30, 0x15	; 21
    2a00:	fc 4f       	sbci	r31, 0xFC	; 252
    2a02:	e4 91       	lpm	r30, Z+
    2a04:	8e 2f       	mov	r24, r30
    2a06:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2a0a:	08 95       	ret

00002a0c <rprintfFloat>:
    2a0c:	4f 92       	push	r4
    2a0e:	5f 92       	push	r5
    2a10:	6f 92       	push	r6
    2a12:	7f 92       	push	r7
    2a14:	8f 92       	push	r8
    2a16:	9f 92       	push	r9
    2a18:	af 92       	push	r10
    2a1a:	bf 92       	push	r11
    2a1c:	cf 92       	push	r12
    2a1e:	df 92       	push	r13
    2a20:	ef 92       	push	r14
    2a22:	ff 92       	push	r15
    2a24:	0f 93       	push	r16
    2a26:	1f 93       	push	r17
    2a28:	cf 93       	push	r28
    2a2a:	df 93       	push	r29
    2a2c:	48 2e       	mov	r4, r24
    2a2e:	5a 01       	movw	r10, r20
    2a30:	6b 01       	movw	r12, r22
    2a32:	cb 01       	movw	r24, r22
    2a34:	ba 01       	movw	r22, r20
    2a36:	20 e0       	ldi	r18, 0x00	; 0
    2a38:	30 e0       	ldi	r19, 0x00	; 0
    2a3a:	40 e0       	ldi	r20, 0x00	; 0
    2a3c:	50 e0       	ldi	r21, 0x00	; 0
    2a3e:	0e 94 fe 24 	call	0x49fc	; 0x49fc <__gesf2>
    2a42:	18 16       	cp	r1, r24
    2a44:	1c f4       	brge	.+6      	; 0x2a4c <rprintfFloat+0x40>
    2a46:	35 01       	movw	r6, r10
    2a48:	46 01       	movw	r8, r12
    2a4a:	06 c0       	rjmp	.+12     	; 0x2a58 <rprintfFloat+0x4c>
    2a4c:	35 01       	movw	r6, r10
    2a4e:	46 01       	movw	r8, r12
    2a50:	97 fa       	bst	r9, 7
    2a52:	90 94       	com	r9
    2a54:	97 f8       	bld	r9, 7
    2a56:	90 94       	com	r9
    2a58:	55 24       	eor	r5, r5
    2a5a:	0f 2e       	mov	r0, r31
    2a5c:	f0 e0       	ldi	r31, 0x00	; 0
    2a5e:	ef 2e       	mov	r14, r31
    2a60:	f0 e0       	ldi	r31, 0x00	; 0
    2a62:	ff 2e       	mov	r15, r31
    2a64:	f0 e8       	ldi	r31, 0x80	; 128
    2a66:	0f 2f       	mov	r16, r31
    2a68:	ff e3       	ldi	r31, 0x3F	; 63
    2a6a:	1f 2f       	mov	r17, r31
    2a6c:	f0 2d       	mov	r31, r0
    2a6e:	c4 01       	movw	r24, r8
    2a70:	b3 01       	movw	r22, r6
    2a72:	a8 01       	movw	r20, r16
    2a74:	97 01       	movw	r18, r14
    2a76:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    2a7a:	20 e0       	ldi	r18, 0x00	; 0
    2a7c:	30 e0       	ldi	r19, 0x00	; 0
    2a7e:	40 e2       	ldi	r20, 0x20	; 32
    2a80:	51 e4       	ldi	r21, 0x41	; 65
    2a82:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    2a86:	87 fd       	sbrc	r24, 7
    2a88:	0e c0       	rjmp	.+28     	; 0x2aa6 <rprintfFloat+0x9a>
    2a8a:	c8 01       	movw	r24, r16
    2a8c:	b7 01       	movw	r22, r14
    2a8e:	20 e0       	ldi	r18, 0x00	; 0
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	40 e2       	ldi	r20, 0x20	; 32
    2a94:	51 e4       	ldi	r21, 0x41	; 65
    2a96:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    2a9a:	7b 01       	movw	r14, r22
    2a9c:	8c 01       	movw	r16, r24
    2a9e:	53 94       	inc	r5
    2aa0:	8f e0       	ldi	r24, 0x0F	; 15
    2aa2:	58 16       	cp	r5, r24
    2aa4:	21 f7       	brne	.-56     	; 0x2a6e <rprintfFloat+0x62>
    2aa6:	c6 01       	movw	r24, r12
    2aa8:	b5 01       	movw	r22, r10
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	40 e0       	ldi	r20, 0x00	; 0
    2ab0:	50 e0       	ldi	r21, 0x00	; 0
    2ab2:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    2ab6:	88 23       	and	r24, r24
    2ab8:	14 f4       	brge	.+4      	; 0x2abe <rprintfFloat+0xb2>
    2aba:	8d e2       	ldi	r24, 0x2D	; 45
    2abc:	01 c0       	rjmp	.+2      	; 0x2ac0 <rprintfFloat+0xb4>
    2abe:	8b e2       	ldi	r24, 0x2B	; 43
    2ac0:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2ac4:	dd 24       	eor	r13, r13
    2ac6:	aa 24       	eor	r10, r10
    2ac8:	56 c0       	rjmp	.+172    	; 0x2b76 <rprintfFloat+0x16a>
    2aca:	c4 01       	movw	r24, r8
    2acc:	b3 01       	movw	r22, r6
    2ace:	a8 01       	movw	r20, r16
    2ad0:	97 01       	movw	r18, r14
    2ad2:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    2ad6:	0e 94 c9 23 	call	0x4792	; 0x4792 <__fixunssfsi>
    2ada:	b6 2e       	mov	r11, r22
    2adc:	d6 2a       	or	r13, r22
    2ade:	cd 2d       	mov	r28, r13
    2ae0:	d0 e0       	ldi	r29, 0x00	; 0
    2ae2:	cc 24       	eor	r12, r12
    2ae4:	dd 24       	eor	r13, r13
    2ae6:	c8 01       	movw	r24, r16
    2ae8:	b7 01       	movw	r22, r14
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	40 e8       	ldi	r20, 0x80	; 128
    2af0:	5f e3       	ldi	r21, 0x3F	; 63
    2af2:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    2af6:	88 23       	and	r24, r24
    2af8:	19 f4       	brne	.+6      	; 0x2b00 <rprintfFloat+0xf4>
    2afa:	81 e0       	ldi	r24, 0x01	; 1
    2afc:	c8 2e       	mov	r12, r24
    2afe:	d1 2c       	mov	r13, r1
    2b00:	cc 29       	or	r28, r12
    2b02:	dd 29       	or	r29, r13
    2b04:	cd 2b       	or	r28, r29
    2b06:	39 f0       	breq	.+14     	; 0x2b16 <rprintfFloat+0x10a>
    2b08:	8b 2d       	mov	r24, r11
    2b0a:	80 5d       	subi	r24, 0xD0	; 208
    2b0c:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2b10:	dd 24       	eor	r13, r13
    2b12:	da 94       	dec	r13
    2b14:	04 c0       	rjmp	.+8      	; 0x2b1e <rprintfFloat+0x112>
    2b16:	80 e2       	ldi	r24, 0x20	; 32
    2b18:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2b1c:	dd 24       	eor	r13, r13
    2b1e:	c8 01       	movw	r24, r16
    2b20:	b7 01       	movw	r22, r14
    2b22:	20 e0       	ldi	r18, 0x00	; 0
    2b24:	30 e0       	ldi	r19, 0x00	; 0
    2b26:	40 e8       	ldi	r20, 0x80	; 128
    2b28:	5f e3       	ldi	r21, 0x3F	; 63
    2b2a:	0e 94 58 23 	call	0x46b0	; 0x46b0 <__cmpsf2>
    2b2e:	88 23       	and	r24, r24
    2b30:	19 f4       	brne	.+6      	; 0x2b38 <rprintfFloat+0x12c>
    2b32:	8e e2       	ldi	r24, 0x2E	; 46
    2b34:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2b38:	6b 2d       	mov	r22, r11
    2b3a:	70 e0       	ldi	r23, 0x00	; 0
    2b3c:	88 27       	eor	r24, r24
    2b3e:	77 fd       	sbrc	r23, 7
    2b40:	80 95       	com	r24
    2b42:	98 2f       	mov	r25, r24
    2b44:	0e 94 f7 23 	call	0x47ee	; 0x47ee <__floatsisf>
    2b48:	a8 01       	movw	r20, r16
    2b4a:	97 01       	movw	r18, r14
    2b4c:	0e 94 02 25 	call	0x4a04	; 0x4a04 <__mulsf3>
    2b50:	9b 01       	movw	r18, r22
    2b52:	ac 01       	movw	r20, r24
    2b54:	c4 01       	movw	r24, r8
    2b56:	b3 01       	movw	r22, r6
    2b58:	0e 94 dc 22 	call	0x45b8	; 0x45b8 <__subsf3>
    2b5c:	3b 01       	movw	r6, r22
    2b5e:	4c 01       	movw	r8, r24
    2b60:	c8 01       	movw	r24, r16
    2b62:	b7 01       	movw	r22, r14
    2b64:	20 e0       	ldi	r18, 0x00	; 0
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	40 e2       	ldi	r20, 0x20	; 32
    2b6a:	51 e4       	ldi	r21, 0x41	; 65
    2b6c:	0e 94 5c 23 	call	0x46b8	; 0x46b8 <__divsf3>
    2b70:	7b 01       	movw	r14, r22
    2b72:	8c 01       	movw	r16, r24
    2b74:	a3 94       	inc	r10
    2b76:	a4 14       	cp	r10, r4
    2b78:	08 f4       	brcc	.+2      	; 0x2b7c <rprintfFloat+0x170>
    2b7a:	a7 cf       	rjmp	.-178    	; 0x2aca <rprintfFloat+0xbe>
    2b7c:	df 91       	pop	r29
    2b7e:	cf 91       	pop	r28
    2b80:	1f 91       	pop	r17
    2b82:	0f 91       	pop	r16
    2b84:	ff 90       	pop	r15
    2b86:	ef 90       	pop	r14
    2b88:	df 90       	pop	r13
    2b8a:	cf 90       	pop	r12
    2b8c:	bf 90       	pop	r11
    2b8e:	af 90       	pop	r10
    2b90:	9f 90       	pop	r9
    2b92:	8f 90       	pop	r8
    2b94:	7f 90       	pop	r7
    2b96:	6f 90       	pop	r6
    2b98:	5f 90       	pop	r5
    2b9a:	4f 90       	pop	r4
    2b9c:	08 95       	ret

00002b9e <rprintf1RamRom>:
    2b9e:	7f 92       	push	r7
    2ba0:	8f 92       	push	r8
    2ba2:	9f 92       	push	r9
    2ba4:	af 92       	push	r10
    2ba6:	bf 92       	push	r11
    2ba8:	cf 92       	push	r12
    2baa:	df 92       	push	r13
    2bac:	ef 92       	push	r14
    2bae:	ff 92       	push	r15
    2bb0:	0f 93       	push	r16
    2bb2:	1f 93       	push	r17
    2bb4:	df 93       	push	r29
    2bb6:	cf 93       	push	r28
    2bb8:	0f 92       	push	r0
    2bba:	cd b7       	in	r28, 0x3d	; 61
    2bbc:	de b7       	in	r29, 0x3e	; 62
    2bbe:	79 88       	ldd	r7, Y+17	; 0x11
    2bc0:	ca 88       	ldd	r12, Y+18	; 0x12
    2bc2:	db 88       	ldd	r13, Y+19	; 0x13
    2bc4:	64 e1       	ldi	r22, 0x14	; 20
    2bc6:	e6 2e       	mov	r14, r22
    2bc8:	f1 2c       	mov	r15, r1
    2bca:	ec 0e       	add	r14, r28
    2bcc:	fd 1e       	adc	r15, r29
    2bce:	17 c0       	rjmp	.+46     	; 0x2bfe <rprintf1RamRom+0x60>
    2bd0:	88 23       	and	r24, r24
    2bd2:	89 f4       	brne	.+34     	; 0x2bf6 <rprintf1RamRom+0x58>
    2bd4:	80 e0       	ldi	r24, 0x00	; 0
    2bd6:	90 e0       	ldi	r25, 0x00	; 0
    2bd8:	0f 90       	pop	r0
    2bda:	cf 91       	pop	r28
    2bdc:	df 91       	pop	r29
    2bde:	1f 91       	pop	r17
    2be0:	0f 91       	pop	r16
    2be2:	ff 90       	pop	r15
    2be4:	ef 90       	pop	r14
    2be6:	df 90       	pop	r13
    2be8:	cf 90       	pop	r12
    2bea:	bf 90       	pop	r11
    2bec:	af 90       	pop	r10
    2bee:	9f 90       	pop	r9
    2bf0:	8f 90       	pop	r8
    2bf2:	7f 90       	pop	r7
    2bf4:	08 95       	ret
    2bf6:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2bfa:	57 01       	movw	r10, r14
    2bfc:	75 01       	movw	r14, r10
    2bfe:	96 01       	movw	r18, r12
    2c00:	2f 5f       	subi	r18, 0xFF	; 255
    2c02:	3f 4f       	sbci	r19, 0xFF	; 255
    2c04:	77 20       	and	r7, r7
    2c06:	21 f0       	breq	.+8      	; 0x2c10 <rprintf1RamRom+0x72>
    2c08:	f6 01       	movw	r30, r12
    2c0a:	69 01       	movw	r12, r18
    2c0c:	84 91       	lpm	r24, Z+
    2c0e:	03 c0       	rjmp	.+6      	; 0x2c16 <rprintf1RamRom+0x78>
    2c10:	f6 01       	movw	r30, r12
    2c12:	80 81       	ld	r24, Z
    2c14:	69 01       	movw	r12, r18
    2c16:	85 32       	cpi	r24, 0x25	; 37
    2c18:	d9 f6       	brne	.-74     	; 0x2bd0 <rprintf1RamRom+0x32>
    2c1a:	2f 5f       	subi	r18, 0xFF	; 255
    2c1c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c1e:	77 20       	and	r7, r7
    2c20:	21 f0       	breq	.+8      	; 0x2c2a <rprintf1RamRom+0x8c>
    2c22:	f6 01       	movw	r30, r12
    2c24:	69 01       	movw	r12, r18
    2c26:	94 91       	lpm	r25, Z+
    2c28:	03 c0       	rjmp	.+6      	; 0x2c30 <rprintf1RamRom+0x92>
    2c2a:	f6 01       	movw	r30, r12
    2c2c:	90 81       	ld	r25, Z
    2c2e:	69 01       	movw	r12, r18
    2c30:	93 37       	cpi	r25, 0x73	; 115
    2c32:	a1 f0       	breq	.+40     	; 0x2c5c <rprintf1RamRom+0xbe>
    2c34:	94 37       	cpi	r25, 0x74	; 116
    2c36:	38 f4       	brcc	.+14     	; 0x2c46 <rprintf1RamRom+0xa8>
    2c38:	93 36       	cpi	r25, 0x63	; 99
    2c3a:	d9 f0       	breq	.+54     	; 0x2c72 <rprintf1RamRom+0xd4>
    2c3c:	94 36       	cpi	r25, 0x64	; 100
    2c3e:	41 f0       	breq	.+16     	; 0x2c50 <rprintf1RamRom+0xb2>
    2c40:	95 32       	cpi	r25, 0x25	; 37
    2c42:	09 f5       	brne	.+66     	; 0x2c86 <rprintf1RamRom+0xe8>
    2c44:	25 c0       	rjmp	.+74     	; 0x2c90 <rprintf1RamRom+0xf2>
    2c46:	95 37       	cpi	r25, 0x75	; 117
    2c48:	19 f0       	breq	.+6      	; 0x2c50 <rprintf1RamRom+0xb2>
    2c4a:	98 37       	cpi	r25, 0x78	; 120
    2c4c:	e1 f4       	brne	.+56     	; 0x2c86 <rprintf1RamRom+0xe8>
    2c4e:	22 c0       	rjmp	.+68     	; 0x2c94 <rprintf1RamRom+0xf6>
    2c50:	00 e1       	ldi	r16, 0x10	; 16
    2c52:	17 e2       	ldi	r17, 0x27	; 39
    2c54:	5a e0       	ldi	r21, 0x0A	; 10
    2c56:	85 2e       	mov	r8, r21
    2c58:	91 2c       	mov	r9, r1
    2c5a:	21 c0       	rjmp	.+66     	; 0x2c9e <rprintf1RamRom+0x100>
    2c5c:	42 e0       	ldi	r20, 0x02	; 2
    2c5e:	a4 2e       	mov	r10, r20
    2c60:	b1 2c       	mov	r11, r1
    2c62:	ae 0c       	add	r10, r14
    2c64:	bf 1c       	adc	r11, r15
    2c66:	f7 01       	movw	r30, r14
    2c68:	80 81       	ld	r24, Z
    2c6a:	91 81       	ldd	r25, Z+1	; 0x01
    2c6c:	0e 94 d8 14 	call	0x29b0	; 0x29b0 <rprintfStr>
    2c70:	c5 cf       	rjmp	.-118    	; 0x2bfc <rprintf1RamRom+0x5e>
    2c72:	32 e0       	ldi	r19, 0x02	; 2
    2c74:	a3 2e       	mov	r10, r19
    2c76:	b1 2c       	mov	r11, r1
    2c78:	ae 0c       	add	r10, r14
    2c7a:	bf 1c       	adc	r11, r15
    2c7c:	f7 01       	movw	r30, r14
    2c7e:	80 81       	ld	r24, Z
    2c80:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2c84:	bb cf       	rjmp	.-138    	; 0x2bfc <rprintf1RamRom+0x5e>
    2c86:	85 e2       	ldi	r24, 0x25	; 37
    2c88:	99 83       	std	Y+1, r25	; 0x01
    2c8a:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2c8e:	99 81       	ldd	r25, Y+1	; 0x01
    2c90:	89 2f       	mov	r24, r25
    2c92:	b1 cf       	rjmp	.-158    	; 0x2bf6 <rprintf1RamRom+0x58>
    2c94:	00 e0       	ldi	r16, 0x00	; 0
    2c96:	10 e1       	ldi	r17, 0x10	; 16
    2c98:	20 e1       	ldi	r18, 0x10	; 16
    2c9a:	82 2e       	mov	r8, r18
    2c9c:	91 2c       	mov	r9, r1
    2c9e:	82 e0       	ldi	r24, 0x02	; 2
    2ca0:	a8 2e       	mov	r10, r24
    2ca2:	b1 2c       	mov	r11, r1
    2ca4:	ae 0c       	add	r10, r14
    2ca6:	bf 1c       	adc	r11, r15
    2ca8:	f7 01       	movw	r30, r14
    2caa:	e0 80       	ld	r14, Z
    2cac:	f1 80       	ldd	r15, Z+1	; 0x01
    2cae:	94 36       	cpi	r25, 0x64	; 100
    2cb0:	51 f4       	brne	.+20     	; 0x2cc6 <rprintf1RamRom+0x128>
    2cb2:	f7 fe       	sbrs	r15, 7
    2cb4:	14 c0       	rjmp	.+40     	; 0x2cde <rprintf1RamRom+0x140>
    2cb6:	f0 94       	com	r15
    2cb8:	e1 94       	neg	r14
    2cba:	f1 08       	sbc	r15, r1
    2cbc:	f3 94       	inc	r15
    2cbe:	8d e2       	ldi	r24, 0x2D	; 45
    2cc0:	0e 94 b6 14 	call	0x296c	; 0x296c <rprintfChar>
    2cc4:	0c c0       	rjmp	.+24     	; 0x2cde <rprintf1RamRom+0x140>
    2cc6:	95 37       	cpi	r25, 0x75	; 117
    2cc8:	69 f4       	brne	.+26     	; 0x2ce4 <rprintf1RamRom+0x146>
    2cca:	09 c0       	rjmp	.+18     	; 0x2cde <rprintf1RamRom+0x140>
    2ccc:	c8 01       	movw	r24, r16
    2cce:	6a e0       	ldi	r22, 0x0A	; 10
    2cd0:	70 e0       	ldi	r23, 0x00	; 0
    2cd2:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    2cd6:	8b 01       	movw	r16, r22
    2cd8:	62 30       	cpi	r22, 0x02	; 2
    2cda:	71 05       	cpc	r23, r1
    2cdc:	18 f0       	brcs	.+6      	; 0x2ce4 <rprintf1RamRom+0x146>
    2cde:	e0 16       	cp	r14, r16
    2ce0:	f1 06       	cpc	r15, r17
    2ce2:	a0 f3       	brcs	.-24     	; 0x2ccc <rprintf1RamRom+0x12e>
    2ce4:	c7 01       	movw	r24, r14
    2ce6:	b8 01       	movw	r22, r16
    2ce8:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    2cec:	86 2f       	mov	r24, r22
    2cee:	0e 94 fb 14 	call	0x29f6	; 0x29f6 <rprintfu04>
    2cf2:	c7 01       	movw	r24, r14
    2cf4:	b8 01       	movw	r22, r16
    2cf6:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    2cfa:	7c 01       	movw	r14, r24
    2cfc:	c8 01       	movw	r24, r16
    2cfe:	b4 01       	movw	r22, r8
    2d00:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    2d04:	8b 01       	movw	r16, r22
    2d06:	61 15       	cp	r22, r1
    2d08:	71 05       	cpc	r23, r1
    2d0a:	61 f7       	brne	.-40     	; 0x2ce4 <rprintf1RamRom+0x146>
    2d0c:	77 cf       	rjmp	.-274    	; 0x2bfc <rprintf1RamRom+0x5e>

00002d0e <ticks_per_ms>:
    2d0e:	ef 92       	push	r14
    2d10:	ff 92       	push	r15
    2d12:	0f 93       	push	r16
    2d14:	1f 93       	push	r17
    2d16:	7a 01       	movw	r14, r20
    2d18:	20 91 04 02 	lds	r18, 0x0204
    2d1c:	30 91 05 02 	lds	r19, 0x0205
    2d20:	40 e0       	ldi	r20, 0x00	; 0
    2d22:	50 e0       	ldi	r21, 0x00	; 0
    2d24:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    2d28:	00 e0       	ldi	r16, 0x00	; 0
    2d2a:	10 e0       	ldi	r17, 0x00	; 0
    2d2c:	a8 01       	movw	r20, r16
    2d2e:	97 01       	movw	r18, r14
    2d30:	0e 94 13 26 	call	0x4c26	; 0x4c26 <__udivmodsi4>
    2d34:	ca 01       	movw	r24, r20
    2d36:	b9 01       	movw	r22, r18
    2d38:	1f 91       	pop	r17
    2d3a:	0f 91       	pop	r16
    2d3c:	ff 90       	pop	r15
    2d3e:	ef 90       	pop	r14
    2d40:	08 95       	ret

00002d42 <delay_cycles>:
    2d42:	61 30       	cpi	r22, 0x01	; 1
    2d44:	23 e0       	ldi	r18, 0x03	; 3
    2d46:	72 07       	cpc	r23, r18
    2d48:	20 e0       	ldi	r18, 0x00	; 0
    2d4a:	82 07       	cpc	r24, r18
    2d4c:	20 e0       	ldi	r18, 0x00	; 0
    2d4e:	92 07       	cpc	r25, r18
    2d50:	48 f4       	brcc	.+18     	; 0x2d64 <delay_cycles+0x22>
    2d52:	23 e0       	ldi	r18, 0x03	; 3
    2d54:	30 e0       	ldi	r19, 0x00	; 0
    2d56:	40 e0       	ldi	r20, 0x00	; 0
    2d58:	50 e0       	ldi	r21, 0x00	; 0
    2d5a:	0e 94 13 26 	call	0x4c26	; 0x4c26 <__udivmodsi4>
    2d5e:	2a 95       	dec	r18
    2d60:	f1 f7       	brne	.-4      	; 0x2d5e <delay_cycles+0x1c>
    2d62:	08 95       	ret
    2d64:	9b 01       	movw	r18, r22
    2d66:	ac 01       	movw	r20, r24
    2d68:	82 e0       	ldi	r24, 0x02	; 2
    2d6a:	56 95       	lsr	r21
    2d6c:	47 95       	ror	r20
    2d6e:	37 95       	ror	r19
    2d70:	27 95       	ror	r18
    2d72:	8a 95       	dec	r24
    2d74:	d1 f7       	brne	.-12     	; 0x2d6a <delay_cycles+0x28>
    2d76:	da 01       	movw	r26, r20
    2d78:	c9 01       	movw	r24, r18
    2d7a:	20 30       	cpi	r18, 0x00	; 0
    2d7c:	60 e0       	ldi	r22, 0x00	; 0
    2d7e:	36 07       	cpc	r19, r22
    2d80:	61 e0       	ldi	r22, 0x01	; 1
    2d82:	46 07       	cpc	r20, r22
    2d84:	60 e0       	ldi	r22, 0x00	; 0
    2d86:	56 07       	cpc	r21, r22
    2d88:	20 f0       	brcs	.+8      	; 0x2d92 <delay_cycles+0x50>
    2d8a:	8f ef       	ldi	r24, 0xFF	; 255
    2d8c:	9f ef       	ldi	r25, 0xFF	; 255
    2d8e:	a0 e0       	ldi	r26, 0x00	; 0
    2d90:	b0 e0       	ldi	r27, 0x00	; 0
    2d92:	fc 01       	movw	r30, r24
    2d94:	31 97       	sbiw	r30, 0x01	; 1
    2d96:	f1 f7       	brne	.-4      	; 0x2d94 <delay_cycles+0x52>
    2d98:	a0 e0       	ldi	r26, 0x00	; 0
    2d9a:	b0 e0       	ldi	r27, 0x00	; 0
    2d9c:	28 1b       	sub	r18, r24
    2d9e:	39 0b       	sbc	r19, r25
    2da0:	4a 0b       	sbc	r20, r26
    2da2:	5b 0b       	sbc	r21, r27
    2da4:	41 f7       	brne	.-48     	; 0x2d76 <delay_cycles+0x34>
    2da6:	08 95       	ret

00002da8 <nullTimerCompareCallback>:
    2da8:	08 95       	ret

00002daa <clockCallback>:
    2daa:	80 91 fc 02 	lds	r24, 0x02FC
    2dae:	90 91 fd 02 	lds	r25, 0x02FD
    2db2:	a0 91 fe 02 	lds	r26, 0x02FE
    2db6:	b0 91 ff 02 	lds	r27, 0x02FF
    2dba:	01 96       	adiw	r24, 0x01	; 1
    2dbc:	a1 1d       	adc	r26, r1
    2dbe:	b1 1d       	adc	r27, r1
    2dc0:	80 93 fc 02 	sts	0x02FC, r24
    2dc4:	90 93 fd 02 	sts	0x02FD, r25
    2dc8:	a0 93 fe 02 	sts	0x02FE, r26
    2dcc:	b0 93 ff 02 	sts	0x02FF, r27
    2dd0:	08 95       	ret

00002dd2 <__timerPrescalerIndex>:
    2dd2:	fc 01       	movw	r30, r24
    2dd4:	37 96       	adiw	r30, 0x07	; 7
    2dd6:	e4 91       	lpm	r30, Z+
    2dd8:	ee 23       	and	r30, r30
    2dda:	21 f4       	brne	.+8      	; 0x2de4 <__timerPrescalerIndex+0x12>
    2ddc:	26 e0       	ldi	r18, 0x06	; 6
    2dde:	8c ef       	ldi	r24, 0xFC	; 252
    2de0:	93 e0       	ldi	r25, 0x03	; 3
    2de2:	03 c0       	rjmp	.+6      	; 0x2dea <__timerPrescalerIndex+0x18>
    2de4:	28 e0       	ldi	r18, 0x08	; 8
    2de6:	88 e0       	ldi	r24, 0x08	; 8
    2de8:	94 e0       	ldi	r25, 0x04	; 4
    2dea:	42 2f       	mov	r20, r18
    2dec:	41 50       	subi	r20, 0x01	; 1
    2dee:	24 2f       	mov	r18, r20
    2df0:	33 27       	eor	r19, r19
    2df2:	27 fd       	sbrc	r18, 7
    2df4:	30 95       	com	r19
    2df6:	22 0f       	add	r18, r18
    2df8:	33 1f       	adc	r19, r19
    2dfa:	28 0f       	add	r18, r24
    2dfc:	39 1f       	adc	r19, r25
    2dfe:	0e c0       	rjmp	.+28     	; 0x2e1c <__timerPrescalerIndex+0x4a>
    2e00:	f9 01       	movw	r30, r18
    2e02:	85 91       	lpm	r24, Z+
    2e04:	94 91       	lpm	r25, Z+
    2e06:	22 50       	subi	r18, 0x02	; 2
    2e08:	30 40       	sbci	r19, 0x00	; 0
    2e0a:	86 17       	cp	r24, r22
    2e0c:	97 07       	cpc	r25, r23
    2e0e:	29 f4       	brne	.+10     	; 0x2e1a <__timerPrescalerIndex+0x48>
    2e10:	24 2f       	mov	r18, r20
    2e12:	33 27       	eor	r19, r19
    2e14:	27 fd       	sbrc	r18, 7
    2e16:	30 95       	com	r19
    2e18:	05 c0       	rjmp	.+10     	; 0x2e24 <__timerPrescalerIndex+0x52>
    2e1a:	41 50       	subi	r20, 0x01	; 1
    2e1c:	47 ff       	sbrs	r20, 7
    2e1e:	f0 cf       	rjmp	.-32     	; 0x2e00 <__timerPrescalerIndex+0x2e>
    2e20:	2f ef       	ldi	r18, 0xFF	; 255
    2e22:	3f ef       	ldi	r19, 0xFF	; 255
    2e24:	c9 01       	movw	r24, r18
    2e26:	08 95       	ret

00002e28 <timerGetClosestPrescale>:
    2e28:	0f 93       	push	r16
    2e2a:	1f 93       	push	r17
    2e2c:	cf 93       	push	r28
    2e2e:	df 93       	push	r29
    2e30:	8c 01       	movw	r16, r24
    2e32:	24 e0       	ldi	r18, 0x04	; 4
    2e34:	61 30       	cpi	r22, 0x01	; 1
    2e36:	72 07       	cpc	r23, r18
    2e38:	10 f0       	brcs	.+4      	; 0x2e3e <timerGetClosestPrescale+0x16>
    2e3a:	60 e0       	ldi	r22, 0x00	; 0
    2e3c:	74 e0       	ldi	r23, 0x04	; 4
    2e3e:	eb 01       	movw	r28, r22
    2e40:	61 15       	cp	r22, r1
    2e42:	71 05       	cpc	r23, r1
    2e44:	21 f4       	brne	.+8      	; 0x2e4e <timerGetClosestPrescale+0x26>
    2e46:	c1 e0       	ldi	r28, 0x01	; 1
    2e48:	d0 e0       	ldi	r29, 0x00	; 0
    2e4a:	01 c0       	rjmp	.+2      	; 0x2e4e <timerGetClosestPrescale+0x26>
    2e4c:	21 96       	adiw	r28, 0x01	; 1
    2e4e:	c8 01       	movw	r24, r16
    2e50:	be 01       	movw	r22, r28
    2e52:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <__timerPrescalerIndex>
    2e56:	8f 5f       	subi	r24, 0xFF	; 255
    2e58:	9f 4f       	sbci	r25, 0xFF	; 255
    2e5a:	c1 f3       	breq	.-16     	; 0x2e4c <timerGetClosestPrescale+0x24>
    2e5c:	ce 01       	movw	r24, r28
    2e5e:	df 91       	pop	r29
    2e60:	cf 91       	pop	r28
    2e62:	1f 91       	pop	r17
    2e64:	0f 91       	pop	r16
    2e66:	08 95       	ret

00002e68 <timerGetCounter>:
    2e68:	9c 01       	movw	r18, r24
    2e6a:	02 96       	adiw	r24, 0x02	; 2
    2e6c:	fc 01       	movw	r30, r24
    2e6e:	a5 91       	lpm	r26, Z+
    2e70:	b4 91       	lpm	r27, Z+
    2e72:	2a 5f       	subi	r18, 0xFA	; 250
    2e74:	3f 4f       	sbci	r19, 0xFF	; 255
    2e76:	f9 01       	movw	r30, r18
    2e78:	84 91       	lpm	r24, Z+
    2e7a:	88 23       	and	r24, r24
    2e7c:	19 f0       	breq	.+6      	; 0x2e84 <timerGetCounter+0x1c>
    2e7e:	2d 91       	ld	r18, X+
    2e80:	3c 91       	ld	r19, X
    2e82:	03 c0       	rjmp	.+6      	; 0x2e8a <timerGetCounter+0x22>
    2e84:	8c 91       	ld	r24, X
    2e86:	28 2f       	mov	r18, r24
    2e88:	30 e0       	ldi	r19, 0x00	; 0
    2e8a:	c9 01       	movw	r24, r18
    2e8c:	08 95       	ret

00002e8e <compareSetOutputMode>:
    2e8e:	9c 01       	movw	r18, r24
    2e90:	0b 96       	adiw	r24, 0x0b	; 11
    2e92:	fc 01       	movw	r30, r24
    2e94:	a5 91       	lpm	r26, Z+
    2e96:	b4 91       	lpm	r27, Z+
    2e98:	23 5f       	subi	r18, 0xF3	; 243
    2e9a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e9c:	f9 01       	movw	r30, r18
    2e9e:	24 91       	lpm	r18, Z+
    2ea0:	70 e0       	ldi	r23, 0x00	; 0
    2ea2:	02 2e       	mov	r0, r18
    2ea4:	02 c0       	rjmp	.+4      	; 0x2eaa <compareSetOutputMode+0x1c>
    2ea6:	66 0f       	add	r22, r22
    2ea8:	77 1f       	adc	r23, r23
    2eaa:	0a 94       	dec	r0
    2eac:	e2 f7       	brpl	.-8      	; 0x2ea6 <compareSetOutputMode+0x18>
    2eae:	81 e0       	ldi	r24, 0x01	; 1
    2eb0:	90 e0       	ldi	r25, 0x00	; 0
    2eb2:	02 c0       	rjmp	.+4      	; 0x2eb8 <compareSetOutputMode+0x2a>
    2eb4:	88 0f       	add	r24, r24
    2eb6:	99 1f       	adc	r25, r25
    2eb8:	2a 95       	dec	r18
    2eba:	e2 f7       	brpl	.-8      	; 0x2eb4 <compareSetOutputMode+0x26>
    2ebc:	28 2f       	mov	r18, r24
    2ebe:	22 0f       	add	r18, r18
    2ec0:	28 2b       	or	r18, r24
    2ec2:	9c 91       	ld	r25, X
    2ec4:	82 2f       	mov	r24, r18
    2ec6:	86 23       	and	r24, r22
    2ec8:	20 95       	com	r18
    2eca:	29 23       	and	r18, r25
    2ecc:	82 2b       	or	r24, r18
    2ece:	8c 93       	st	X, r24
    2ed0:	08 95       	ret

00002ed2 <compareGetOutputMode>:
    2ed2:	9c 01       	movw	r18, r24
    2ed4:	0b 96       	adiw	r24, 0x0b	; 11
    2ed6:	fc 01       	movw	r30, r24
    2ed8:	a5 91       	lpm	r26, Z+
    2eda:	b4 91       	lpm	r27, Z+
    2edc:	23 5f       	subi	r18, 0xF3	; 243
    2ede:	3f 4f       	sbci	r19, 0xFF	; 255
    2ee0:	f9 01       	movw	r30, r18
    2ee2:	44 91       	lpm	r20, Z+
    2ee4:	21 e0       	ldi	r18, 0x01	; 1
    2ee6:	30 e0       	ldi	r19, 0x00	; 0
    2ee8:	04 2e       	mov	r0, r20
    2eea:	02 c0       	rjmp	.+4      	; 0x2ef0 <compareGetOutputMode+0x1e>
    2eec:	22 0f       	add	r18, r18
    2eee:	33 1f       	adc	r19, r19
    2ef0:	0a 94       	dec	r0
    2ef2:	e2 f7       	brpl	.-8      	; 0x2eec <compareGetOutputMode+0x1a>
    2ef4:	82 2f       	mov	r24, r18
    2ef6:	88 0f       	add	r24, r24
    2ef8:	82 2b       	or	r24, r18
    2efa:	2c 91       	ld	r18, X
    2efc:	82 23       	and	r24, r18
    2efe:	90 e0       	ldi	r25, 0x00	; 0
    2f00:	02 c0       	rjmp	.+4      	; 0x2f06 <compareGetOutputMode+0x34>
    2f02:	95 95       	asr	r25
    2f04:	87 95       	ror	r24
    2f06:	4a 95       	dec	r20
    2f08:	e2 f7       	brpl	.-8      	; 0x2f02 <compareGetOutputMode+0x30>
    2f0a:	08 95       	ret

00002f0c <__timer_overflowService>:
    2f0c:	fc 01       	movw	r30, r24
    2f0e:	a5 91       	lpm	r26, Z+
    2f10:	b4 91       	lpm	r27, Z+
    2f12:	12 96       	adiw	r26, 0x02	; 2
    2f14:	ed 91       	ld	r30, X+
    2f16:	fc 91       	ld	r31, X
    2f18:	13 97       	sbiw	r26, 0x03	; 3
    2f1a:	30 97       	sbiw	r30, 0x00	; 0
    2f1c:	29 f0       	breq	.+10     	; 0x2f28 <__timer_overflowService+0x1c>
    2f1e:	14 96       	adiw	r26, 0x04	; 4
    2f20:	6d 91       	ld	r22, X+
    2f22:	7c 91       	ld	r23, X
    2f24:	15 97       	sbiw	r26, 0x05	; 5
    2f26:	09 95       	icall
    2f28:	08 95       	ret

00002f2a <__timer_captureService>:
    2f2a:	fc 01       	movw	r30, r24
    2f2c:	a5 91       	lpm	r26, Z+
    2f2e:	b4 91       	lpm	r27, Z+
    2f30:	16 96       	adiw	r26, 0x06	; 6
    2f32:	ed 91       	ld	r30, X+
    2f34:	fc 91       	ld	r31, X
    2f36:	17 97       	sbiw	r26, 0x07	; 7
    2f38:	30 97       	sbiw	r30, 0x00	; 0
    2f3a:	29 f0       	breq	.+10     	; 0x2f46 <__timer_captureService+0x1c>
    2f3c:	18 96       	adiw	r26, 0x08	; 8
    2f3e:	6d 91       	ld	r22, X+
    2f40:	7c 91       	ld	r23, X
    2f42:	19 97       	sbiw	r26, 0x09	; 9
    2f44:	09 95       	icall
    2f46:	08 95       	ret

00002f48 <__timer_compareService>:
    2f48:	fc 01       	movw	r30, r24
    2f4a:	a5 91       	lpm	r26, Z+
    2f4c:	b4 91       	lpm	r27, Z+
    2f4e:	ed 91       	ld	r30, X+
    2f50:	fc 91       	ld	r31, X
    2f52:	11 97       	sbiw	r26, 0x01	; 1
    2f54:	30 97       	sbiw	r30, 0x00	; 0
    2f56:	29 f0       	breq	.+10     	; 0x2f62 <__timer_compareService+0x1a>
    2f58:	12 96       	adiw	r26, 0x02	; 2
    2f5a:	6d 91       	ld	r22, X+
    2f5c:	7c 91       	ld	r23, X
    2f5e:	13 97       	sbiw	r26, 0x03	; 3
    2f60:	09 95       	icall
    2f62:	08 95       	ret

00002f64 <getError>:
    2f64:	80 91 3c 03 	lds	r24, 0x033C
    2f68:	08 95       	ret

00002f6a <setErrorLog>:
    2f6a:	90 93 40 03 	sts	0x0340, r25
    2f6e:	80 93 3f 03 	sts	0x033F, r24
    2f72:	08 95       	ret

00002f74 <__error_flash>:
    2f74:	8f 92       	push	r8
    2f76:	9f 92       	push	r9
    2f78:	af 92       	push	r10
    2f7a:	bf 92       	push	r11
    2f7c:	cf 92       	push	r12
    2f7e:	df 92       	push	r13
    2f80:	ef 92       	push	r14
    2f82:	ff 92       	push	r15
    2f84:	0f 93       	push	r16
    2f86:	1f 93       	push	r17
    2f88:	cf 93       	push	r28
    2f8a:	df 93       	push	r29
    2f8c:	98 2e       	mov	r9, r24
    2f8e:	89 2e       	mov	r8, r25
    2f90:	5a 01       	movw	r10, r20
    2f92:	6b 01       	movw	r12, r22
    2f94:	c8 2f       	mov	r28, r24
    2f96:	d9 2f       	mov	r29, r25
    2f98:	89 81       	ldd	r24, Y+1	; 0x01
    2f9a:	88 23       	and	r24, r24
    2f9c:	41 f4       	brne	.+16     	; 0x2fae <__error_flash+0x3a>
    2f9e:	88 81       	ld	r24, Y
    2fa0:	18 16       	cp	r1, r24
    2fa2:	14 f4       	brge	.+4      	; 0x2fa8 <__error_flash+0x34>
    2fa4:	88 81       	ld	r24, Y
    2fa6:	02 c0       	rjmp	.+4      	; 0x2fac <__error_flash+0x38>
    2fa8:	88 81       	ld	r24, Y
    2faa:	81 95       	neg	r24
    2fac:	89 83       	std	Y+1, r24	; 0x01
    2fae:	88 81       	ld	r24, Y
    2fb0:	87 fd       	sbrc	r24, 7
    2fb2:	08 c0       	rjmp	.+16     	; 0x2fc4 <__error_flash+0x50>
    2fb4:	e0 e2       	ldi	r30, 0x20	; 32
    2fb6:	ee 2e       	mov	r14, r30
    2fb8:	e1 ea       	ldi	r30, 0xA1	; 161
    2fba:	fe 2e       	mov	r15, r30
    2fbc:	e7 e0       	ldi	r30, 0x07	; 7
    2fbe:	0e 2f       	mov	r16, r30
    2fc0:	11 2d       	mov	r17, r1
    2fc2:	07 c0       	rjmp	.+14     	; 0x2fd2 <__error_flash+0x5e>
    2fc4:	70 e9       	ldi	r23, 0x90	; 144
    2fc6:	e7 2e       	mov	r14, r23
    2fc8:	70 ed       	ldi	r23, 0xD0	; 208
    2fca:	f7 2e       	mov	r15, r23
    2fcc:	73 e0       	ldi	r23, 0x03	; 3
    2fce:	07 2f       	mov	r16, r23
    2fd0:	11 2d       	mov	r17, r1
    2fd2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fd4:	80 ff       	sbrs	r24, 0
    2fd6:	1d c0       	rjmp	.+58     	; 0x3012 <__error_flash+0x9e>
    2fd8:	80 91 39 03 	lds	r24, 0x0339
    2fdc:	90 91 3a 03 	lds	r25, 0x033A
    2fe0:	0e 94 ff 13 	call	0x27fe	; 0x27fe <pin_is_output>
    2fe4:	88 23       	and	r24, r24
    2fe6:	29 f0       	breq	.+10     	; 0x2ff2 <__error_flash+0x7e>
    2fe8:	89 e3       	ldi	r24, 0x39	; 57
    2fea:	93 e0       	ldi	r25, 0x03	; 3
    2fec:	60 e0       	ldi	r22, 0x00	; 0
    2fee:	0e 94 89 14 	call	0x2912	; 0x2912 <LED_set>
    2ff2:	89 81       	ldd	r24, Y+1	; 0x01
    2ff4:	81 50       	subi	r24, 0x01	; 1
    2ff6:	89 83       	std	Y+1, r24	; 0x01
    2ff8:	89 81       	ldd	r24, Y+1	; 0x01
    2ffa:	88 23       	and	r24, r24
    2ffc:	39 f4       	brne	.+14     	; 0x300c <__error_flash+0x98>
    2ffe:	60 e8       	ldi	r22, 0x80	; 128
    3000:	e6 2e       	mov	r14, r22
    3002:	64 e8       	ldi	r22, 0x84	; 132
    3004:	f6 2e       	mov	r15, r22
    3006:	6e e1       	ldi	r22, 0x1E	; 30
    3008:	06 2f       	mov	r16, r22
    300a:	11 2d       	mov	r17, r1
    300c:	8a 81       	ldd	r24, Y+2	; 0x02
    300e:	8e 7f       	andi	r24, 0xFE	; 254
    3010:	0f c0       	rjmp	.+30     	; 0x3030 <__error_flash+0xbc>
    3012:	80 91 39 03 	lds	r24, 0x0339
    3016:	90 91 3a 03 	lds	r25, 0x033A
    301a:	0e 94 ff 13 	call	0x27fe	; 0x27fe <pin_is_output>
    301e:	88 23       	and	r24, r24
    3020:	29 f0       	breq	.+10     	; 0x302c <__error_flash+0xb8>
    3022:	89 e3       	ldi	r24, 0x39	; 57
    3024:	93 e0       	ldi	r25, 0x03	; 3
    3026:	6f ef       	ldi	r22, 0xFF	; 255
    3028:	0e 94 89 14 	call	0x2912	; 0x2912 <LED_set>
    302c:	8a 81       	ldd	r24, Y+2	; 0x02
    302e:	81 60       	ori	r24, 0x01	; 1
    3030:	8a 83       	std	Y+2, r24	; 0x02
    3032:	8a eb       	ldi	r24, 0xBA	; 186
    3034:	97 e1       	ldi	r25, 0x17	; 23
    3036:	69 2d       	mov	r22, r9
    3038:	78 2d       	mov	r23, r8
    303a:	a6 01       	movw	r20, r12
    303c:	95 01       	movw	r18, r10
    303e:	0e 94 35 22 	call	0x446a	; 0x446a <scheduleJob>
    3042:	df 91       	pop	r29
    3044:	cf 91       	pop	r28
    3046:	1f 91       	pop	r17
    3048:	0f 91       	pop	r16
    304a:	ff 90       	pop	r15
    304c:	ef 90       	pop	r14
    304e:	df 90       	pop	r13
    3050:	cf 90       	pop	r12
    3052:	bf 90       	pop	r11
    3054:	af 90       	pop	r10
    3056:	9f 90       	pop	r9
    3058:	8f 90       	pop	r8
    305a:	08 95       	ret

0000305c <__timerRead>:
    305c:	df 92       	push	r13
    305e:	ef 92       	push	r14
    3060:	ff 92       	push	r15
    3062:	0f 93       	push	r16
    3064:	1f 93       	push	r17
    3066:	cf 93       	push	r28
    3068:	df 93       	push	r29
    306a:	9c 01       	movw	r18, r24
    306c:	eb 01       	movw	r28, r22
    306e:	fc 01       	movw	r30, r24
    3070:	a5 91       	lpm	r26, Z+
    3072:	b4 91       	lpm	r27, Z+
    3074:	1a 96       	adiw	r26, 0x0a	; 10
    3076:	8c 91       	ld	r24, X
    3078:	39 83       	std	Y+1, r19	; 0x01
    307a:	28 83       	st	Y, r18
    307c:	21 15       	cp	r18, r1
    307e:	31 05       	cpc	r19, r1
    3080:	39 f4       	brne	.+14     	; 0x3090 <__timerRead+0x34>
    3082:	1a 82       	std	Y+2, r1	; 0x02
    3084:	1b 82       	std	Y+3, r1	; 0x03
    3086:	1c 82       	std	Y+4, r1	; 0x04
    3088:	1d 82       	std	Y+5, r1	; 0x05
    308a:	1f 82       	std	Y+7, r1	; 0x07
    308c:	1e 82       	std	Y+6, r1	; 0x06
    308e:	b1 c0       	rjmp	.+354    	; 0x31f2 <__timerRead+0x196>
    3090:	84 30       	cpi	r24, 0x04	; 4
    3092:	39 f0       	breq	.+14     	; 0x30a2 <__timerRead+0x46>
    3094:	89 30       	cpi	r24, 0x09	; 9
    3096:	29 f0       	breq	.+10     	; 0x30a2 <__timerRead+0x46>
    3098:	8b 30       	cpi	r24, 0x0B	; 11
    309a:	19 f0       	breq	.+6      	; 0x30a2 <__timerRead+0x46>
    309c:	8f 30       	cpi	r24, 0x0F	; 15
    309e:	09 f0       	breq	.+2      	; 0x30a2 <__timerRead+0x46>
    30a0:	48 c0       	rjmp	.+144    	; 0x3132 <__timerRead+0xd6>
    30a2:	f9 01       	movw	r30, r18
    30a4:	77 96       	adiw	r30, 0x17	; 23
    30a6:	65 91       	lpm	r22, Z+
    30a8:	74 91       	lpm	r23, Z+
    30aa:	df b6       	in	r13, 0x3f	; 63
    30ac:	f8 94       	cli
    30ae:	a2 e0       	ldi	r26, 0x02	; 2
    30b0:	ea 2e       	mov	r14, r26
    30b2:	f1 2c       	mov	r15, r1
    30b4:	e2 0e       	add	r14, r18
    30b6:	f3 1e       	adc	r15, r19
    30b8:	f7 01       	movw	r30, r14
    30ba:	a5 91       	lpm	r26, Z+
    30bc:	b4 91       	lpm	r27, Z+
    30be:	89 01       	movw	r16, r18
    30c0:	0a 5f       	subi	r16, 0xFA	; 250
    30c2:	1f 4f       	sbci	r17, 0xFF	; 255
    30c4:	f8 01       	movw	r30, r16
    30c6:	84 91       	lpm	r24, Z+
    30c8:	88 23       	and	r24, r24
    30ca:	19 f0       	breq	.+6      	; 0x30d2 <__timerRead+0x76>
    30cc:	4d 91       	ld	r20, X+
    30ce:	5c 91       	ld	r21, X
    30d0:	03 c0       	rjmp	.+6      	; 0x30d8 <__timerRead+0x7c>
    30d2:	8c 91       	ld	r24, X
    30d4:	48 2f       	mov	r20, r24
    30d6:	50 e0       	ldi	r21, 0x00	; 0
    30d8:	80 91 41 03 	lds	r24, 0x0341
    30dc:	90 91 42 03 	lds	r25, 0x0342
    30e0:	28 17       	cp	r18, r24
    30e2:	39 07       	cpc	r19, r25
    30e4:	29 f0       	breq	.+10     	; 0x30f0 <__timerRead+0x94>
    30e6:	80 e0       	ldi	r24, 0x00	; 0
    30e8:	90 e0       	ldi	r25, 0x00	; 0
    30ea:	a0 e0       	ldi	r26, 0x00	; 0
    30ec:	b0 e0       	ldi	r27, 0x00	; 0
    30ee:	08 c0       	rjmp	.+16     	; 0x3100 <__timerRead+0xa4>
    30f0:	80 91 fc 02 	lds	r24, 0x02FC
    30f4:	90 91 fd 02 	lds	r25, 0x02FD
    30f8:	a0 91 fe 02 	lds	r26, 0x02FE
    30fc:	b0 91 ff 02 	lds	r27, 0x02FF
    3100:	8a 83       	std	Y+2, r24	; 0x02
    3102:	9b 83       	std	Y+3, r25	; 0x03
    3104:	ac 83       	std	Y+4, r26	; 0x04
    3106:	bd 83       	std	Y+5, r27	; 0x05
    3108:	f7 01       	movw	r30, r14
    310a:	a5 91       	lpm	r26, Z+
    310c:	b4 91       	lpm	r27, Z+
    310e:	f8 01       	movw	r30, r16
    3110:	84 91       	lpm	r24, Z+
    3112:	88 23       	and	r24, r24
    3114:	19 f0       	breq	.+6      	; 0x311c <__timerRead+0xc0>
    3116:	8d 91       	ld	r24, X+
    3118:	9c 91       	ld	r25, X
    311a:	02 c0       	rjmp	.+4      	; 0x3120 <__timerRead+0xc4>
    311c:	8c 91       	ld	r24, X
    311e:	90 e0       	ldi	r25, 0x00	; 0
    3120:	9f 83       	std	Y+7, r25	; 0x07
    3122:	8e 83       	std	Y+6, r24	; 0x06
    3124:	84 17       	cp	r24, r20
    3126:	95 07       	cpc	r25, r21
    3128:	08 f4       	brcc	.+2      	; 0x312c <__timerRead+0xd0>
    312a:	49 c0       	rjmp	.+146    	; 0x31be <__timerRead+0x162>
    312c:	cb 01       	movw	r24, r22
    312e:	08 96       	adiw	r24, 0x08	; 8
    3130:	42 c0       	rjmp	.+132    	; 0x31b6 <__timerRead+0x15a>
    3132:	df b6       	in	r13, 0x3f	; 63
    3134:	f8 94       	cli
    3136:	f2 e0       	ldi	r31, 0x02	; 2
    3138:	ef 2e       	mov	r14, r31
    313a:	f1 2c       	mov	r15, r1
    313c:	e2 0e       	add	r14, r18
    313e:	f3 1e       	adc	r15, r19
    3140:	f7 01       	movw	r30, r14
    3142:	a5 91       	lpm	r26, Z+
    3144:	b4 91       	lpm	r27, Z+
    3146:	89 01       	movw	r16, r18
    3148:	0a 5f       	subi	r16, 0xFA	; 250
    314a:	1f 4f       	sbci	r17, 0xFF	; 255
    314c:	f8 01       	movw	r30, r16
    314e:	84 91       	lpm	r24, Z+
    3150:	88 23       	and	r24, r24
    3152:	19 f0       	breq	.+6      	; 0x315a <__timerRead+0xfe>
    3154:	4d 91       	ld	r20, X+
    3156:	5c 91       	ld	r21, X
    3158:	03 c0       	rjmp	.+6      	; 0x3160 <__timerRead+0x104>
    315a:	8c 91       	ld	r24, X
    315c:	48 2f       	mov	r20, r24
    315e:	50 e0       	ldi	r21, 0x00	; 0
    3160:	80 91 41 03 	lds	r24, 0x0341
    3164:	90 91 42 03 	lds	r25, 0x0342
    3168:	28 17       	cp	r18, r24
    316a:	39 07       	cpc	r19, r25
    316c:	29 f0       	breq	.+10     	; 0x3178 <__timerRead+0x11c>
    316e:	80 e0       	ldi	r24, 0x00	; 0
    3170:	90 e0       	ldi	r25, 0x00	; 0
    3172:	a0 e0       	ldi	r26, 0x00	; 0
    3174:	b0 e0       	ldi	r27, 0x00	; 0
    3176:	08 c0       	rjmp	.+16     	; 0x3188 <__timerRead+0x12c>
    3178:	80 91 fc 02 	lds	r24, 0x02FC
    317c:	90 91 fd 02 	lds	r25, 0x02FD
    3180:	a0 91 fe 02 	lds	r26, 0x02FE
    3184:	b0 91 ff 02 	lds	r27, 0x02FF
    3188:	8a 83       	std	Y+2, r24	; 0x02
    318a:	9b 83       	std	Y+3, r25	; 0x03
    318c:	ac 83       	std	Y+4, r26	; 0x04
    318e:	bd 83       	std	Y+5, r27	; 0x05
    3190:	f7 01       	movw	r30, r14
    3192:	a5 91       	lpm	r26, Z+
    3194:	b4 91       	lpm	r27, Z+
    3196:	f8 01       	movw	r30, r16
    3198:	84 91       	lpm	r24, Z+
    319a:	88 23       	and	r24, r24
    319c:	19 f0       	breq	.+6      	; 0x31a4 <__timerRead+0x148>
    319e:	8d 91       	ld	r24, X+
    31a0:	9c 91       	ld	r25, X
    31a2:	02 c0       	rjmp	.+4      	; 0x31a8 <__timerRead+0x14c>
    31a4:	8c 91       	ld	r24, X
    31a6:	90 e0       	ldi	r25, 0x00	; 0
    31a8:	9f 83       	std	Y+7, r25	; 0x07
    31aa:	8e 83       	std	Y+6, r24	; 0x06
    31ac:	84 17       	cp	r24, r20
    31ae:	95 07       	cpc	r25, r21
    31b0:	30 f0       	brcs	.+12     	; 0x31be <__timerRead+0x162>
    31b2:	c9 01       	movw	r24, r18
    31b4:	4c 96       	adiw	r24, 0x1c	; 28
    31b6:	0e 94 b3 12 	call	0x2566	; 0x2566 <__portMaskGet>
    31ba:	88 23       	and	r24, r24
    31bc:	c9 f0       	breq	.+50     	; 0x31f0 <__timerRead+0x194>
    31be:	8a 81       	ldd	r24, Y+2	; 0x02
    31c0:	9b 81       	ldd	r25, Y+3	; 0x03
    31c2:	ac 81       	ldd	r26, Y+4	; 0x04
    31c4:	bd 81       	ldd	r27, Y+5	; 0x05
    31c6:	01 96       	adiw	r24, 0x01	; 1
    31c8:	a1 1d       	adc	r26, r1
    31ca:	b1 1d       	adc	r27, r1
    31cc:	8a 83       	std	Y+2, r24	; 0x02
    31ce:	9b 83       	std	Y+3, r25	; 0x03
    31d0:	ac 83       	std	Y+4, r26	; 0x04
    31d2:	bd 83       	std	Y+5, r27	; 0x05
    31d4:	f7 01       	movw	r30, r14
    31d6:	a5 91       	lpm	r26, Z+
    31d8:	b4 91       	lpm	r27, Z+
    31da:	f8 01       	movw	r30, r16
    31dc:	84 91       	lpm	r24, Z+
    31de:	88 23       	and	r24, r24
    31e0:	19 f0       	breq	.+6      	; 0x31e8 <__timerRead+0x18c>
    31e2:	8d 91       	ld	r24, X+
    31e4:	9c 91       	ld	r25, X
    31e6:	02 c0       	rjmp	.+4      	; 0x31ec <__timerRead+0x190>
    31e8:	8c 91       	ld	r24, X
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	9f 83       	std	Y+7, r25	; 0x07
    31ee:	8e 83       	std	Y+6, r24	; 0x06
    31f0:	df be       	out	0x3f, r13	; 63
    31f2:	df 91       	pop	r29
    31f4:	cf 91       	pop	r28
    31f6:	1f 91       	pop	r17
    31f8:	0f 91       	pop	r16
    31fa:	ff 90       	pop	r15
    31fc:	ef 90       	pop	r14
    31fe:	df 90       	pop	r13
    3200:	08 95       	ret

00003202 <clockGetSnapshot>:
    3202:	bc 01       	movw	r22, r24
    3204:	80 91 41 03 	lds	r24, 0x0341
    3208:	90 91 42 03 	lds	r25, 0x0342
    320c:	0e 94 2e 18 	call	0x305c	; 0x305c <__timerRead>
    3210:	08 95       	ret

00003212 <timerGetTicks>:
    3212:	0f 93       	push	r16
    3214:	1f 93       	push	r17
    3216:	df 93       	push	r29
    3218:	cf 93       	push	r28
    321a:	cd b7       	in	r28, 0x3d	; 61
    321c:	de b7       	in	r29, 0x3e	; 62
    321e:	28 97       	sbiw	r28, 0x08	; 8
    3220:	0f b6       	in	r0, 0x3f	; 63
    3222:	f8 94       	cli
    3224:	de bf       	out	0x3e, r29	; 62
    3226:	0f be       	out	0x3f, r0	; 63
    3228:	cd bf       	out	0x3d, r28	; 61
    322a:	8e 01       	movw	r16, r28
    322c:	0f 5f       	subi	r16, 0xFF	; 255
    322e:	1f 4f       	sbci	r17, 0xFF	; 255
    3230:	b8 01       	movw	r22, r16
    3232:	0e 94 2e 18 	call	0x305c	; 0x305c <__timerRead>
    3236:	c8 01       	movw	r24, r16
    3238:	0e 94 7d 1a 	call	0x34fa	; 0x34fa <timerSnapshotToTicks>
    323c:	28 96       	adiw	r28, 0x08	; 8
    323e:	0f b6       	in	r0, 0x3f	; 63
    3240:	f8 94       	cli
    3242:	de bf       	out	0x3e, r29	; 62
    3244:	0f be       	out	0x3f, r0	; 63
    3246:	cd bf       	out	0x3d, r28	; 61
    3248:	cf 91       	pop	r28
    324a:	df 91       	pop	r29
    324c:	1f 91       	pop	r17
    324e:	0f 91       	pop	r16
    3250:	08 95       	ret

00003252 <clockGetus>:
    3252:	80 91 41 03 	lds	r24, 0x0341
    3256:	90 91 42 03 	lds	r25, 0x0342
    325a:	0e 94 09 19 	call	0x3212	; 0x3212 <timerGetTicks>
    325e:	08 95       	ret

00003260 <setError>:
    3260:	df 92       	push	r13
    3262:	ef 92       	push	r14
    3264:	ff 92       	push	r15
    3266:	0f 93       	push	r16
    3268:	1f 93       	push	r17
    326a:	d8 2e       	mov	r13, r24
    326c:	80 91 3c 03 	lds	r24, 0x033C
    3270:	88 23       	and	r24, r24
    3272:	09 f0       	breq	.+2      	; 0x3276 <setError+0x16>
    3274:	5b c0       	rjmp	.+182    	; 0x332c <setError+0xcc>
    3276:	d0 92 3c 03 	sts	0x033C, r13
    327a:	80 91 39 03 	lds	r24, 0x0339
    327e:	90 91 3a 03 	lds	r25, 0x033A
    3282:	89 2b       	or	r24, r25
    3284:	99 f0       	breq	.+38     	; 0x32ac <setError+0x4c>
    3286:	80 91 41 03 	lds	r24, 0x0341
    328a:	90 91 42 03 	lds	r25, 0x0342
    328e:	89 2b       	or	r24, r25
    3290:	69 f0       	breq	.+26     	; 0x32ac <setError+0x4c>
    3292:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    3296:	9b 01       	movw	r18, r22
    3298:	ac 01       	movw	r20, r24
    329a:	8a eb       	ldi	r24, 0xBA	; 186
    329c:	97 e1       	ldi	r25, 0x17	; 23
    329e:	6c e3       	ldi	r22, 0x3C	; 60
    32a0:	73 e0       	ldi	r23, 0x03	; 3
    32a2:	ee 24       	eor	r14, r14
    32a4:	ff 24       	eor	r15, r15
    32a6:	87 01       	movw	r16, r14
    32a8:	0e 94 35 22 	call	0x446a	; 0x446a <scheduleJob>
    32ac:	80 91 3f 03 	lds	r24, 0x033F
    32b0:	90 91 40 03 	lds	r25, 0x0340
    32b4:	00 97       	sbiw	r24, 0x00	; 0
    32b6:	d1 f1       	breq	.+116    	; 0x332c <setError+0xcc>
    32b8:	0e 94 ac 14 	call	0x2958	; 0x2958 <rprintfInit>
    32bc:	8c 01       	movw	r16, r24
    32be:	2d 2d       	mov	r18, r13
    32c0:	33 27       	eor	r19, r19
    32c2:	27 fd       	sbrc	r18, 7
    32c4:	30 95       	com	r19
    32c6:	d7 fe       	sbrs	r13, 7
    32c8:	16 c0       	rjmp	.+44     	; 0x32f6 <setError+0x96>
    32ca:	00 d0       	rcall	.+0      	; 0x32cc <setError+0x6c>
    32cc:	00 d0       	rcall	.+0      	; 0x32ce <setError+0x6e>
    32ce:	0f 92       	push	r0
    32d0:	ed b7       	in	r30, 0x3d	; 61
    32d2:	fe b7       	in	r31, 0x3e	; 62
    32d4:	31 96       	adiw	r30, 0x01	; 1
    32d6:	81 e0       	ldi	r24, 0x01	; 1
    32d8:	ad b7       	in	r26, 0x3d	; 61
    32da:	be b7       	in	r27, 0x3e	; 62
    32dc:	11 96       	adiw	r26, 0x01	; 1
    32de:	8c 93       	st	X, r24
    32e0:	8d e3       	ldi	r24, 0x3D	; 61
    32e2:	94 e0       	ldi	r25, 0x04	; 4
    32e4:	92 83       	std	Z+2, r25	; 0x02
    32e6:	81 83       	std	Z+1, r24	; 0x01
    32e8:	88 27       	eor	r24, r24
    32ea:	99 27       	eor	r25, r25
    32ec:	82 1b       	sub	r24, r18
    32ee:	93 0b       	sbc	r25, r19
    32f0:	94 83       	std	Z+4, r25	; 0x04
    32f2:	83 83       	std	Z+3, r24	; 0x03
    32f4:	11 c0       	rjmp	.+34     	; 0x3318 <setError+0xb8>
    32f6:	00 d0       	rcall	.+0      	; 0x32f8 <setError+0x98>
    32f8:	00 d0       	rcall	.+0      	; 0x32fa <setError+0x9a>
    32fa:	0f 92       	push	r0
    32fc:	ed b7       	in	r30, 0x3d	; 61
    32fe:	fe b7       	in	r31, 0x3e	; 62
    3300:	31 96       	adiw	r30, 0x01	; 1
    3302:	81 e0       	ldi	r24, 0x01	; 1
    3304:	ad b7       	in	r26, 0x3d	; 61
    3306:	be b7       	in	r27, 0x3e	; 62
    3308:	11 96       	adiw	r26, 0x01	; 1
    330a:	8c 93       	st	X, r24
    330c:	8e e2       	ldi	r24, 0x2E	; 46
    330e:	94 e0       	ldi	r25, 0x04	; 4
    3310:	92 83       	std	Z+2, r25	; 0x02
    3312:	81 83       	std	Z+1, r24	; 0x01
    3314:	34 83       	std	Z+4, r19	; 0x04
    3316:	23 83       	std	Z+3, r18	; 0x03
    3318:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <rprintf1RamRom>
    331c:	0f 90       	pop	r0
    331e:	0f 90       	pop	r0
    3320:	0f 90       	pop	r0
    3322:	0f 90       	pop	r0
    3324:	0f 90       	pop	r0
    3326:	c8 01       	movw	r24, r16
    3328:	0e 94 ac 14 	call	0x2958	; 0x2958 <rprintfInit>
    332c:	1f 91       	pop	r17
    332e:	0f 91       	pop	r16
    3330:	ff 90       	pop	r15
    3332:	ef 90       	pop	r14
    3334:	df 90       	pop	r13
    3336:	08 95       	ret

00003338 <compareDetach>:
    3338:	cf 93       	push	r28
    333a:	df 93       	push	r29
    333c:	ec 01       	movw	r28, r24
    333e:	22 96       	adiw	r28, 0x02	; 2
    3340:	fe 01       	movw	r30, r28
    3342:	94 91       	lpm	r25, Z+
    3344:	22 97       	sbiw	r28, 0x02	; 2
    3346:	8c e2       	ldi	r24, 0x2C	; 44
    3348:	98 9f       	mul	r25, r24
    334a:	f0 01       	movw	r30, r0
    334c:	11 24       	eor	r1, r1
    334e:	e8 58       	subi	r30, 0x88	; 136
    3350:	fd 4f       	sbci	r31, 0xFD	; 253
    3352:	e4 91       	lpm	r30, Z+
    3354:	ee 23       	and	r30, r30
    3356:	71 f0       	breq	.+28     	; 0x3374 <compareDetach+0x3c>
    3358:	ce 01       	movw	r24, r28
    335a:	03 96       	adiw	r24, 0x03	; 3
    335c:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    3360:	ce 01       	movw	r24, r28
    3362:	60 e0       	ldi	r22, 0x00	; 0
    3364:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <compareSetOutputMode>
    3368:	fe 01       	movw	r30, r28
    336a:	a5 91       	lpm	r26, Z+
    336c:	b4 91       	lpm	r27, Z+
    336e:	1d 92       	st	X+, r1
    3370:	1c 92       	st	X, r1
    3372:	03 c0       	rjmp	.+6      	; 0x337a <compareDetach+0x42>
    3374:	8d ef       	ldi	r24, 0xFD	; 253
    3376:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    337a:	df 91       	pop	r29
    337c:	cf 91       	pop	r28
    337e:	08 95       	ret

00003380 <compareSetThreshold>:
    3380:	cf 93       	push	r28
    3382:	df 93       	push	r29
    3384:	9c 01       	movw	r18, r24
    3386:	2e 5f       	subi	r18, 0xFE	; 254
    3388:	3f 4f       	sbci	r19, 0xFF	; 255
    338a:	f9 01       	movw	r30, r18
    338c:	84 91       	lpm	r24, Z+
    338e:	22 50       	subi	r18, 0x02	; 2
    3390:	30 40       	sbci	r19, 0x00	; 0
    3392:	9c e2       	ldi	r25, 0x2C	; 44
    3394:	89 9f       	mul	r24, r25
    3396:	a0 01       	movw	r20, r0
    3398:	11 24       	eor	r1, r1
    339a:	40 59       	subi	r20, 0x90	; 144
    339c:	5d 4f       	sbci	r21, 0xFD	; 253
    339e:	48 5f       	subi	r20, 0xF8	; 248
    33a0:	5f 4f       	sbci	r21, 0xFF	; 255
    33a2:	fa 01       	movw	r30, r20
    33a4:	84 91       	lpm	r24, Z+
    33a6:	48 50       	subi	r20, 0x08	; 8
    33a8:	50 40       	sbci	r21, 0x00	; 0
    33aa:	88 23       	and	r24, r24
    33ac:	c1 f0       	breq	.+48     	; 0x33de <compareSetThreshold+0x5e>
    33ae:	c9 01       	movw	r24, r18
    33b0:	06 96       	adiw	r24, 0x06	; 6
    33b2:	fc 01       	movw	r30, r24
    33b4:	c5 91       	lpm	r28, Z+
    33b6:	d4 91       	lpm	r29, Z+
    33b8:	fa 01       	movw	r30, r20
    33ba:	36 96       	adiw	r30, 0x06	; 6
    33bc:	e4 91       	lpm	r30, Z+
    33be:	ee 23       	and	r30, r30
    33c0:	19 f0       	breq	.+6      	; 0x33c8 <compareSetThreshold+0x48>
    33c2:	79 83       	std	Y+1, r23	; 0x01
    33c4:	68 83       	st	Y, r22
    33c6:	0e c0       	rjmp	.+28     	; 0x33e4 <compareSetThreshold+0x64>
    33c8:	6f 3f       	cpi	r22, 0xFF	; 255
    33ca:	71 05       	cpc	r23, r1
    33cc:	31 f0       	breq	.+12     	; 0x33da <compareSetThreshold+0x5a>
    33ce:	28 f0       	brcs	.+10     	; 0x33da <compareSetThreshold+0x5a>
    33d0:	8e ef       	ldi	r24, 0xFE	; 254
    33d2:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    33d6:	6f ef       	ldi	r22, 0xFF	; 255
    33d8:	70 e0       	ldi	r23, 0x00	; 0
    33da:	68 83       	st	Y, r22
    33dc:	03 c0       	rjmp	.+6      	; 0x33e4 <compareSetThreshold+0x64>
    33de:	8d ef       	ldi	r24, 0xFD	; 253
    33e0:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    33e4:	df 91       	pop	r29
    33e6:	cf 91       	pop	r28
    33e8:	08 95       	ret

000033ea <compareGetThreshold>:
    33ea:	9c 01       	movw	r18, r24
    33ec:	2e 5f       	subi	r18, 0xFE	; 254
    33ee:	3f 4f       	sbci	r19, 0xFF	; 255
    33f0:	f9 01       	movw	r30, r18
    33f2:	84 91       	lpm	r24, Z+
    33f4:	22 50       	subi	r18, 0x02	; 2
    33f6:	30 40       	sbci	r19, 0x00	; 0
    33f8:	9c e2       	ldi	r25, 0x2C	; 44
    33fa:	89 9f       	mul	r24, r25
    33fc:	a0 01       	movw	r20, r0
    33fe:	11 24       	eor	r1, r1
    3400:	40 59       	subi	r20, 0x90	; 144
    3402:	5d 4f       	sbci	r21, 0xFD	; 253
    3404:	48 5f       	subi	r20, 0xF8	; 248
    3406:	5f 4f       	sbci	r21, 0xFF	; 255
    3408:	fa 01       	movw	r30, r20
    340a:	84 91       	lpm	r24, Z+
    340c:	48 50       	subi	r20, 0x08	; 8
    340e:	50 40       	sbci	r21, 0x00	; 0
    3410:	88 23       	and	r24, r24
    3412:	89 f0       	breq	.+34     	; 0x3436 <compareGetThreshold+0x4c>
    3414:	c9 01       	movw	r24, r18
    3416:	06 96       	adiw	r24, 0x06	; 6
    3418:	fc 01       	movw	r30, r24
    341a:	a5 91       	lpm	r26, Z+
    341c:	b4 91       	lpm	r27, Z+
    341e:	fa 01       	movw	r30, r20
    3420:	36 96       	adiw	r30, 0x06	; 6
    3422:	e4 91       	lpm	r30, Z+
    3424:	ee 23       	and	r30, r30
    3426:	19 f0       	breq	.+6      	; 0x342e <compareGetThreshold+0x44>
    3428:	2d 91       	ld	r18, X+
    342a:	3c 91       	ld	r19, X
    342c:	09 c0       	rjmp	.+18     	; 0x3440 <compareGetThreshold+0x56>
    342e:	8c 91       	ld	r24, X
    3430:	28 2f       	mov	r18, r24
    3432:	30 e0       	ldi	r19, 0x00	; 0
    3434:	05 c0       	rjmp	.+10     	; 0x3440 <compareGetThreshold+0x56>
    3436:	8d ef       	ldi	r24, 0xFD	; 253
    3438:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    343c:	2f ef       	ldi	r18, 0xFF	; 255
    343e:	30 e0       	ldi	r19, 0x00	; 0
    3440:	c9 01       	movw	r24, r18
    3442:	08 95       	ret

00003444 <timerGetTOP>:
    3444:	cf 93       	push	r28
    3446:	df 93       	push	r29
    3448:	ec 01       	movw	r28, r24
    344a:	04 96       	adiw	r24, 0x04	; 4
    344c:	fc 01       	movw	r30, r24
    344e:	a5 91       	lpm	r26, Z+
    3450:	b4 91       	lpm	r27, Z+
    3452:	8c 91       	ld	r24, X
    3454:	90 e0       	ldi	r25, 0x00	; 0
    3456:	87 70       	andi	r24, 0x07	; 7
    3458:	90 70       	andi	r25, 0x00	; 0
    345a:	89 2b       	or	r24, r25
    345c:	09 f4       	brne	.+2      	; 0x3460 <timerGetTOP+0x1c>
    345e:	41 c0       	rjmp	.+130    	; 0x34e2 <timerGetTOP+0x9e>
    3460:	fe 01       	movw	r30, r28
    3462:	a5 91       	lpm	r26, Z+
    3464:	b4 91       	lpm	r27, Z+
    3466:	1a 96       	adiw	r26, 0x0a	; 10
    3468:	8c 91       	ld	r24, X
    346a:	87 30       	cpi	r24, 0x07	; 7
    346c:	39 f1       	breq	.+78     	; 0x34bc <timerGetTOP+0x78>
    346e:	88 30       	cpi	r24, 0x08	; 8
    3470:	70 f4       	brcc	.+28     	; 0x348e <timerGetTOP+0x4a>
    3472:	83 30       	cpi	r24, 0x03	; 3
    3474:	19 f1       	breq	.+70     	; 0x34bc <timerGetTOP+0x78>
    3476:	84 30       	cpi	r24, 0x04	; 4
    3478:	28 f4       	brcc	.+10     	; 0x3484 <timerGetTOP+0x40>
    347a:	81 30       	cpi	r24, 0x01	; 1
    347c:	c9 f0       	breq	.+50     	; 0x34b0 <timerGetTOP+0x6c>
    347e:	82 30       	cpi	r24, 0x02	; 2
    3480:	d0 f4       	brcc	.+52     	; 0x34b6 <timerGetTOP+0x72>
    3482:	13 c0       	rjmp	.+38     	; 0x34aa <timerGetTOP+0x66>
    3484:	85 30       	cpi	r24, 0x05	; 5
    3486:	a1 f0       	breq	.+40     	; 0x34b0 <timerGetTOP+0x6c>
    3488:	86 30       	cpi	r24, 0x06	; 6
    348a:	a8 f4       	brcc	.+42     	; 0x34b6 <timerGetTOP+0x72>
    348c:	1a c0       	rjmp	.+52     	; 0x34c2 <timerGetTOP+0x7e>
    348e:	8b 30       	cpi	r24, 0x0B	; 11
    3490:	c1 f0       	breq	.+48     	; 0x34c2 <timerGetTOP+0x7e>
    3492:	8c 30       	cpi	r24, 0x0C	; 12
    3494:	18 f4       	brcc	.+6      	; 0x349c <timerGetTOP+0x58>
    3496:	89 30       	cpi	r24, 0x09	; 9
    3498:	e1 f4       	brne	.+56     	; 0x34d2 <timerGetTOP+0x8e>
    349a:	13 c0       	rjmp	.+38     	; 0x34c2 <timerGetTOP+0x7e>
    349c:	8e 30       	cpi	r24, 0x0E	; 14
    349e:	c9 f0       	breq	.+50     	; 0x34d2 <timerGetTOP+0x8e>
    34a0:	8f 30       	cpi	r24, 0x0F	; 15
    34a2:	79 f0       	breq	.+30     	; 0x34c2 <timerGetTOP+0x7e>
    34a4:	8c 30       	cpi	r24, 0x0C	; 12
    34a6:	e9 f4       	brne	.+58     	; 0x34e2 <timerGetTOP+0x9e>
    34a8:	14 c0       	rjmp	.+40     	; 0x34d2 <timerGetTOP+0x8e>
    34aa:	2f ef       	ldi	r18, 0xFF	; 255
    34ac:	3f ef       	ldi	r19, 0xFF	; 255
    34ae:	1b c0       	rjmp	.+54     	; 0x34e6 <timerGetTOP+0xa2>
    34b0:	2f ef       	ldi	r18, 0xFF	; 255
    34b2:	30 e0       	ldi	r19, 0x00	; 0
    34b4:	18 c0       	rjmp	.+48     	; 0x34e6 <timerGetTOP+0xa2>
    34b6:	2f ef       	ldi	r18, 0xFF	; 255
    34b8:	31 e0       	ldi	r19, 0x01	; 1
    34ba:	15 c0       	rjmp	.+42     	; 0x34e6 <timerGetTOP+0xa2>
    34bc:	2f ef       	ldi	r18, 0xFF	; 255
    34be:	33 e0       	ldi	r19, 0x03	; 3
    34c0:	12 c0       	rjmp	.+36     	; 0x34e6 <timerGetTOP+0xa2>
    34c2:	fe 01       	movw	r30, r28
    34c4:	77 96       	adiw	r30, 0x17	; 23
    34c6:	85 91       	lpm	r24, Z+
    34c8:	94 91       	lpm	r25, Z+
    34ca:	0e 94 f5 19 	call	0x33ea	; 0x33ea <compareGetThreshold>
    34ce:	9c 01       	movw	r18, r24
    34d0:	0a c0       	rjmp	.+20     	; 0x34e6 <timerGetTOP+0xa2>
    34d2:	ce 01       	movw	r24, r28
    34d4:	4f 96       	adiw	r24, 0x1f	; 31
    34d6:	fc 01       	movw	r30, r24
    34d8:	a5 91       	lpm	r26, Z+
    34da:	b4 91       	lpm	r27, Z+
    34dc:	2d 91       	ld	r18, X+
    34de:	3c 91       	ld	r19, X
    34e0:	02 c0       	rjmp	.+4      	; 0x34e6 <timerGetTOP+0xa2>
    34e2:	20 e0       	ldi	r18, 0x00	; 0
    34e4:	30 e0       	ldi	r19, 0x00	; 0
    34e6:	26 96       	adiw	r28, 0x06	; 6
    34e8:	fe 01       	movw	r30, r28
    34ea:	84 91       	lpm	r24, Z+
    34ec:	88 23       	and	r24, r24
    34ee:	09 f4       	brne	.+2      	; 0x34f2 <timerGetTOP+0xae>
    34f0:	30 70       	andi	r19, 0x00	; 0
    34f2:	c9 01       	movw	r24, r18
    34f4:	df 91       	pop	r29
    34f6:	cf 91       	pop	r28
    34f8:	08 95       	ret

000034fa <timerSnapshotToTicks>:
    34fa:	6f 92       	push	r6
    34fc:	7f 92       	push	r7
    34fe:	8f 92       	push	r8
    3500:	9f 92       	push	r9
    3502:	af 92       	push	r10
    3504:	bf 92       	push	r11
    3506:	cf 92       	push	r12
    3508:	df 92       	push	r13
    350a:	ef 92       	push	r14
    350c:	ff 92       	push	r15
    350e:	0f 93       	push	r16
    3510:	1f 93       	push	r17
    3512:	cf 93       	push	r28
    3514:	df 93       	push	r29
    3516:	8c 01       	movw	r16, r24
    3518:	fc 01       	movw	r30, r24
    351a:	80 81       	ld	r24, Z
    351c:	91 81       	ldd	r25, Z+1	; 0x01
    351e:	0e 94 22 1a 	call	0x3444	; 0x3444 <timerGetTOP>
    3522:	3c 01       	movw	r6, r24
    3524:	88 24       	eor	r8, r8
    3526:	99 24       	eor	r9, r9
    3528:	f8 01       	movw	r30, r16
    352a:	20 81       	ld	r18, Z
    352c:	31 81       	ldd	r19, Z+1	; 0x01
    352e:	80 91 41 03 	lds	r24, 0x0341
    3532:	90 91 42 03 	lds	r25, 0x0342
    3536:	a2 80       	ldd	r10, Z+2	; 0x02
    3538:	b3 80       	ldd	r11, Z+3	; 0x03
    353a:	c4 80       	ldd	r12, Z+4	; 0x04
    353c:	d5 80       	ldd	r13, Z+5	; 0x05
    353e:	c6 81       	ldd	r28, Z+6	; 0x06
    3540:	d7 81       	ldd	r29, Z+7	; 0x07
    3542:	28 17       	cp	r18, r24
    3544:	39 07       	cpc	r19, r25
    3546:	01 f5       	brne	.+64     	; 0x3588 <timerSnapshotToTicks+0x8e>
    3548:	e0 90 f8 02 	lds	r14, 0x02F8
    354c:	f0 90 f9 02 	lds	r15, 0x02F9
    3550:	00 91 fa 02 	lds	r16, 0x02FA
    3554:	10 91 fb 02 	lds	r17, 0x02FB
    3558:	c8 01       	movw	r24, r16
    355a:	b7 01       	movw	r22, r14
    355c:	a6 01       	movw	r20, r12
    355e:	95 01       	movw	r18, r10
    3560:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    3564:	5b 01       	movw	r10, r22
    3566:	6c 01       	movw	r12, r24
    3568:	be 01       	movw	r22, r28
    356a:	80 e0       	ldi	r24, 0x00	; 0
    356c:	90 e0       	ldi	r25, 0x00	; 0
    356e:	a8 01       	movw	r20, r16
    3570:	97 01       	movw	r18, r14
    3572:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    3576:	a4 01       	movw	r20, r8
    3578:	93 01       	movw	r18, r6
    357a:	0e 94 13 26 	call	0x4c26	; 0x4c26 <__udivmodsi4>
    357e:	2a 0d       	add	r18, r10
    3580:	3b 1d       	adc	r19, r11
    3582:	4c 1d       	adc	r20, r12
    3584:	5d 1d       	adc	r21, r13
    3586:	14 c0       	rjmp	.+40     	; 0x35b0 <timerSnapshotToTicks+0xb6>
    3588:	08 94       	sec
    358a:	61 1c       	adc	r6, r1
    358c:	71 1c       	adc	r7, r1
    358e:	81 1c       	adc	r8, r1
    3590:	91 1c       	adc	r9, r1
    3592:	c4 01       	movw	r24, r8
    3594:	b3 01       	movw	r22, r6
    3596:	a6 01       	movw	r20, r12
    3598:	95 01       	movw	r18, r10
    359a:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    359e:	9b 01       	movw	r18, r22
    35a0:	ac 01       	movw	r20, r24
    35a2:	ce 01       	movw	r24, r28
    35a4:	a0 e0       	ldi	r26, 0x00	; 0
    35a6:	b0 e0       	ldi	r27, 0x00	; 0
    35a8:	28 0f       	add	r18, r24
    35aa:	39 1f       	adc	r19, r25
    35ac:	4a 1f       	adc	r20, r26
    35ae:	5b 1f       	adc	r21, r27
    35b0:	b9 01       	movw	r22, r18
    35b2:	ca 01       	movw	r24, r20
    35b4:	df 91       	pop	r29
    35b6:	cf 91       	pop	r28
    35b8:	1f 91       	pop	r17
    35ba:	0f 91       	pop	r16
    35bc:	ff 90       	pop	r15
    35be:	ef 90       	pop	r14
    35c0:	df 90       	pop	r13
    35c2:	cf 90       	pop	r12
    35c4:	bf 90       	pop	r11
    35c6:	af 90       	pop	r10
    35c8:	9f 90       	pop	r9
    35ca:	8f 90       	pop	r8
    35cc:	7f 90       	pop	r7
    35ce:	6f 90       	pop	r6
    35d0:	08 95       	ret

000035d2 <timerGetBestPrescaler>:
    35d2:	4f 92       	push	r4
    35d4:	5f 92       	push	r5
    35d6:	6f 92       	push	r6
    35d8:	7f 92       	push	r7
    35da:	8f 92       	push	r8
    35dc:	9f 92       	push	r9
    35de:	af 92       	push	r10
    35e0:	bf 92       	push	r11
    35e2:	cf 92       	push	r12
    35e4:	df 92       	push	r13
    35e6:	ef 92       	push	r14
    35e8:	ff 92       	push	r15
    35ea:	0f 93       	push	r16
    35ec:	1f 93       	push	r17
    35ee:	cf 93       	push	r28
    35f0:	df 93       	push	r29
    35f2:	8c 01       	movw	r16, r24
    35f4:	0a 5f       	subi	r16, 0xFA	; 250
    35f6:	1f 4f       	sbci	r17, 0xFF	; 255
    35f8:	f8 01       	movw	r30, r16
    35fa:	84 91       	lpm	r24, Z+
    35fc:	06 50       	subi	r16, 0x06	; 6
    35fe:	10 40       	sbci	r17, 0x00	; 0
    3600:	88 23       	and	r24, r24
    3602:	31 f4       	brne	.+12     	; 0x3610 <timerGetBestPrescaler+0x3e>
    3604:	2f ef       	ldi	r18, 0xFF	; 255
    3606:	a2 2e       	mov	r10, r18
    3608:	b1 2c       	mov	r11, r1
    360a:	c1 2c       	mov	r12, r1
    360c:	d1 2c       	mov	r13, r1
    360e:	06 c0       	rjmp	.+12     	; 0x361c <timerGetBestPrescaler+0x4a>
    3610:	9f ef       	ldi	r25, 0xFF	; 255
    3612:	a9 2e       	mov	r10, r25
    3614:	9f ef       	ldi	r25, 0xFF	; 255
    3616:	b9 2e       	mov	r11, r25
    3618:	c1 2c       	mov	r12, r1
    361a:	d1 2c       	mov	r13, r1
    361c:	c1 e0       	ldi	r28, 0x01	; 1
    361e:	d0 e0       	ldi	r29, 0x00	; 0
    3620:	81 e0       	ldi	r24, 0x01	; 1
    3622:	48 2e       	mov	r4, r24
    3624:	51 2c       	mov	r5, r1
    3626:	ee 24       	eor	r14, r14
    3628:	ff 24       	eor	r15, r15
    362a:	3b 01       	movw	r6, r22
    362c:	88 24       	eor	r8, r8
    362e:	99 24       	eor	r9, r9
    3630:	c8 01       	movw	r24, r16
    3632:	be 01       	movw	r22, r28
    3634:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <__timerPrescalerIndex>
    3638:	8f 5f       	subi	r24, 0xFF	; 255
    363a:	9f 4f       	sbci	r25, 0xFF	; 255
    363c:	59 f0       	breq	.+22     	; 0x3654 <timerGetBestPrescaler+0x82>
    363e:	c4 01       	movw	r24, r8
    3640:	b3 01       	movw	r22, r6
    3642:	ae 01       	movw	r20, r28
    3644:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <ticks_per_ms>
    3648:	a6 16       	cp	r10, r22
    364a:	b7 06       	cpc	r11, r23
    364c:	c8 06       	cpc	r12, r24
    364e:	d9 06       	cpc	r13, r25
    3650:	70 f4       	brcc	.+28     	; 0x366e <timerGetBestPrescaler+0x9c>
    3652:	2e 01       	movw	r4, r28
    3654:	cc 0f       	add	r28, r28
    3656:	dd 1f       	adc	r29, r29
    3658:	08 94       	sec
    365a:	e1 1c       	adc	r14, r1
    365c:	f1 1c       	adc	r15, r1
    365e:	2b e0       	ldi	r18, 0x0B	; 11
    3660:	e2 16       	cp	r14, r18
    3662:	f1 04       	cpc	r15, r1
    3664:	29 f7       	brne	.-54     	; 0x3630 <timerGetBestPrescaler+0x5e>
    3666:	88 ef       	ldi	r24, 0xF8	; 248
    3668:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    366c:	e2 01       	movw	r28, r4
    366e:	ce 01       	movw	r24, r28
    3670:	df 91       	pop	r29
    3672:	cf 91       	pop	r28
    3674:	1f 91       	pop	r17
    3676:	0f 91       	pop	r16
    3678:	ff 90       	pop	r15
    367a:	ef 90       	pop	r14
    367c:	df 90       	pop	r13
    367e:	cf 90       	pop	r12
    3680:	bf 90       	pop	r11
    3682:	af 90       	pop	r10
    3684:	9f 90       	pop	r9
    3686:	8f 90       	pop	r8
    3688:	7f 90       	pop	r7
    368a:	6f 90       	pop	r6
    368c:	5f 90       	pop	r5
    368e:	4f 90       	pop	r4
    3690:	08 95       	ret

00003692 <timerSetPrescaler>:
    3692:	df 92       	push	r13
    3694:	ef 92       	push	r14
    3696:	ff 92       	push	r15
    3698:	0f 93       	push	r16
    369a:	1f 93       	push	r17
    369c:	cf 93       	push	r28
    369e:	df 93       	push	r29
    36a0:	ec 01       	movw	r28, r24
    36a2:	7b 01       	movw	r14, r22
    36a4:	fc 01       	movw	r30, r24
    36a6:	34 96       	adiw	r30, 0x04	; 4
    36a8:	05 91       	lpm	r16, Z+
    36aa:	14 91       	lpm	r17, Z+
    36ac:	df b6       	in	r13, 0x3f	; 63
    36ae:	f8 94       	cli
    36b0:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <__timerPrescalerIndex>
    36b4:	ac 01       	movw	r20, r24
    36b6:	8f ef       	ldi	r24, 0xFF	; 255
    36b8:	4f 3f       	cpi	r20, 0xFF	; 255
    36ba:	58 07       	cpc	r21, r24
    36bc:	69 f0       	breq	.+26     	; 0x36d8 <timerSetPrescaler+0x46>
    36be:	fe 01       	movw	r30, r28
    36c0:	a5 91       	lpm	r26, Z+
    36c2:	b4 91       	lpm	r27, Z+
    36c4:	ed 92       	st	X+, r14
    36c6:	fc 92       	st	X, r15
    36c8:	f8 01       	movw	r30, r16
    36ca:	80 81       	ld	r24, Z
    36cc:	88 7f       	andi	r24, 0xF8	; 248
    36ce:	80 83       	st	Z, r24
    36d0:	80 81       	ld	r24, Z
    36d2:	84 2b       	or	r24, r20
    36d4:	80 83       	st	Z, r24
    36d6:	03 c0       	rjmp	.+6      	; 0x36de <timerSetPrescaler+0x4c>
    36d8:	8a ef       	ldi	r24, 0xFA	; 250
    36da:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    36de:	df be       	out	0x3f, r13	; 63
    36e0:	df 91       	pop	r29
    36e2:	cf 91       	pop	r28
    36e4:	1f 91       	pop	r17
    36e6:	0f 91       	pop	r16
    36e8:	ff 90       	pop	r15
    36ea:	ef 90       	pop	r14
    36ec:	df 90       	pop	r13
    36ee:	08 95       	ret

000036f0 <timerInit>:
    36f0:	7f 92       	push	r7
    36f2:	8f 92       	push	r8
    36f4:	9f 92       	push	r9
    36f6:	af 92       	push	r10
    36f8:	bf 92       	push	r11
    36fa:	cf 92       	push	r12
    36fc:	df 92       	push	r13
    36fe:	ef 92       	push	r14
    3700:	ff 92       	push	r15
    3702:	0f 93       	push	r16
    3704:	1f 93       	push	r17
    3706:	cf 93       	push	r28
    3708:	df 93       	push	r29
    370a:	ec 01       	movw	r28, r24
    370c:	fc 01       	movw	r30, r24
    370e:	32 96       	adiw	r30, 0x02	; 2
    3710:	05 91       	lpm	r16, Z+
    3712:	14 91       	lpm	r17, Z+
    3714:	fc 01       	movw	r30, r24
    3716:	85 90       	lpm	r8, Z+
    3718:	94 90       	lpm	r9, Z+
    371a:	7f b6       	in	r7, 0x3f	; 63
    371c:	f8 94       	cli
    371e:	04 96       	adiw	r24, 0x04	; 4
    3720:	fc 01       	movw	r30, r24
    3722:	a5 91       	lpm	r26, Z+
    3724:	b4 91       	lpm	r27, Z+
    3726:	8c 91       	ld	r24, X
    3728:	88 7f       	andi	r24, 0xF8	; 248
    372a:	8c 93       	st	X, r24
    372c:	39 e1       	ldi	r19, 0x19	; 25
    372e:	a3 2e       	mov	r10, r19
    3730:	b1 2c       	mov	r11, r1
    3732:	ac 0e       	add	r10, r28
    3734:	bd 1e       	adc	r11, r29
    3736:	c5 01       	movw	r24, r10
    3738:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    373c:	f8 01       	movw	r30, r16
    373e:	10 82       	st	Z, r1
    3740:	f4 01       	movw	r30, r8
    3742:	60 81       	ld	r22, Z
    3744:	71 81       	ldd	r23, Z+1	; 0x01
    3746:	ce 01       	movw	r24, r28
    3748:	0e 94 49 1b 	call	0x3692	; 0x3692 <timerSetPrescaler>
    374c:	28 96       	adiw	r28, 0x08	; 8
    374e:	fe 01       	movw	r30, r28
    3750:	e4 90       	lpm	r14, Z+
    3752:	2f 96       	adiw	r28, 0x0f	; 15
    3754:	ff 24       	eor	r15, r15
    3756:	00 e0       	ldi	r16, 0x00	; 0
    3758:	10 e0       	ldi	r17, 0x00	; 0
    375a:	fe 01       	movw	r30, r28
    375c:	c5 90       	lpm	r12, Z+
    375e:	d4 90       	lpm	r13, Z+
    3760:	67 97       	sbiw	r28, 0x17	; 23
    3762:	09 c0       	rjmp	.+18     	; 0x3776 <timerInit+0x86>
    3764:	c6 01       	movw	r24, r12
    3766:	80 0f       	add	r24, r16
    3768:	91 1f       	adc	r25, r17
    376a:	08 96       	adiw	r24, 0x08	; 8
    376c:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3770:	f3 94       	inc	r15
    3772:	00 5f       	subi	r16, 0xF0	; 240
    3774:	1f 4f       	sbci	r17, 0xFF	; 255
    3776:	fe 14       	cp	r15, r14
    3778:	a8 f3       	brcs	.-22     	; 0x3764 <timerInit+0x74>
    377a:	ce 01       	movw	r24, r28
    377c:	4c 96       	adiw	r24, 0x1c	; 28
    377e:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3782:	f4 01       	movw	r30, r8
    3784:	82 81       	ldd	r24, Z+2	; 0x02
    3786:	93 81       	ldd	r25, Z+3	; 0x03
    3788:	89 2b       	or	r24, r25
    378a:	19 f0       	breq	.+6      	; 0x3792 <timerInit+0xa2>
    378c:	c5 01       	movw	r24, r10
    378e:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3792:	7f be       	out	0x3f, r7	; 63
    3794:	df 91       	pop	r29
    3796:	cf 91       	pop	r28
    3798:	1f 91       	pop	r17
    379a:	0f 91       	pop	r16
    379c:	ff 90       	pop	r15
    379e:	ef 90       	pop	r14
    37a0:	df 90       	pop	r13
    37a2:	cf 90       	pop	r12
    37a4:	bf 90       	pop	r11
    37a6:	af 90       	pop	r10
    37a8:	9f 90       	pop	r9
    37aa:	8f 90       	pop	r8
    37ac:	7f 90       	pop	r7
    37ae:	08 95       	ret

000037b0 <timerSetMode>:
    37b0:	df 92       	push	r13
    37b2:	ef 92       	push	r14
    37b4:	ff 92       	push	r15
    37b6:	0f 93       	push	r16
    37b8:	1f 93       	push	r17
    37ba:	cf 93       	push	r28
    37bc:	df 93       	push	r29
    37be:	8c 01       	movw	r16, r24
    37c0:	66 23       	and	r22, r22
    37c2:	41 f0       	breq	.+16     	; 0x37d4 <timerSetMode+0x24>
    37c4:	fc 01       	movw	r30, r24
    37c6:	a5 91       	lpm	r26, Z+
    37c8:	b4 91       	lpm	r27, Z+
    37ca:	1a 96       	adiw	r26, 0x0a	; 10
    37cc:	8c 91       	ld	r24, X
    37ce:	86 17       	cp	r24, r22
    37d0:	09 f4       	brne	.+2      	; 0x37d4 <timerSetMode+0x24>
    37d2:	7a c0       	rjmp	.+244    	; 0x38c8 <timerSetMode+0x118>
    37d4:	f8 01       	movw	r30, r16
    37d6:	39 96       	adiw	r30, 0x09	; 9
    37d8:	25 91       	lpm	r18, Z+
    37da:	34 91       	lpm	r19, Z+
    37dc:	81 e0       	ldi	r24, 0x01	; 1
    37de:	90 e0       	ldi	r25, 0x00	; 0
    37e0:	06 2e       	mov	r0, r22
    37e2:	02 c0       	rjmp	.+4      	; 0x37e8 <timerSetMode+0x38>
    37e4:	88 0f       	add	r24, r24
    37e6:	99 1f       	adc	r25, r25
    37e8:	0a 94       	dec	r0
    37ea:	e2 f7       	brpl	.-8      	; 0x37e4 <timerSetMode+0x34>
    37ec:	82 23       	and	r24, r18
    37ee:	93 23       	and	r25, r19
    37f0:	89 2b       	or	r24, r25
    37f2:	09 f4       	brne	.+2      	; 0x37f6 <timerSetMode+0x46>
    37f4:	66 c0       	rjmp	.+204    	; 0x38c2 <timerSetMode+0x112>
    37f6:	f8 01       	movw	r30, r16
    37f8:	a5 91       	lpm	r26, Z+
    37fa:	b4 91       	lpm	r27, Z+
    37fc:	1a 96       	adiw	r26, 0x0a	; 10
    37fe:	6c 93       	st	X, r22
    3800:	ff ed       	ldi	r31, 0xDF	; 223
    3802:	2f 3f       	cpi	r18, 0xFF	; 255
    3804:	3f 07       	cpc	r19, r31
    3806:	11 f4       	brne	.+4      	; 0x380c <timerSetMode+0x5c>
    3808:	d6 2e       	mov	r13, r22
    380a:	13 c0       	rjmp	.+38     	; 0x3832 <timerSetMode+0x82>
    380c:	88 e8       	ldi	r24, 0x88	; 136
    380e:	23 33       	cpi	r18, 0x33	; 51
    3810:	38 07       	cpc	r19, r24
    3812:	31 f4       	brne	.+12     	; 0x3820 <timerSetMode+0x70>
    3814:	e6 2f       	mov	r30, r22
    3816:	f0 e0       	ldi	r31, 0x00	; 0
    3818:	e8 5e       	subi	r30, 0xE8	; 232
    381a:	fb 4f       	sbci	r31, 0xFB	; 251
    381c:	d4 90       	lpm	r13, Z+
    381e:	09 c0       	rjmp	.+18     	; 0x3832 <timerSetMode+0x82>
    3820:	23 33       	cpi	r18, 0x33	; 51
    3822:	31 05       	cpc	r19, r1
    3824:	09 f0       	breq	.+2      	; 0x3828 <timerSetMode+0x78>
    3826:	4d c0       	rjmp	.+154    	; 0x38c2 <timerSetMode+0x112>
    3828:	e6 2f       	mov	r30, r22
    382a:	f0 e0       	ldi	r31, 0x00	; 0
    382c:	e8 5d       	subi	r30, 0xD8	; 216
    382e:	fb 4f       	sbci	r31, 0xFB	; 251
    3830:	d4 90       	lpm	r13, Z+
    3832:	ef ef       	ldi	r30, 0xFF	; 255
    3834:	de 16       	cp	r13, r30
    3836:	09 f4       	brne	.+2      	; 0x383a <timerSetMode+0x8a>
    3838:	44 c0       	rjmp	.+136    	; 0x38c2 <timerSetMode+0x112>
    383a:	c8 01       	movw	r24, r16
    383c:	04 96       	adiw	r24, 0x04	; 4
    383e:	fc 01       	movw	r30, r24
    3840:	a5 91       	lpm	r26, Z+
    3842:	b4 91       	lpm	r27, Z+
    3844:	8c 91       	ld	r24, X
    3846:	88 7f       	andi	r24, 0xF8	; 248
    3848:	8c 93       	st	X, r24
    384a:	e8 01       	movw	r28, r16
    384c:	2b 96       	adiw	r28, 0x0b	; 11
    384e:	ee 24       	eor	r14, r14
    3850:	ff 24       	eor	r15, r15
    3852:	e8 81       	ld	r30, Y
    3854:	f9 81       	ldd	r31, Y+1	; 0x01
    3856:	85 91       	lpm	r24, Z+
    3858:	94 91       	lpm	r25, Z+
    385a:	89 2b       	or	r24, r25
    385c:	99 f0       	breq	.+38     	; 0x3884 <timerSetMode+0xd4>
    385e:	d0 fe       	sbrs	r13, 0
    3860:	04 c0       	rjmp	.+8      	; 0x386a <timerSetMode+0xba>
    3862:	ce 01       	movw	r24, r28
    3864:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3868:	03 c0       	rjmp	.+6      	; 0x3870 <timerSetMode+0xc0>
    386a:	ce 01       	movw	r24, r28
    386c:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    3870:	08 94       	sec
    3872:	e1 1c       	adc	r14, r1
    3874:	f1 1c       	adc	r15, r1
    3876:	f4 e0       	ldi	r31, 0x04	; 4
    3878:	ef 16       	cp	r14, r31
    387a:	f1 04       	cpc	r15, r1
    387c:	19 f0       	breq	.+6      	; 0x3884 <timerSetMode+0xd4>
    387e:	d6 94       	lsr	r13
    3880:	23 96       	adiw	r28, 0x03	; 3
    3882:	e7 cf       	rjmp	.-50     	; 0x3852 <timerSetMode+0xa2>
    3884:	08 5f       	subi	r16, 0xF8	; 248
    3886:	1f 4f       	sbci	r17, 0xFF	; 255
    3888:	f8 01       	movw	r30, r16
    388a:	f4 90       	lpm	r15, Z+
    388c:	fa 94       	dec	r15
    388e:	01 5f       	subi	r16, 0xF1	; 241
    3890:	1f 4f       	sbci	r17, 0xFF	; 255
    3892:	f8 01       	movw	r30, r16
    3894:	c5 91       	lpm	r28, Z+
    3896:	d4 91       	lpm	r29, Z+
    3898:	07 51       	subi	r16, 0x17	; 23
    389a:	10 40       	sbci	r17, 0x00	; 0
    389c:	0c c0       	rjmp	.+24     	; 0x38b6 <timerSetMode+0x106>
    389e:	8f 2d       	mov	r24, r15
    38a0:	90 e0       	ldi	r25, 0x00	; 0
    38a2:	44 e0       	ldi	r20, 0x04	; 4
    38a4:	88 0f       	add	r24, r24
    38a6:	99 1f       	adc	r25, r25
    38a8:	4a 95       	dec	r20
    38aa:	e1 f7       	brne	.-8      	; 0x38a4 <timerSetMode+0xf4>
    38ac:	8c 0f       	add	r24, r28
    38ae:	9d 1f       	adc	r25, r29
    38b0:	0e 94 9c 19 	call	0x3338	; 0x3338 <compareDetach>
    38b4:	fa 94       	dec	r15
    38b6:	f7 fe       	sbrs	r15, 7
    38b8:	f2 cf       	rjmp	.-28     	; 0x389e <timerSetMode+0xee>
    38ba:	c8 01       	movw	r24, r16
    38bc:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <timerInit>
    38c0:	03 c0       	rjmp	.+6      	; 0x38c8 <timerSetMode+0x118>
    38c2:	86 ef       	ldi	r24, 0xF6	; 246
    38c4:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    38c8:	df 91       	pop	r29
    38ca:	cf 91       	pop	r28
    38cc:	1f 91       	pop	r17
    38ce:	0f 91       	pop	r16
    38d0:	ff 90       	pop	r15
    38d2:	ef 90       	pop	r14
    38d4:	df 90       	pop	r13
    38d6:	08 95       	ret

000038d8 <initTimers>:
    38d8:	df 92       	push	r13
    38da:	ef 92       	push	r14
    38dc:	ff 92       	push	r15
    38de:	0f 93       	push	r16
    38e0:	1f 93       	push	r17
    38e2:	f8 94       	cli
    38e4:	ff 24       	eor	r15, r15
    38e6:	e0 90 0a 02 	lds	r14, 0x020A
    38ea:	5c e2       	ldi	r21, 0x2C	; 44
    38ec:	d5 2e       	mov	r13, r21
    38ee:	1c c0       	rjmp	.+56     	; 0x3928 <initTimers+0x50>
    38f0:	fd 9c       	mul	r15, r13
    38f2:	80 01       	movw	r16, r0
    38f4:	11 24       	eor	r1, r1
    38f6:	00 59       	subi	r16, 0x90	; 144
    38f8:	1d 4f       	sbci	r17, 0xFD	; 253
    38fa:	c8 01       	movw	r24, r16
    38fc:	60 e0       	ldi	r22, 0x00	; 0
    38fe:	70 e0       	ldi	r23, 0x00	; 0
    3900:	40 e0       	ldi	r20, 0x00	; 0
    3902:	50 e0       	ldi	r21, 0x00	; 0
    3904:	0e 94 44 1f 	call	0x3e88	; 0x3e88 <timerOverflowAttach>
    3908:	c8 01       	movw	r24, r16
    390a:	0e 94 f2 1e 	call	0x3de4	; 0x3de4 <timerCaptureDetach>
    390e:	c8 01       	movw	r24, r16
    3910:	60 e0       	ldi	r22, 0x00	; 0
    3912:	0e 94 d8 1b 	call	0x37b0	; 0x37b0 <timerSetMode>
    3916:	c8 01       	movw	r24, r16
    3918:	04 96       	adiw	r24, 0x04	; 4
    391a:	fc 01       	movw	r30, r24
    391c:	a5 91       	lpm	r26, Z+
    391e:	b4 91       	lpm	r27, Z+
    3920:	8c 91       	ld	r24, X
    3922:	88 7f       	andi	r24, 0xF8	; 248
    3924:	8c 93       	st	X, r24
    3926:	f3 94       	inc	r15
    3928:	fe 14       	cp	r15, r14
    392a:	10 f3       	brcs	.-60     	; 0x38f0 <initTimers+0x18>
    392c:	78 94       	sei
    392e:	1f 91       	pop	r17
    3930:	0f 91       	pop	r16
    3932:	ff 90       	pop	r15
    3934:	ef 90       	pop	r14
    3936:	df 90       	pop	r13
    3938:	08 95       	ret

0000393a <compareAttach>:
    393a:	8f 92       	push	r8
    393c:	9f 92       	push	r9
    393e:	af 92       	push	r10
    3940:	bf 92       	push	r11
    3942:	cf 92       	push	r12
    3944:	df 92       	push	r13
    3946:	ef 92       	push	r14
    3948:	ff 92       	push	r15
    394a:	0f 93       	push	r16
    394c:	1f 93       	push	r17
    394e:	cf 93       	push	r28
    3950:	df 93       	push	r29
    3952:	8c 01       	movw	r16, r24
    3954:	6b 01       	movw	r12, r22
    3956:	5a 01       	movw	r10, r20
    3958:	49 01       	movw	r8, r18
    395a:	0e 5f       	subi	r16, 0xFE	; 254
    395c:	1f 4f       	sbci	r17, 0xFF	; 255
    395e:	f8 01       	movw	r30, r16
    3960:	84 91       	lpm	r24, Z+
    3962:	02 50       	subi	r16, 0x02	; 2
    3964:	10 40       	sbci	r17, 0x00	; 0
    3966:	9c e2       	ldi	r25, 0x2C	; 44
    3968:	89 9f       	mul	r24, r25
    396a:	e0 01       	movw	r28, r0
    396c:	11 24       	eor	r1, r1
    396e:	c0 59       	subi	r28, 0x90	; 144
    3970:	dd 4f       	sbci	r29, 0xFD	; 253
    3972:	28 96       	adiw	r28, 0x08	; 8
    3974:	fe 01       	movw	r30, r28
    3976:	84 91       	lpm	r24, Z+
    3978:	28 97       	sbiw	r28, 0x08	; 8
    397a:	88 23       	and	r24, r24
    397c:	a1 f1       	breq	.+104    	; 0x39e6 <compareAttach+0xac>
    397e:	f8 01       	movw	r30, r16
    3980:	e5 90       	lpm	r14, Z+
    3982:	f4 90       	lpm	r15, Z+
    3984:	61 15       	cp	r22, r1
    3986:	71 05       	cpc	r23, r1
    3988:	41 f0       	breq	.+16     	; 0x399a <compareAttach+0x60>
    398a:	f7 01       	movw	r30, r14
    398c:	80 81       	ld	r24, Z
    398e:	91 81       	ldd	r25, Z+1	; 0x01
    3990:	89 2b       	or	r24, r25
    3992:	19 f0       	breq	.+6      	; 0x399a <compareAttach+0x60>
    3994:	8b ef       	ldi	r24, 0xFB	; 251
    3996:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    399a:	ce 01       	movw	r24, r28
    399c:	fe 01       	movw	r30, r28
    399e:	a5 91       	lpm	r26, Z+
    39a0:	b4 91       	lpm	r27, Z+
    39a2:	6d 91       	ld	r22, X+
    39a4:	7c 91       	ld	r23, X
    39a6:	0e 94 49 1b 	call	0x3692	; 0x3692 <timerSetPrescaler>
    39aa:	e8 01       	movw	r28, r16
    39ac:	23 96       	adiw	r28, 0x03	; 3
    39ae:	ce 01       	movw	r24, r28
    39b0:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    39b4:	c8 01       	movw	r24, r16
    39b6:	b5 01       	movw	r22, r10
    39b8:	0e 94 c0 19 	call	0x3380	; 0x3380 <compareSetThreshold>
    39bc:	f7 01       	movw	r30, r14
    39be:	d1 82       	std	Z+1, r13	; 0x01
    39c0:	c0 82       	st	Z, r12
    39c2:	93 82       	std	Z+3, r9	; 0x03
    39c4:	82 82       	std	Z+2, r8	; 0x02
    39c6:	c8 01       	movw	r24, r16
    39c8:	08 96       	adiw	r24, 0x08	; 8
    39ca:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    39ce:	c1 14       	cp	r12, r1
    39d0:	d1 04       	cpc	r13, r1
    39d2:	61 f0       	breq	.+24     	; 0x39ec <compareAttach+0xb2>
    39d4:	f4 ed       	ldi	r31, 0xD4	; 212
    39d6:	cf 16       	cp	r12, r31
    39d8:	f6 e1       	ldi	r31, 0x16	; 22
    39da:	df 06       	cpc	r13, r31
    39dc:	39 f0       	breq	.+14     	; 0x39ec <compareAttach+0xb2>
    39de:	ce 01       	movw	r24, r28
    39e0:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    39e4:	03 c0       	rjmp	.+6      	; 0x39ec <compareAttach+0xb2>
    39e6:	8d ef       	ldi	r24, 0xFD	; 253
    39e8:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    39ec:	df 91       	pop	r29
    39ee:	cf 91       	pop	r28
    39f0:	1f 91       	pop	r17
    39f2:	0f 91       	pop	r16
    39f4:	ff 90       	pop	r15
    39f6:	ef 90       	pop	r14
    39f8:	df 90       	pop	r13
    39fa:	cf 90       	pop	r12
    39fc:	bf 90       	pop	r11
    39fe:	af 90       	pop	r10
    3a00:	9f 90       	pop	r9
    3a02:	8f 90       	pop	r8
    3a04:	08 95       	ret

00003a06 <__clockInit>:
    3a06:	2f 92       	push	r2
    3a08:	3f 92       	push	r3
    3a0a:	4f 92       	push	r4
    3a0c:	5f 92       	push	r5
    3a0e:	6f 92       	push	r6
    3a10:	7f 92       	push	r7
    3a12:	8f 92       	push	r8
    3a14:	9f 92       	push	r9
    3a16:	af 92       	push	r10
    3a18:	bf 92       	push	r11
    3a1a:	cf 92       	push	r12
    3a1c:	df 92       	push	r13
    3a1e:	ef 92       	push	r14
    3a20:	ff 92       	push	r15
    3a22:	0f 93       	push	r16
    3a24:	1f 93       	push	r17
    3a26:	df 93       	push	r29
    3a28:	cf 93       	push	r28
    3a2a:	00 d0       	rcall	.+0      	; 0x3a2c <__clockInit+0x26>
    3a2c:	00 d0       	rcall	.+0      	; 0x3a2e <__clockInit+0x28>
    3a2e:	cd b7       	in	r28, 0x3d	; 61
    3a30:	de b7       	in	r29, 0x3e	; 62
    3a32:	10 92 42 03 	sts	0x0342, r1
    3a36:	10 92 41 03 	sts	0x0341, r1
    3a3a:	00 91 0a 02 	lds	r16, 0x020A
    3a3e:	01 50       	subi	r16, 0x01	; 1
    3a40:	8c e2       	ldi	r24, 0x2C	; 44
    3a42:	08 02       	muls	r16, r24
    3a44:	60 01       	movw	r12, r0
    3a46:	11 24       	eor	r1, r1
    3a48:	20 e7       	ldi	r18, 0x70	; 112
    3a4a:	32 e0       	ldi	r19, 0x02	; 2
    3a4c:	c2 0e       	add	r12, r18
    3a4e:	d3 1e       	adc	r13, r19
    3a50:	aa 24       	eor	r10, r10
    3a52:	bb 24       	eor	r11, r11
    3a54:	22 24       	eor	r2, r2
    3a56:	33 24       	eor	r3, r3
    3a58:	1a 82       	std	Y+2, r1	; 0x02
    3a5a:	19 82       	std	Y+1, r1	; 0x01
    3a5c:	52 c0       	rjmp	.+164    	; 0x3b02 <__clockInit+0xfc>
    3a5e:	c6 01       	movw	r24, r12
    3a60:	04 96       	adiw	r24, 0x04	; 4
    3a62:	fc 01       	movw	r30, r24
    3a64:	a5 91       	lpm	r26, Z+
    3a66:	b4 91       	lpm	r27, Z+
    3a68:	8c 91       	ld	r24, X
    3a6a:	90 e0       	ldi	r25, 0x00	; 0
    3a6c:	87 70       	andi	r24, 0x07	; 7
    3a6e:	90 70       	andi	r25, 0x00	; 0
    3a70:	89 2b       	or	r24, r25
    3a72:	09 f0       	breq	.+2      	; 0x3a76 <__clockInit+0x70>
    3a74:	41 c0       	rjmp	.+130    	; 0x3af8 <__clockInit+0xf2>
    3a76:	db c0       	rjmp	.+438    	; 0x3c2e <__clockInit+0x228>
    3a78:	28 e0       	ldi	r18, 0x08	; 8
    3a7a:	30 e0       	ldi	r19, 0x00	; 0
    3a7c:	c2 0e       	add	r12, r18
    3a7e:	d3 1e       	adc	r13, r19
    3a80:	f6 01       	movw	r30, r12
    3a82:	84 91       	lpm	r24, Z+
    3a84:	28 ef       	ldi	r18, 0xF8	; 248
    3a86:	3f ef       	ldi	r19, 0xFF	; 255
    3a88:	c2 0e       	add	r12, r18
    3a8a:	d3 1e       	adc	r13, r19
    3a8c:	82 30       	cpi	r24, 0x02	; 2
    3a8e:	a0 f1       	brcs	.+104    	; 0x3af8 <__clockInit+0xf2>
    3a90:	3f ef       	ldi	r19, 0xFF	; 255
    3a92:	23 16       	cp	r2, r19
    3a94:	31 04       	cpc	r3, r1
    3a96:	69 f0       	breq	.+26     	; 0x3ab2 <__clockInit+0xac>
    3a98:	60 f0       	brcs	.+24     	; 0x3ab2 <__clockInit+0xac>
    3a9a:	86 e0       	ldi	r24, 0x06	; 6
    3a9c:	90 e0       	ldi	r25, 0x00	; 0
    3a9e:	c8 0e       	add	r12, r24
    3aa0:	d9 1e       	adc	r13, r25
    3aa2:	f6 01       	movw	r30, r12
    3aa4:	84 91       	lpm	r24, Z+
    3aa6:	2a ef       	ldi	r18, 0xFA	; 250
    3aa8:	3f ef       	ldi	r19, 0xFF	; 255
    3aaa:	c2 0e       	add	r12, r18
    3aac:	d3 1e       	adc	r13, r19
    3aae:	88 23       	and	r24, r24
    3ab0:	19 f1       	breq	.+70     	; 0x3af8 <__clockInit+0xf2>
    3ab2:	c6 01       	movw	r24, r12
    3ab4:	6c e0       	ldi	r22, 0x0C	; 12
    3ab6:	70 e0       	ldi	r23, 0x00	; 0
    3ab8:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <timerGetBestPrescaler>
    3abc:	f8 2e       	mov	r15, r24
    3abe:	e9 2e       	mov	r14, r25
    3ac0:	6c e0       	ldi	r22, 0x0C	; 12
    3ac2:	70 e0       	ldi	r23, 0x00	; 0
    3ac4:	80 e0       	ldi	r24, 0x00	; 0
    3ac6:	90 e0       	ldi	r25, 0x00	; 0
    3ac8:	4f 2d       	mov	r20, r15
    3aca:	5e 2d       	mov	r21, r14
    3acc:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <ticks_per_ms>
    3ad0:	9b 01       	movw	r18, r22
    3ad2:	ac 01       	movw	r20, r24
    3ad4:	a1 14       	cp	r10, r1
    3ad6:	b1 04       	cpc	r11, r1
    3ad8:	41 f0       	breq	.+16     	; 0x3aea <__clockInit+0xe4>
    3ada:	c1 01       	movw	r24, r2
    3adc:	a0 e0       	ldi	r26, 0x00	; 0
    3ade:	b0 e0       	ldi	r27, 0x00	; 0
    3ae0:	82 17       	cp	r24, r18
    3ae2:	93 07       	cpc	r25, r19
    3ae4:	a4 07       	cpc	r26, r20
    3ae6:	b5 07       	cpc	r27, r21
    3ae8:	38 f4       	brcc	.+14     	; 0x3af8 <__clockInit+0xf2>
    3aea:	19 01       	movw	r2, r18
    3aec:	56 01       	movw	r10, r12
    3aee:	8f 2d       	mov	r24, r15
    3af0:	9e 2d       	mov	r25, r14
    3af2:	9c 01       	movw	r18, r24
    3af4:	3a 83       	std	Y+2, r19	; 0x02
    3af6:	29 83       	std	Y+1, r18	; 0x01
    3af8:	01 50       	subi	r16, 0x01	; 1
    3afa:	84 ed       	ldi	r24, 0xD4	; 212
    3afc:	9f ef       	ldi	r25, 0xFF	; 255
    3afe:	c8 0e       	add	r12, r24
    3b00:	d9 1e       	adc	r13, r25
    3b02:	07 ff       	sbrs	r16, 7
    3b04:	ac cf       	rjmp	.-168    	; 0x3a5e <__clockInit+0x58>
    3b06:	a1 14       	cp	r10, r1
    3b08:	b1 04       	cpc	r11, r1
    3b0a:	09 f4       	brne	.+2      	; 0x3b0e <__clockInit+0x108>
    3b0c:	87 c0       	rjmp	.+270    	; 0x3c1c <__clockInit+0x216>
    3b0e:	e6 e0       	ldi	r30, 0x06	; 6
    3b10:	f0 e0       	ldi	r31, 0x00	; 0
    3b12:	ae 0e       	add	r10, r30
    3b14:	bf 1e       	adc	r11, r31
    3b16:	f5 01       	movw	r30, r10
    3b18:	84 91       	lpm	r24, Z+
    3b1a:	2a ef       	ldi	r18, 0xFA	; 250
    3b1c:	3f ef       	ldi	r19, 0xFF	; 255
    3b1e:	a2 0e       	add	r10, r18
    3b20:	b3 1e       	adc	r11, r19
    3b22:	88 23       	and	r24, r24
    3b24:	31 f4       	brne	.+12     	; 0x3b32 <__clockInit+0x12c>
    3b26:	ef ef       	ldi	r30, 0xFF	; 255
    3b28:	ce 2e       	mov	r12, r30
    3b2a:	d1 2c       	mov	r13, r1
    3b2c:	e1 2c       	mov	r14, r1
    3b2e:	f1 2c       	mov	r15, r1
    3b30:	06 c0       	rjmp	.+12     	; 0x3b3e <__clockInit+0x138>
    3b32:	7f ef       	ldi	r23, 0xFF	; 255
    3b34:	c7 2e       	mov	r12, r23
    3b36:	7f ef       	ldi	r23, 0xFF	; 255
    3b38:	d7 2e       	mov	r13, r23
    3b3a:	e1 2c       	mov	r14, r1
    3b3c:	f1 2c       	mov	r15, r1
    3b3e:	6c e0       	ldi	r22, 0x0C	; 12
    3b40:	86 2e       	mov	r8, r22
    3b42:	91 2c       	mov	r9, r1
    3b44:	21 01       	movw	r4, r2
    3b46:	66 24       	eor	r6, r6
    3b48:	77 24       	eor	r7, r7
    3b4a:	61 e0       	ldi	r22, 0x01	; 1
    3b4c:	70 e0       	ldi	r23, 0x00	; 0
    3b4e:	80 e0       	ldi	r24, 0x00	; 0
    3b50:	90 e0       	ldi	r25, 0x00	; 0
    3b52:	49 81       	ldd	r20, Y+1	; 0x01
    3b54:	5a 81       	ldd	r21, Y+2	; 0x02
    3b56:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <ticks_per_ms>
    3b5a:	6f 5f       	subi	r22, 0xFF	; 255
    3b5c:	7f 4f       	sbci	r23, 0xFF	; 255
    3b5e:	8f 4f       	sbci	r24, 0xFF	; 255
    3b60:	9f 4f       	sbci	r25, 0xFF	; 255
    3b62:	64 0d       	add	r22, r4
    3b64:	75 1d       	adc	r23, r5
    3b66:	86 1d       	adc	r24, r6
    3b68:	97 1d       	adc	r25, r7
    3b6a:	6c 15       	cp	r22, r12
    3b6c:	7d 05       	cpc	r23, r13
    3b6e:	8e 05       	cpc	r24, r14
    3b70:	9f 05       	cpc	r25, r15
    3b72:	28 f5       	brcc	.+74     	; 0x3bbe <__clockInit+0x1b8>
    3b74:	c4 01       	movw	r24, r8
    3b76:	01 96       	adiw	r24, 0x01	; 1
    3b78:	9c 83       	std	Y+4, r25	; 0x04
    3b7a:	8b 83       	std	Y+3, r24	; 0x03
    3b7c:	c5 01       	movw	r24, r10
    3b7e:	6b 81       	ldd	r22, Y+3	; 0x03
    3b80:	7c 81       	ldd	r23, Y+4	; 0x04
    3b82:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <timerGetBestPrescaler>
    3b86:	8c 01       	movw	r16, r24
    3b88:	eb 81       	ldd	r30, Y+3	; 0x03
    3b8a:	fc 81       	ldd	r31, Y+4	; 0x04
    3b8c:	bf 01       	movw	r22, r30
    3b8e:	80 e0       	ldi	r24, 0x00	; 0
    3b90:	90 e0       	ldi	r25, 0x00	; 0
    3b92:	a8 01       	movw	r20, r16
    3b94:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <ticks_per_ms>
    3b98:	29 81       	ldd	r18, Y+1	; 0x01
    3b9a:	3a 81       	ldd	r19, Y+2	; 0x02
    3b9c:	02 17       	cp	r16, r18
    3b9e:	13 07       	cpc	r17, r19
    3ba0:	71 f4       	brne	.+28     	; 0x3bbe <__clockInit+0x1b8>
    3ba2:	c6 16       	cp	r12, r22
    3ba4:	d7 06       	cpc	r13, r23
    3ba6:	e8 06       	cpc	r14, r24
    3ba8:	f9 06       	cpc	r15, r25
    3baa:	48 f0       	brcs	.+18     	; 0x3bbe <__clockInit+0x1b8>
    3bac:	46 16       	cp	r4, r22
    3bae:	57 06       	cpc	r5, r23
    3bb0:	68 06       	cpc	r6, r24
    3bb2:	79 06       	cpc	r7, r25
    3bb4:	20 f4       	brcc	.+8      	; 0x3bbe <__clockInit+0x1b8>
    3bb6:	1b 01       	movw	r2, r22
    3bb8:	8b 80       	ldd	r8, Y+3	; 0x03
    3bba:	9c 80       	ldd	r9, Y+4	; 0x04
    3bbc:	c3 cf       	rjmp	.-122    	; 0x3b44 <__clockInit+0x13e>
    3bbe:	b0 92 42 03 	sts	0x0342, r11
    3bc2:	a0 92 41 03 	sts	0x0341, r10
    3bc6:	b4 01       	movw	r22, r8
    3bc8:	80 e0       	ldi	r24, 0x00	; 0
    3bca:	90 e0       	ldi	r25, 0x00	; 0
    3bcc:	28 ee       	ldi	r18, 0xE8	; 232
    3bce:	33 e0       	ldi	r19, 0x03	; 3
    3bd0:	40 e0       	ldi	r20, 0x00	; 0
    3bd2:	50 e0       	ldi	r21, 0x00	; 0
    3bd4:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    3bd8:	60 93 f8 02 	sts	0x02F8, r22
    3bdc:	70 93 f9 02 	sts	0x02F9, r23
    3be0:	80 93 fa 02 	sts	0x02FA, r24
    3be4:	90 93 fb 02 	sts	0x02FB, r25
    3be8:	c5 01       	movw	r24, r10
    3bea:	69 81       	ldd	r22, Y+1	; 0x01
    3bec:	7a 81       	ldd	r23, Y+2	; 0x02
    3bee:	0e 94 49 1b 	call	0x3692	; 0x3692 <timerSetPrescaler>
    3bf2:	80 91 41 03 	lds	r24, 0x0341
    3bf6:	90 91 42 03 	lds	r25, 0x0342
    3bfa:	64 e0       	ldi	r22, 0x04	; 4
    3bfc:	0e 94 d8 1b 	call	0x37b0	; 0x37b0 <timerSetMode>
    3c00:	e0 91 41 03 	lds	r30, 0x0341
    3c04:	f0 91 42 03 	lds	r31, 0x0342
    3c08:	77 96       	adiw	r30, 0x17	; 23
    3c0a:	85 91       	lpm	r24, Z+
    3c0c:	94 91       	lpm	r25, Z+
    3c0e:	65 ed       	ldi	r22, 0xD5	; 213
    3c10:	76 e1       	ldi	r23, 0x16	; 22
    3c12:	a1 01       	movw	r20, r2
    3c14:	20 e0       	ldi	r18, 0x00	; 0
    3c16:	30 e0       	ldi	r19, 0x00	; 0
    3c18:	0e 94 9d 1c 	call	0x393a	; 0x393a <compareAttach>
    3c1c:	80 91 3c 03 	lds	r24, 0x033C
    3c20:	88 23       	and	r24, r24
    3c22:	61 f0       	breq	.+24     	; 0x3c3c <__clockInit+0x236>
    3c24:	10 92 3c 03 	sts	0x033C, r1
    3c28:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    3c2c:	07 c0       	rjmp	.+14     	; 0x3c3c <__clockInit+0x236>
    3c2e:	f6 01       	movw	r30, r12
    3c30:	39 96       	adiw	r30, 0x09	; 9
    3c32:	85 91       	lpm	r24, Z+
    3c34:	94 91       	lpm	r25, Z+
    3c36:	84 fd       	sbrc	r24, 4
    3c38:	1f cf       	rjmp	.-450    	; 0x3a78 <__clockInit+0x72>
    3c3a:	5e cf       	rjmp	.-324    	; 0x3af8 <__clockInit+0xf2>
    3c3c:	0f 90       	pop	r0
    3c3e:	0f 90       	pop	r0
    3c40:	0f 90       	pop	r0
    3c42:	0f 90       	pop	r0
    3c44:	cf 91       	pop	r28
    3c46:	df 91       	pop	r29
    3c48:	1f 91       	pop	r17
    3c4a:	0f 91       	pop	r16
    3c4c:	ff 90       	pop	r15
    3c4e:	ef 90       	pop	r14
    3c50:	df 90       	pop	r13
    3c52:	cf 90       	pop	r12
    3c54:	bf 90       	pop	r11
    3c56:	af 90       	pop	r10
    3c58:	9f 90       	pop	r9
    3c5a:	8f 90       	pop	r8
    3c5c:	7f 90       	pop	r7
    3c5e:	6f 90       	pop	r6
    3c60:	5f 90       	pop	r5
    3c62:	4f 90       	pop	r4
    3c64:	3f 90       	pop	r3
    3c66:	2f 90       	pop	r2
    3c68:	08 95       	ret

00003c6a <clockHasElapsedGetOverflow>:
    3c6a:	8f 92       	push	r8
    3c6c:	9f 92       	push	r9
    3c6e:	af 92       	push	r10
    3c70:	bf 92       	push	r11
    3c72:	cf 92       	push	r12
    3c74:	df 92       	push	r13
    3c76:	ef 92       	push	r14
    3c78:	ff 92       	push	r15
    3c7a:	0f 93       	push	r16
    3c7c:	1f 93       	push	r17
    3c7e:	cf 93       	push	r28
    3c80:	df 93       	push	r29
    3c82:	6b 01       	movw	r12, r22
    3c84:	7c 01       	movw	r14, r24
    3c86:	49 01       	movw	r8, r18
    3c88:	5a 01       	movw	r10, r20
    3c8a:	e8 01       	movw	r28, r16
    3c8c:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    3c90:	6c 19       	sub	r22, r12
    3c92:	7d 09       	sbc	r23, r13
    3c94:	8e 09       	sbc	r24, r14
    3c96:	9f 09       	sbc	r25, r15
    3c98:	86 16       	cp	r8, r22
    3c9a:	97 06       	cpc	r9, r23
    3c9c:	a8 06       	cpc	r10, r24
    3c9e:	b9 06       	cpc	r11, r25
    3ca0:	50 f4       	brcc	.+20     	; 0x3cb6 <clockHasElapsedGetOverflow+0x4c>
    3ca2:	68 19       	sub	r22, r8
    3ca4:	79 09       	sbc	r23, r9
    3ca6:	8a 09       	sbc	r24, r10
    3ca8:	9b 09       	sbc	r25, r11
    3caa:	68 83       	st	Y, r22
    3cac:	79 83       	std	Y+1, r23	; 0x01
    3cae:	8a 83       	std	Y+2, r24	; 0x02
    3cb0:	9b 83       	std	Y+3, r25	; 0x03
    3cb2:	8f ef       	ldi	r24, 0xFF	; 255
    3cb4:	09 c0       	rjmp	.+18     	; 0x3cc8 <clockHasElapsedGetOverflow+0x5e>
    3cb6:	86 1a       	sub	r8, r22
    3cb8:	97 0a       	sbc	r9, r23
    3cba:	a8 0a       	sbc	r10, r24
    3cbc:	b9 0a       	sbc	r11, r25
    3cbe:	88 82       	st	Y, r8
    3cc0:	99 82       	std	Y+1, r9	; 0x01
    3cc2:	aa 82       	std	Y+2, r10	; 0x02
    3cc4:	bb 82       	std	Y+3, r11	; 0x03
    3cc6:	80 e0       	ldi	r24, 0x00	; 0
    3cc8:	df 91       	pop	r29
    3cca:	cf 91       	pop	r28
    3ccc:	1f 91       	pop	r17
    3cce:	0f 91       	pop	r16
    3cd0:	ff 90       	pop	r15
    3cd2:	ef 90       	pop	r14
    3cd4:	df 90       	pop	r13
    3cd6:	cf 90       	pop	r12
    3cd8:	bf 90       	pop	r11
    3cda:	af 90       	pop	r10
    3cdc:	9f 90       	pop	r9
    3cde:	8f 90       	pop	r8
    3ce0:	08 95       	ret

00003ce2 <clockWaitus>:
    3ce2:	af 92       	push	r10
    3ce4:	bf 92       	push	r11
    3ce6:	cf 92       	push	r12
    3ce8:	df 92       	push	r13
    3cea:	ef 92       	push	r14
    3cec:	ff 92       	push	r15
    3cee:	0f 93       	push	r16
    3cf0:	1f 93       	push	r17
    3cf2:	5b 01       	movw	r10, r22
    3cf4:	6c 01       	movw	r12, r24
    3cf6:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    3cfa:	7b 01       	movw	r14, r22
    3cfc:	8c 01       	movw	r16, r24
    3cfe:	01 c0       	rjmp	.+2      	; 0x3d02 <clockWaitus+0x20>
    3d00:	00 00       	nop
    3d02:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    3d06:	6e 19       	sub	r22, r14
    3d08:	7f 09       	sbc	r23, r15
    3d0a:	80 0b       	sbc	r24, r16
    3d0c:	91 0b       	sbc	r25, r17
    3d0e:	6a 15       	cp	r22, r10
    3d10:	7b 05       	cpc	r23, r11
    3d12:	8c 05       	cpc	r24, r12
    3d14:	9d 05       	cpc	r25, r13
    3d16:	a0 f3       	brcs	.-24     	; 0x3d00 <clockWaitus+0x1e>
    3d18:	1f 91       	pop	r17
    3d1a:	0f 91       	pop	r16
    3d1c:	ff 90       	pop	r15
    3d1e:	ef 90       	pop	r14
    3d20:	df 90       	pop	r13
    3d22:	cf 90       	pop	r12
    3d24:	bf 90       	pop	r11
    3d26:	af 90       	pop	r10
    3d28:	08 95       	ret

00003d2a <clockWaitms>:
    3d2a:	28 ee       	ldi	r18, 0xE8	; 232
    3d2c:	33 e0       	ldi	r19, 0x03	; 3
    3d2e:	40 e0       	ldi	r20, 0x00	; 0
    3d30:	50 e0       	ldi	r21, 0x00	; 0
    3d32:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    3d36:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <clockWaitus>
    3d3a:	08 95       	ret

00003d3c <delay_ms>:
    3d3c:	9b 01       	movw	r18, r22
    3d3e:	ac 01       	movw	r20, r24
    3d40:	80 91 41 03 	lds	r24, 0x0341
    3d44:	90 91 42 03 	lds	r25, 0x0342
    3d48:	89 2b       	or	r24, r25
    3d4a:	29 f0       	breq	.+10     	; 0x3d56 <delay_ms+0x1a>
    3d4c:	ca 01       	movw	r24, r20
    3d4e:	b9 01       	movw	r22, r18
    3d50:	0e 94 95 1e 	call	0x3d2a	; 0x3d2a <clockWaitms>
    3d54:	08 95       	ret
    3d56:	ca 01       	movw	r24, r20
    3d58:	b9 01       	movw	r22, r18
    3d5a:	41 e0       	ldi	r20, 0x01	; 1
    3d5c:	50 e0       	ldi	r21, 0x00	; 0
    3d5e:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <ticks_per_ms>
    3d62:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <delay_cycles>
    3d66:	08 95       	ret

00003d68 <delay_us>:
    3d68:	9b 01       	movw	r18, r22
    3d6a:	ac 01       	movw	r20, r24
    3d6c:	80 91 41 03 	lds	r24, 0x0341
    3d70:	90 91 42 03 	lds	r25, 0x0342
    3d74:	89 2b       	or	r24, r25
    3d76:	51 f0       	breq	.+20     	; 0x3d8c <delay_us+0x24>
    3d78:	25 36       	cpi	r18, 0x65	; 101
    3d7a:	31 05       	cpc	r19, r1
    3d7c:	41 05       	cpc	r20, r1
    3d7e:	51 05       	cpc	r21, r1
    3d80:	28 f0       	brcs	.+10     	; 0x3d8c <delay_us+0x24>
    3d82:	ca 01       	movw	r24, r20
    3d84:	b9 01       	movw	r22, r18
    3d86:	0e 94 71 1e 	call	0x3ce2	; 0x3ce2 <clockWaitus>
    3d8a:	08 95       	ret
    3d8c:	ca 01       	movw	r24, r20
    3d8e:	b9 01       	movw	r22, r18
    3d90:	48 ee       	ldi	r20, 0xE8	; 232
    3d92:	53 e0       	ldi	r21, 0x03	; 3
    3d94:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <ticks_per_ms>
    3d98:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <delay_cycles>
    3d9c:	08 95       	ret

00003d9e <clockHasElapsed>:
    3d9e:	af 92       	push	r10
    3da0:	bf 92       	push	r11
    3da2:	cf 92       	push	r12
    3da4:	df 92       	push	r13
    3da6:	ef 92       	push	r14
    3da8:	ff 92       	push	r15
    3daa:	0f 93       	push	r16
    3dac:	1f 93       	push	r17
    3dae:	7b 01       	movw	r14, r22
    3db0:	8c 01       	movw	r16, r24
    3db2:	59 01       	movw	r10, r18
    3db4:	6a 01       	movw	r12, r20
    3db6:	0e 94 29 19 	call	0x3252	; 0x3252 <clockGetus>
    3dba:	6e 19       	sub	r22, r14
    3dbc:	7f 09       	sbc	r23, r15
    3dbe:	80 0b       	sbc	r24, r16
    3dc0:	91 0b       	sbc	r25, r17
    3dc2:	6a 15       	cp	r22, r10
    3dc4:	7b 05       	cpc	r23, r11
    3dc6:	8c 05       	cpc	r24, r12
    3dc8:	9d 05       	cpc	r25, r13
    3dca:	10 f4       	brcc	.+4      	; 0x3dd0 <clockHasElapsed+0x32>
    3dcc:	80 e0       	ldi	r24, 0x00	; 0
    3dce:	01 c0       	rjmp	.+2      	; 0x3dd2 <clockHasElapsed+0x34>
    3dd0:	8f ef       	ldi	r24, 0xFF	; 255
    3dd2:	1f 91       	pop	r17
    3dd4:	0f 91       	pop	r16
    3dd6:	ff 90       	pop	r15
    3dd8:	ef 90       	pop	r14
    3dda:	df 90       	pop	r13
    3ddc:	cf 90       	pop	r12
    3dde:	bf 90       	pop	r11
    3de0:	af 90       	pop	r10
    3de2:	08 95       	ret

00003de4 <timerCaptureDetach>:
    3de4:	ef 92       	push	r14
    3de6:	ff 92       	push	r15
    3de8:	0f 93       	push	r16
    3dea:	1f 93       	push	r17
    3dec:	8c 01       	movw	r16, r24
    3dee:	fc 01       	movw	r30, r24
    3df0:	e5 90       	lpm	r14, Z+
    3df2:	f4 90       	lpm	r15, Z+
    3df4:	81 96       	adiw	r24, 0x21	; 33
    3df6:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    3dfa:	c8 01       	movw	r24, r16
    3dfc:	84 96       	adiw	r24, 0x24	; 36
    3dfe:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3e02:	f7 01       	movw	r30, r14
    3e04:	17 82       	std	Z+7, r1	; 0x07
    3e06:	16 82       	std	Z+6, r1	; 0x06
    3e08:	1f 91       	pop	r17
    3e0a:	0f 91       	pop	r16
    3e0c:	ff 90       	pop	r15
    3e0e:	ef 90       	pop	r14
    3e10:	08 95       	ret

00003e12 <timerCaptureAttach>:
    3e12:	af 92       	push	r10
    3e14:	bf 92       	push	r11
    3e16:	cf 92       	push	r12
    3e18:	df 92       	push	r13
    3e1a:	ef 92       	push	r14
    3e1c:	ff 92       	push	r15
    3e1e:	0f 93       	push	r16
    3e20:	1f 93       	push	r17
    3e22:	cf 93       	push	r28
    3e24:	df 93       	push	r29
    3e26:	8c 01       	movw	r16, r24
    3e28:	7b 01       	movw	r14, r22
    3e2a:	6a 01       	movw	r12, r20
    3e2c:	b2 2e       	mov	r11, r18
    3e2e:	fc 01       	movw	r30, r24
    3e30:	c5 91       	lpm	r28, Z+
    3e32:	d4 91       	lpm	r29, Z+
    3e34:	8e 81       	ldd	r24, Y+6	; 0x06
    3e36:	9f 81       	ldd	r25, Y+7	; 0x07
    3e38:	89 2b       	or	r24, r25
    3e3a:	19 f0       	breq	.+6      	; 0x3e42 <timerCaptureAttach+0x30>
    3e3c:	8a ee       	ldi	r24, 0xEA	; 234
    3e3e:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    3e42:	af b6       	in	r10, 0x3f	; 63
    3e44:	f8 94       	cli
    3e46:	ff 82       	std	Y+7, r15	; 0x07
    3e48:	ee 82       	std	Y+6, r14	; 0x06
    3e4a:	d9 86       	std	Y+9, r13	; 0x09
    3e4c:	c8 86       	std	Y+8, r12	; 0x08
    3e4e:	c8 01       	movw	r24, r16
    3e50:	87 96       	adiw	r24, 0x27	; 39
    3e52:	bb 20       	and	r11, r11
    3e54:	19 f0       	breq	.+6      	; 0x3e5c <timerCaptureAttach+0x4a>
    3e56:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3e5a:	02 c0       	rjmp	.+4      	; 0x3e60 <timerCaptureAttach+0x4e>
    3e5c:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    3e60:	c8 01       	movw	r24, r16
    3e62:	84 96       	adiw	r24, 0x24	; 36
    3e64:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3e68:	c8 01       	movw	r24, r16
    3e6a:	81 96       	adiw	r24, 0x21	; 33
    3e6c:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3e70:	af be       	out	0x3f, r10	; 63
    3e72:	df 91       	pop	r29
    3e74:	cf 91       	pop	r28
    3e76:	1f 91       	pop	r17
    3e78:	0f 91       	pop	r16
    3e7a:	ff 90       	pop	r15
    3e7c:	ef 90       	pop	r14
    3e7e:	df 90       	pop	r13
    3e80:	cf 90       	pop	r12
    3e82:	bf 90       	pop	r11
    3e84:	af 90       	pop	r10
    3e86:	08 95       	ret

00003e88 <timerOverflowAttach>:
    3e88:	df 92       	push	r13
    3e8a:	ef 92       	push	r14
    3e8c:	ff 92       	push	r15
    3e8e:	0f 93       	push	r16
    3e90:	1f 93       	push	r17
    3e92:	cf 93       	push	r28
    3e94:	df 93       	push	r29
    3e96:	ec 01       	movw	r28, r24
    3e98:	8b 01       	movw	r16, r22
    3e9a:	7a 01       	movw	r14, r20
    3e9c:	df b6       	in	r13, 0x3f	; 63
    3e9e:	f8 94       	cli
    3ea0:	61 15       	cp	r22, r1
    3ea2:	71 05       	cpc	r23, r1
    3ea4:	61 f0       	breq	.+24     	; 0x3ebe <timerOverflowAttach+0x36>
    3ea6:	fc 01       	movw	r30, r24
    3ea8:	a5 91       	lpm	r26, Z+
    3eaa:	b4 91       	lpm	r27, Z+
    3eac:	12 96       	adiw	r26, 0x02	; 2
    3eae:	8d 91       	ld	r24, X+
    3eb0:	9c 91       	ld	r25, X
    3eb2:	13 97       	sbiw	r26, 0x03	; 3
    3eb4:	89 2b       	or	r24, r25
    3eb6:	19 f0       	breq	.+6      	; 0x3ebe <timerOverflowAttach+0x36>
    3eb8:	8c ef       	ldi	r24, 0xFC	; 252
    3eba:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    3ebe:	ce 01       	movw	r24, r28
    3ec0:	fe 01       	movw	r30, r28
    3ec2:	a5 91       	lpm	r26, Z+
    3ec4:	b4 91       	lpm	r27, Z+
    3ec6:	13 96       	adiw	r26, 0x03	; 3
    3ec8:	1c 93       	st	X, r17
    3eca:	0e 93       	st	-X, r16
    3ecc:	12 97       	sbiw	r26, 0x02	; 2
    3ece:	15 96       	adiw	r26, 0x05	; 5
    3ed0:	fc 92       	st	X, r15
    3ed2:	ee 92       	st	-X, r14
    3ed4:	14 97       	sbiw	r26, 0x04	; 4
    3ed6:	49 96       	adiw	r24, 0x19	; 25
    3ed8:	01 2b       	or	r16, r17
    3eda:	19 f0       	breq	.+6      	; 0x3ee2 <timerOverflowAttach+0x5a>
    3edc:	0e 94 a7 12 	call	0x254e	; 0x254e <__portMaskSet>
    3ee0:	02 c0       	rjmp	.+4      	; 0x3ee6 <timerOverflowAttach+0x5e>
    3ee2:	0e 94 c0 12 	call	0x2580	; 0x2580 <__portMaskClear>
    3ee6:	df be       	out	0x3f, r13	; 63
    3ee8:	df 91       	pop	r29
    3eea:	cf 91       	pop	r28
    3eec:	1f 91       	pop	r17
    3eee:	0f 91       	pop	r16
    3ef0:	ff 90       	pop	r15
    3ef2:	ef 90       	pop	r14
    3ef4:	df 90       	pop	r13
    3ef6:	08 95       	ret

00003ef8 <__uartHWSetBaudRate>:
    3ef8:	bf 92       	push	r11
    3efa:	cf 92       	push	r12
    3efc:	df 92       	push	r13
    3efe:	ef 92       	push	r14
    3f00:	ff 92       	push	r15
    3f02:	0f 93       	push	r16
    3f04:	1f 93       	push	r17
    3f06:	cf 93       	push	r28
    3f08:	df 93       	push	r29
    3f0a:	7a 01       	movw	r14, r20
    3f0c:	8b 01       	movw	r16, r22
    3f0e:	ec 01       	movw	r28, r24
    3f10:	bf b6       	in	r11, 0x3f	; 63
    3f12:	f8 94       	cli
    3f14:	4f 3f       	cpi	r20, 0xFF	; 255
    3f16:	8f ef       	ldi	r24, 0xFF	; 255
    3f18:	58 07       	cpc	r21, r24
    3f1a:	8f ef       	ldi	r24, 0xFF	; 255
    3f1c:	68 07       	cpc	r22, r24
    3f1e:	8f ef       	ldi	r24, 0xFF	; 255
    3f20:	78 07       	cpc	r23, r24
    3f22:	21 f4       	brne	.+8      	; 0x3f2c <__uartHWSetBaudRate+0x34>
    3f24:	a1 e0       	ldi	r26, 0x01	; 1
    3f26:	ca 2e       	mov	r12, r26
    3f28:	d1 2c       	mov	r13, r1
    3f2a:	24 c0       	rjmp	.+72     	; 0x3f74 <__uartHWSetBaudRate+0x7c>
    3f2c:	cb 01       	movw	r24, r22
    3f2e:	ba 01       	movw	r22, r20
    3f30:	f3 e0       	ldi	r31, 0x03	; 3
    3f32:	66 0f       	add	r22, r22
    3f34:	77 1f       	adc	r23, r23
    3f36:	88 1f       	adc	r24, r24
    3f38:	99 1f       	adc	r25, r25
    3f3a:	fa 95       	dec	r31
    3f3c:	d1 f7       	brne	.-12     	; 0x3f32 <__uartHWSetBaudRate+0x3a>
    3f3e:	20 91 00 02 	lds	r18, 0x0200
    3f42:	30 91 01 02 	lds	r19, 0x0201
    3f46:	40 91 02 02 	lds	r20, 0x0202
    3f4a:	50 91 03 02 	lds	r21, 0x0203
    3f4e:	62 0f       	add	r22, r18
    3f50:	73 1f       	adc	r23, r19
    3f52:	84 1f       	adc	r24, r20
    3f54:	95 1f       	adc	r25, r21
    3f56:	a8 01       	movw	r20, r16
    3f58:	97 01       	movw	r18, r14
    3f5a:	e4 e0       	ldi	r30, 0x04	; 4
    3f5c:	22 0f       	add	r18, r18
    3f5e:	33 1f       	adc	r19, r19
    3f60:	44 1f       	adc	r20, r20
    3f62:	55 1f       	adc	r21, r21
    3f64:	ea 95       	dec	r30
    3f66:	d1 f7       	brne	.-12     	; 0x3f5c <__uartHWSetBaudRate+0x64>
    3f68:	0e 94 13 26 	call	0x4c26	; 0x4c26 <__udivmodsi4>
    3f6c:	69 01       	movw	r12, r18
    3f6e:	08 94       	sec
    3f70:	c1 08       	sbc	r12, r1
    3f72:	d1 08       	sbc	r13, r1
    3f74:	9c a1       	ldd	r25, Y+36	; 0x24
    3f76:	99 23       	and	r25, r25
    3f78:	c9 f1       	breq	.+114    	; 0x3fec <__uartHWSetBaudRate+0xf4>
    3f7a:	e8 8d       	ldd	r30, Y+24	; 0x18
    3f7c:	f9 8d       	ldd	r31, Y+25	; 0x19
    3f7e:	80 81       	ld	r24, Z
    3f80:	90 95       	com	r25
    3f82:	89 23       	and	r24, r25
    3f84:	80 83       	st	Z, r24
    3f86:	8f ef       	ldi	r24, 0xFF	; 255
    3f88:	e8 16       	cp	r14, r24
    3f8a:	8f ef       	ldi	r24, 0xFF	; 255
    3f8c:	f8 06       	cpc	r15, r24
    3f8e:	8f ef       	ldi	r24, 0xFF	; 255
    3f90:	08 07       	cpc	r16, r24
    3f92:	8f ef       	ldi	r24, 0xFF	; 255
    3f94:	18 07       	cpc	r17, r24
    3f96:	19 f4       	brne	.+6      	; 0x3f9e <__uartHWSetBaudRate+0xa6>
    3f98:	21 e0       	ldi	r18, 0x01	; 1
    3f9a:	30 e0       	ldi	r19, 0x00	; 0
    3f9c:	1d c0       	rjmp	.+58     	; 0x3fd8 <__uartHWSetBaudRate+0xe0>
    3f9e:	32 e0       	ldi	r19, 0x02	; 2
    3fa0:	ee 0c       	add	r14, r14
    3fa2:	ff 1c       	adc	r15, r15
    3fa4:	00 1f       	adc	r16, r16
    3fa6:	11 1f       	adc	r17, r17
    3fa8:	3a 95       	dec	r19
    3faa:	d1 f7       	brne	.-12     	; 0x3fa0 <__uartHWSetBaudRate+0xa8>
    3fac:	60 91 00 02 	lds	r22, 0x0200
    3fb0:	70 91 01 02 	lds	r23, 0x0201
    3fb4:	80 91 02 02 	lds	r24, 0x0202
    3fb8:	90 91 03 02 	lds	r25, 0x0203
    3fbc:	6e 0d       	add	r22, r14
    3fbe:	7f 1d       	adc	r23, r15
    3fc0:	80 1f       	adc	r24, r16
    3fc2:	91 1f       	adc	r25, r17
    3fc4:	ee 0c       	add	r14, r14
    3fc6:	ff 1c       	adc	r15, r15
    3fc8:	00 1f       	adc	r16, r16
    3fca:	11 1f       	adc	r17, r17
    3fcc:	a8 01       	movw	r20, r16
    3fce:	97 01       	movw	r18, r14
    3fd0:	0e 94 13 26 	call	0x4c26	; 0x4c26 <__udivmodsi4>
    3fd4:	21 50       	subi	r18, 0x01	; 1
    3fd6:	30 40       	sbci	r19, 0x00	; 0
    3fd8:	2c 15       	cp	r18, r12
    3fda:	3d 05       	cpc	r19, r13
    3fdc:	38 f0       	brcs	.+14     	; 0x3fec <__uartHWSetBaudRate+0xf4>
    3fde:	e8 8d       	ldd	r30, Y+24	; 0x18
    3fe0:	f9 8d       	ldd	r31, Y+25	; 0x19
    3fe2:	80 81       	ld	r24, Z
    3fe4:	9c a1       	ldd	r25, Y+36	; 0x24
    3fe6:	89 2b       	or	r24, r25
    3fe8:	80 83       	st	Z, r24
    3fea:	69 01       	movw	r12, r18
    3fec:	ec 8d       	ldd	r30, Y+28	; 0x1c
    3fee:	fd 8d       	ldd	r31, Y+29	; 0x1d
    3ff0:	c0 82       	st	Z, r12
    3ff2:	ee 8d       	ldd	r30, Y+30	; 0x1e
    3ff4:	ff 8d       	ldd	r31, Y+31	; 0x1f
    3ff6:	d0 82       	st	Z, r13
    3ff8:	bf be       	out	0x3f, r11	; 63
    3ffa:	df 91       	pop	r29
    3ffc:	cf 91       	pop	r28
    3ffe:	1f 91       	pop	r17
    4000:	0f 91       	pop	r16
    4002:	ff 90       	pop	r15
    4004:	ef 90       	pop	r14
    4006:	df 90       	pop	r13
    4008:	cf 90       	pop	r12
    400a:	bf 90       	pop	r11
    400c:	08 95       	ret

0000400e <__uartHWOff>:
    400e:	dc 01       	movw	r26, r24
    4010:	5a 96       	adiw	r26, 0x1a	; 26
    4012:	ed 91       	ld	r30, X+
    4014:	fc 91       	ld	r31, X
    4016:	5b 97       	sbiw	r26, 0x1b	; 27
    4018:	80 81       	ld	r24, Z
    401a:	87 72       	andi	r24, 0x27	; 39
    401c:	80 83       	st	Z, r24
    401e:	94 96       	adiw	r26, 0x24	; 36
    4020:	9c 91       	ld	r25, X
    4022:	94 97       	sbiw	r26, 0x24	; 36
    4024:	99 23       	and	r25, r25
    4026:	41 f0       	breq	.+16     	; 0x4038 <__uartHWOff+0x2a>
    4028:	58 96       	adiw	r26, 0x18	; 24
    402a:	ed 91       	ld	r30, X+
    402c:	fc 91       	ld	r31, X
    402e:	59 97       	sbiw	r26, 0x19	; 25
    4030:	80 81       	ld	r24, Z
    4032:	90 95       	com	r25
    4034:	89 23       	and	r24, r25
    4036:	80 83       	st	Z, r24
    4038:	08 95       	ret

0000403a <oneWireReceiveMode>:
    403a:	dc 01       	movw	r26, r24
    403c:	53 96       	adiw	r26, 0x13	; 19
    403e:	8c 91       	ld	r24, X
    4040:	53 97       	sbiw	r26, 0x13	; 19
    4042:	88 23       	and	r24, r24
    4044:	71 f0       	breq	.+28     	; 0x4062 <oneWireReceiveMode+0x28>
    4046:	5a 96       	adiw	r26, 0x1a	; 26
    4048:	ed 91       	ld	r30, X+
    404a:	fc 91       	ld	r31, X
    404c:	5b 97       	sbiw	r26, 0x1b	; 27
    404e:	80 81       	ld	r24, Z
    4050:	87 7b       	andi	r24, 0xB7	; 183
    4052:	80 83       	st	Z, r24
    4054:	5a 96       	adiw	r26, 0x1a	; 26
    4056:	ed 91       	ld	r30, X+
    4058:	fc 91       	ld	r31, X
    405a:	5b 97       	sbiw	r26, 0x1b	; 27
    405c:	80 81       	ld	r24, Z
    405e:	80 69       	ori	r24, 0x90	; 144
    4060:	80 83       	st	Z, r24
    4062:	08 95       	ret

00004064 <__uartHWStartXmit>:
    4064:	dc 01       	movw	r26, r24
    4066:	90 96       	adiw	r26, 0x20	; 32
    4068:	ed 91       	ld	r30, X+
    406a:	fc 91       	ld	r31, X
    406c:	91 97       	sbiw	r26, 0x21	; 33
    406e:	60 83       	st	Z, r22
    4070:	08 95       	ret

00004072 <startXmitMode>:
    4072:	dc 01       	movw	r26, r24
    4074:	53 96       	adiw	r26, 0x13	; 19
    4076:	8c 91       	ld	r24, X
    4078:	53 97       	sbiw	r26, 0x13	; 19
    407a:	88 23       	and	r24, r24
    407c:	71 f0       	breq	.+28     	; 0x409a <startXmitMode+0x28>
    407e:	5a 96       	adiw	r26, 0x1a	; 26
    4080:	ed 91       	ld	r30, X+
    4082:	fc 91       	ld	r31, X
    4084:	5b 97       	sbiw	r26, 0x1b	; 27
    4086:	80 81       	ld	r24, Z
    4088:	8f 76       	andi	r24, 0x6F	; 111
    408a:	80 83       	st	Z, r24
    408c:	5a 96       	adiw	r26, 0x1a	; 26
    408e:	ed 91       	ld	r30, X+
    4090:	fc 91       	ld	r31, X
    4092:	5b 97       	sbiw	r26, 0x1b	; 27
    4094:	80 81       	ld	r24, Z
    4096:	88 64       	ori	r24, 0x48	; 72
    4098:	80 83       	st	Z, r24
    409a:	08 95       	ret

0000409c <uartReceivePollingMode>:
    409c:	dc 01       	movw	r26, r24
    409e:	5a 96       	adiw	r26, 0x1a	; 26
    40a0:	ed 91       	ld	r30, X+
    40a2:	fc 91       	ld	r31, X
    40a4:	5b 97       	sbiw	r26, 0x1b	; 27
    40a6:	66 23       	and	r22, r22
    40a8:	19 f0       	breq	.+6      	; 0x40b0 <uartReceivePollingMode+0x14>
    40aa:	80 81       	ld	r24, Z
    40ac:	8f 77       	andi	r24, 0x7F	; 127
    40ae:	02 c0       	rjmp	.+4      	; 0x40b4 <uartReceivePollingMode+0x18>
    40b0:	80 81       	ld	r24, Z
    40b2:	80 68       	ori	r24, 0x80	; 128
    40b4:	80 83       	st	Z, r24
    40b6:	08 95       	ret

000040b8 <uartPollByte>:
    40b8:	dc 01       	movw	r26, r24
    40ba:	58 96       	adiw	r26, 0x18	; 24
    40bc:	ed 91       	ld	r30, X+
    40be:	fc 91       	ld	r31, X
    40c0:	59 97       	sbiw	r26, 0x19	; 25
    40c2:	80 81       	ld	r24, Z
    40c4:	87 fd       	sbrc	r24, 7
    40c6:	03 c0       	rjmp	.+6      	; 0x40ce <uartPollByte+0x16>
    40c8:	2f ef       	ldi	r18, 0xFF	; 255
    40ca:	3f ef       	ldi	r19, 0xFF	; 255
    40cc:	07 c0       	rjmp	.+14     	; 0x40dc <uartPollByte+0x24>
    40ce:	90 96       	adiw	r26, 0x20	; 32
    40d0:	ed 91       	ld	r30, X+
    40d2:	fc 91       	ld	r31, X
    40d4:	91 97       	sbiw	r26, 0x21	; 33
    40d6:	80 81       	ld	r24, Z
    40d8:	28 2f       	mov	r18, r24
    40da:	30 e0       	ldi	r19, 0x00	; 0
    40dc:	c9 01       	movw	r24, r18
    40de:	08 95       	ret

000040e0 <__uartHWInit>:
    40e0:	cf 93       	push	r28
    40e2:	df 93       	push	r29
    40e4:	ec 01       	movw	r28, r24
    40e6:	0e 94 a0 10 	call	0x2140	; 0x2140 <_uartSetBaudRate>
    40ea:	8b 89       	ldd	r24, Y+19	; 0x13
    40ec:	88 23       	and	r24, r24
    40ee:	11 f0       	breq	.+4      	; 0x40f4 <__uartHWInit+0x14>
    40f0:	20 e9       	ldi	r18, 0x90	; 144
    40f2:	0c c0       	rjmp	.+24     	; 0x410c <__uartHWInit+0x2c>
    40f4:	8b 85       	ldd	r24, Y+11	; 0x0b
    40f6:	9c 85       	ldd	r25, Y+12	; 0x0c
    40f8:	89 2b       	or	r24, r25
    40fa:	11 f0       	breq	.+4      	; 0x4100 <__uartHWInit+0x20>
    40fc:	20 e9       	ldi	r18, 0x90	; 144
    40fe:	01 c0       	rjmp	.+2      	; 0x4102 <__uartHWInit+0x22>
    4100:	20 e0       	ldi	r18, 0x00	; 0
    4102:	8d 85       	ldd	r24, Y+13	; 0x0d
    4104:	9e 85       	ldd	r25, Y+14	; 0x0e
    4106:	89 2b       	or	r24, r25
    4108:	09 f0       	breq	.+2      	; 0x410c <__uartHWInit+0x2c>
    410a:	28 64       	ori	r18, 0x48	; 72
    410c:	ea 8d       	ldd	r30, Y+26	; 0x1a
    410e:	fb 8d       	ldd	r31, Y+27	; 0x1b
    4110:	20 83       	st	Z, r18
    4112:	df 91       	pop	r29
    4114:	cf 91       	pop	r28
    4116:	08 95       	ret

00004118 <a2dOff>:
    4118:	ea e7       	ldi	r30, 0x7A	; 122
    411a:	f0 e0       	ldi	r31, 0x00	; 0
    411c:	80 81       	ld	r24, Z
    411e:	87 7f       	andi	r24, 0xF7	; 247
    4120:	80 83       	st	Z, r24
    4122:	80 81       	ld	r24, Z
    4124:	8f 77       	andi	r24, 0x7F	; 127
    4126:	80 83       	st	Z, r24
    4128:	08 95       	ret

0000412a <a2dSetPrescaler>:
    412a:	ea e7       	ldi	r30, 0x7A	; 122
    412c:	f0 e0       	ldi	r31, 0x00	; 0
    412e:	90 81       	ld	r25, Z
    4130:	87 70       	andi	r24, 0x07	; 7
    4132:	98 7f       	andi	r25, 0xF8	; 248
    4134:	89 2b       	or	r24, r25
    4136:	80 83       	st	Z, r24
    4138:	08 95       	ret

0000413a <a2dConvert10bit>:
    413a:	98 2f       	mov	r25, r24
    413c:	85 ff       	sbrs	r24, 5
    413e:	04 c0       	rjmp	.+8      	; 0x4148 <a2dConvert10bit+0xe>
    4140:	80 91 7b 00 	lds	r24, 0x007B
    4144:	88 60       	ori	r24, 0x08	; 8
    4146:	03 c0       	rjmp	.+6      	; 0x414e <a2dConvert10bit+0x14>
    4148:	80 91 7b 00 	lds	r24, 0x007B
    414c:	87 7f       	andi	r24, 0xF7	; 247
    414e:	80 93 7b 00 	sts	0x007B, r24
    4152:	80 91 7c 00 	lds	r24, 0x007C
    4156:	9f 71       	andi	r25, 0x1F	; 31
    4158:	80 7e       	andi	r24, 0xE0	; 224
    415a:	89 2b       	or	r24, r25
    415c:	80 93 7c 00 	sts	0x007C, r24
    4160:	10 92 43 03 	sts	0x0343, r1
    4164:	80 91 7a 00 	lds	r24, 0x007A
    4168:	80 61       	ori	r24, 0x10	; 16
    416a:	80 93 7a 00 	sts	0x007A, r24
    416e:	80 91 7a 00 	lds	r24, 0x007A
    4172:	80 64       	ori	r24, 0x40	; 64
    4174:	80 93 7a 00 	sts	0x007A, r24
    4178:	80 91 7a 00 	lds	r24, 0x007A
    417c:	86 fd       	sbrc	r24, 6
    417e:	fc cf       	rjmp	.-8      	; 0x4178 <a2dConvert10bit+0x3e>
    4180:	20 91 78 00 	lds	r18, 0x0078
    4184:	30 91 79 00 	lds	r19, 0x0079
    4188:	c9 01       	movw	r24, r18
    418a:	08 95       	ret

0000418c <a2dConvert8bit>:
    418c:	0e 94 9d 20 	call	0x413a	; 0x413a <a2dConvert10bit>
    4190:	96 95       	lsr	r25
    4192:	87 95       	ror	r24
    4194:	96 95       	lsr	r25
    4196:	87 95       	ror	r24
    4198:	08 95       	ret

0000419a <__vector_29>:
    419a:	1f 92       	push	r1
    419c:	0f 92       	push	r0
    419e:	0f b6       	in	r0, 0x3f	; 63
    41a0:	0f 92       	push	r0
    41a2:	11 24       	eor	r1, r1
    41a4:	8f 93       	push	r24
    41a6:	8f ef       	ldi	r24, 0xFF	; 255
    41a8:	80 93 43 03 	sts	0x0343, r24
    41ac:	8f 91       	pop	r24
    41ae:	0f 90       	pop	r0
    41b0:	0f be       	out	0x3f, r0	; 63
    41b2:	0f 90       	pop	r0
    41b4:	1f 90       	pop	r1
    41b6:	18 95       	reti

000041b8 <a2dInit>:
    41b8:	ef 92       	push	r14
    41ba:	ff 92       	push	r15
    41bc:	0f 93       	push	r16
    41be:	1f 93       	push	r17
    41c0:	cf 93       	push	r28
    41c2:	df 93       	push	r29
    41c4:	80 91 7a 00 	lds	r24, 0x007A
    41c8:	80 68       	ori	r24, 0x80	; 128
    41ca:	80 93 7a 00 	sts	0x007A, r24
    41ce:	80 91 7a 00 	lds	r24, 0x007A
    41d2:	8f 7d       	andi	r24, 0xDF	; 223
    41d4:	80 93 7a 00 	sts	0x007A, r24
    41d8:	80 91 7a 00 	lds	r24, 0x007A
    41dc:	88 7f       	andi	r24, 0xF8	; 248
    41de:	86 60       	ori	r24, 0x06	; 6
    41e0:	80 93 7a 00 	sts	0x007A, r24
    41e4:	80 91 7c 00 	lds	r24, 0x007C
    41e8:	8f 73       	andi	r24, 0x3F	; 63
    41ea:	80 64       	ori	r24, 0x40	; 64
    41ec:	80 93 7c 00 	sts	0x007C, r24
    41f0:	80 91 7c 00 	lds	r24, 0x007C
    41f4:	8f 7d       	andi	r24, 0xDF	; 223
    41f6:	80 93 7c 00 	sts	0x007C, r24
    41fa:	80 91 7a 00 	lds	r24, 0x007A
    41fe:	88 60       	ori	r24, 0x08	; 8
    4200:	80 93 7a 00 	sts	0x007A, r24
    4204:	8f ef       	ldi	r24, 0xFF	; 255
    4206:	80 93 43 03 	sts	0x0343, r24
    420a:	78 94       	sei
    420c:	80 91 30 02 	lds	r24, 0x0230
    4210:	c8 2f       	mov	r28, r24
    4212:	d0 e0       	ldi	r29, 0x00	; 0
    4214:	21 97       	sbiw	r28, 0x01	; 1
    4216:	00 e0       	ldi	r16, 0x00	; 0
    4218:	10 e0       	ldi	r17, 0x00	; 0
    421a:	7e 01       	movw	r14, r28
    421c:	0f c0       	rjmp	.+30     	; 0x423c <a2dInit+0x84>
    421e:	c7 01       	movw	r24, r14
    4220:	80 1b       	sub	r24, r16
    4222:	91 0b       	sbc	r25, r17
    4224:	08 97       	sbiw	r24, 0x08	; 8
    4226:	24 f0       	brlt	.+8      	; 0x4230 <a2dInit+0x78>
    4228:	9e 01       	movw	r18, r28
    422a:	28 5e       	subi	r18, 0xE8	; 232
    422c:	82 2f       	mov	r24, r18
    422e:	01 c0       	rjmp	.+2      	; 0x4232 <a2dInit+0x7a>
    4230:	8c 2f       	mov	r24, r28
    4232:	0e 94 9d 20 	call	0x413a	; 0x413a <a2dConvert10bit>
    4236:	21 97       	sbiw	r28, 0x01	; 1
    4238:	0f 5f       	subi	r16, 0xFF	; 255
    423a:	1f 4f       	sbci	r17, 0xFF	; 255
    423c:	3f ef       	ldi	r19, 0xFF	; 255
    423e:	cf 3f       	cpi	r28, 0xFF	; 255
    4240:	d3 07       	cpc	r29, r19
    4242:	69 f7       	brne	.-38     	; 0x421e <a2dInit+0x66>
    4244:	df 91       	pop	r29
    4246:	cf 91       	pop	r28
    4248:	1f 91       	pop	r17
    424a:	0f 91       	pop	r16
    424c:	ff 90       	pop	r15
    424e:	ef 90       	pop	r14
    4250:	08 95       	ret

00004252 <__scheduleUpdate>:
    4252:	2f 92       	push	r2
    4254:	3f 92       	push	r3
    4256:	4f 92       	push	r4
    4258:	5f 92       	push	r5
    425a:	6f 92       	push	r6
    425c:	7f 92       	push	r7
    425e:	8f 92       	push	r8
    4260:	9f 92       	push	r9
    4262:	af 92       	push	r10
    4264:	bf 92       	push	r11
    4266:	cf 92       	push	r12
    4268:	df 92       	push	r13
    426a:	ef 92       	push	r14
    426c:	ff 92       	push	r15
    426e:	0f 93       	push	r16
    4270:	1f 93       	push	r17
    4272:	df 93       	push	r29
    4274:	cf 93       	push	r28
    4276:	cd b7       	in	r28, 0x3d	; 61
    4278:	de b7       	in	r29, 0x3e	; 62
    427a:	29 97       	sbiw	r28, 0x09	; 9
    427c:	0f b6       	in	r0, 0x3f	; 63
    427e:	f8 94       	cli
    4280:	de bf       	out	0x3e, r29	; 62
    4282:	0f be       	out	0x3f, r0	; 63
    4284:	cd bf       	out	0x3d, r28	; 61
    4286:	99 87       	std	Y+9, r25	; 0x09
    4288:	88 87       	std	Y+8, r24	; 0x08
    428a:	0e 94 9c 19 	call	0x3338	; 0x3338 <compareDetach>
    428e:	2f b7       	in	r18, 0x3f	; 63
    4290:	2f 83       	std	Y+7, r18	; 0x07
    4292:	78 94       	sei
    4294:	8f ef       	ldi	r24, 0xFF	; 255
    4296:	80 93 47 03 	sts	0x0347, r24
    429a:	10 92 46 03 	sts	0x0346, r1
    429e:	80 91 08 02 	lds	r24, 0x0208
    42a2:	a8 2f       	mov	r26, r24
    42a4:	b0 e0       	ldi	r27, 0x00	; 0
    42a6:	11 97       	sbiw	r26, 0x01	; 1
    42a8:	be 83       	std	Y+6, r27	; 0x06
    42aa:	ad 83       	std	Y+5, r26	; 0x05
    42ac:	ed e0       	ldi	r30, 0x0D	; 13
    42ae:	f0 e0       	ldi	r31, 0x00	; 0
    42b0:	ae 9f       	mul	r26, r30
    42b2:	50 01       	movw	r10, r0
    42b4:	af 9f       	mul	r26, r31
    42b6:	b0 0c       	add	r11, r0
    42b8:	be 9f       	mul	r27, r30
    42ba:	b0 0c       	add	r11, r0
    42bc:	11 24       	eor	r1, r1
    42be:	20 e0       	ldi	r18, 0x00	; 0
    42c0:	33 e0       	ldi	r19, 0x03	; 3
    42c2:	a2 0e       	add	r10, r18
    42c4:	b3 1e       	adc	r11, r19
    42c6:	22 24       	eor	r2, r2
    42c8:	33 24       	eor	r3, r3
    42ca:	21 01       	movw	r4, r2
    42cc:	5a c0       	rjmp	.+180    	; 0x4382 <__scheduleUpdate+0x130>
    42ce:	d5 01       	movw	r26, r10
    42d0:	8c 91       	ld	r24, X
    42d2:	88 23       	and	r24, r24
    42d4:	09 f4       	brne	.+2      	; 0x42d8 <__scheduleUpdate+0x86>
    42d6:	4c c0       	rjmp	.+152    	; 0x4370 <__scheduleUpdate+0x11e>
    42d8:	19 96       	adiw	r26, 0x09	; 9
    42da:	6d 90       	ld	r6, X+
    42dc:	7d 90       	ld	r7, X+
    42de:	8d 90       	ld	r8, X+
    42e0:	9c 90       	ld	r9, X
    42e2:	1c 97       	sbiw	r26, 0x0c	; 12
    42e4:	15 96       	adiw	r26, 0x05	; 5
    42e6:	cd 90       	ld	r12, X+
    42e8:	dd 90       	ld	r13, X+
    42ea:	ed 90       	ld	r14, X+
    42ec:	fc 90       	ld	r15, X
    42ee:	18 97       	sbiw	r26, 0x08	; 8
    42f0:	c4 01       	movw	r24, r8
    42f2:	b3 01       	movw	r22, r6
    42f4:	a7 01       	movw	r20, r14
    42f6:	96 01       	movw	r18, r12
    42f8:	8e 01       	movw	r16, r28
    42fa:	0f 5f       	subi	r16, 0xFF	; 255
    42fc:	1f 4f       	sbci	r17, 0xFF	; 255
    42fe:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <clockHasElapsedGetOverflow>
    4302:	88 23       	and	r24, r24
    4304:	19 f1       	breq	.+70     	; 0x434c <__scheduleUpdate+0xfa>
    4306:	d5 01       	movw	r26, r10
    4308:	11 96       	adiw	r26, 0x01	; 1
    430a:	ed 91       	ld	r30, X+
    430c:	fc 91       	ld	r31, X
    430e:	12 97       	sbiw	r26, 0x02	; 2
    4310:	13 96       	adiw	r26, 0x03	; 3
    4312:	8d 91       	ld	r24, X+
    4314:	9c 91       	ld	r25, X
    4316:	14 97       	sbiw	r26, 0x04	; 4
    4318:	1c 92       	st	X, r1
    431a:	20 91 44 03 	lds	r18, 0x0344
    431e:	30 91 45 03 	lds	r19, 0x0345
    4322:	21 50       	subi	r18, 0x01	; 1
    4324:	30 40       	sbci	r19, 0x00	; 0
    4326:	30 93 45 03 	sts	0x0345, r19
    432a:	20 93 44 03 	sts	0x0344, r18
    432e:	c6 0c       	add	r12, r6
    4330:	d7 1c       	adc	r13, r7
    4332:	e8 1c       	adc	r14, r8
    4334:	f9 1c       	adc	r15, r9
    4336:	09 81       	ldd	r16, Y+1	; 0x01
    4338:	1a 81       	ldd	r17, Y+2	; 0x02
    433a:	2b 81       	ldd	r18, Y+3	; 0x03
    433c:	3c 81       	ldd	r19, Y+4	; 0x04
    433e:	b7 01       	movw	r22, r14
    4340:	a6 01       	movw	r20, r12
    4342:	09 95       	icall
    4344:	bf ef       	ldi	r27, 0xFF	; 255
    4346:	b0 93 46 03 	sts	0x0346, r27
    434a:	12 c0       	rjmp	.+36     	; 0x4370 <__scheduleUpdate+0x11e>
    434c:	21 14       	cp	r2, r1
    434e:	31 04       	cpc	r3, r1
    4350:	41 04       	cpc	r4, r1
    4352:	51 04       	cpc	r5, r1
    4354:	49 f0       	breq	.+18     	; 0x4368 <__scheduleUpdate+0x116>
    4356:	89 81       	ldd	r24, Y+1	; 0x01
    4358:	9a 81       	ldd	r25, Y+2	; 0x02
    435a:	ab 81       	ldd	r26, Y+3	; 0x03
    435c:	bc 81       	ldd	r27, Y+4	; 0x04
    435e:	82 15       	cp	r24, r2
    4360:	93 05       	cpc	r25, r3
    4362:	a4 05       	cpc	r26, r4
    4364:	b5 05       	cpc	r27, r5
    4366:	20 f4       	brcc	.+8      	; 0x4370 <__scheduleUpdate+0x11e>
    4368:	29 80       	ldd	r2, Y+1	; 0x01
    436a:	3a 80       	ldd	r3, Y+2	; 0x02
    436c:	4b 80       	ldd	r4, Y+3	; 0x03
    436e:	5c 80       	ldd	r5, Y+4	; 0x04
    4370:	ed 81       	ldd	r30, Y+5	; 0x05
    4372:	fe 81       	ldd	r31, Y+6	; 0x06
    4374:	31 97       	sbiw	r30, 0x01	; 1
    4376:	fe 83       	std	Y+6, r31	; 0x06
    4378:	ed 83       	std	Y+5, r30	; 0x05
    437a:	23 ef       	ldi	r18, 0xF3	; 243
    437c:	3f ef       	ldi	r19, 0xFF	; 255
    437e:	a2 0e       	add	r10, r18
    4380:	b3 1e       	adc	r11, r19
    4382:	8d 81       	ldd	r24, Y+5	; 0x05
    4384:	9e 81       	ldd	r25, Y+6	; 0x06
    4386:	8f 5f       	subi	r24, 0xFF	; 255
    4388:	9f 4f       	sbci	r25, 0xFF	; 255
    438a:	09 f0       	breq	.+2      	; 0x438e <__scheduleUpdate+0x13c>
    438c:	a0 cf       	rjmp	.-192    	; 0x42ce <__scheduleUpdate+0x7c>
    438e:	80 91 46 03 	lds	r24, 0x0346
    4392:	88 23       	and	r24, r24
    4394:	09 f0       	breq	.+2      	; 0x4398 <__scheduleUpdate+0x146>
    4396:	81 cf       	rjmp	.-254    	; 0x429a <__scheduleUpdate+0x48>
    4398:	10 92 47 03 	sts	0x0347, r1
    439c:	80 91 44 03 	lds	r24, 0x0344
    43a0:	90 91 45 03 	lds	r25, 0x0345
    43a4:	18 16       	cp	r1, r24
    43a6:	19 06       	cpc	r1, r25
    43a8:	0c f0       	brlt	.+2      	; 0x43ac <__scheduleUpdate+0x15a>
    43aa:	44 c0       	rjmp	.+136    	; 0x4434 <__scheduleUpdate+0x1e2>
    43ac:	f0 90 41 03 	lds	r15, 0x0341
    43b0:	e0 90 42 03 	lds	r14, 0x0342
    43b4:	ef 2d       	mov	r30, r15
    43b6:	fe 2d       	mov	r31, r14
    43b8:	05 91       	lpm	r16, Z+
    43ba:	14 91       	lpm	r17, Z+
    43bc:	20 91 06 02 	lds	r18, 0x0206
    43c0:	30 91 07 02 	lds	r19, 0x0207
    43c4:	40 e0       	ldi	r20, 0x00	; 0
    43c6:	50 e0       	ldi	r21, 0x00	; 0
    43c8:	c2 01       	movw	r24, r4
    43ca:	b1 01       	movw	r22, r2
    43cc:	0e 94 cd 25 	call	0x4b9a	; 0x4b9a <__mulsi3>
    43d0:	f8 01       	movw	r30, r16
    43d2:	20 81       	ld	r18, Z
    43d4:	31 81       	ldd	r19, Z+1	; 0x01
    43d6:	40 e0       	ldi	r20, 0x00	; 0
    43d8:	50 e0       	ldi	r21, 0x00	; 0
    43da:	0e 94 13 26 	call	0x4c26	; 0x4c26 <__udivmodsi4>
    43de:	59 01       	movw	r10, r18
    43e0:	6a 01       	movw	r12, r20
    43e2:	8f 2d       	mov	r24, r15
    43e4:	9e 2d       	mov	r25, r14
    43e6:	0e 94 22 1a 	call	0x3444	; 0x3444 <timerGetTOP>
    43ea:	7c 01       	movw	r14, r24
    43ec:	00 e0       	ldi	r16, 0x00	; 0
    43ee:	10 e0       	ldi	r17, 0x00	; 0
    43f0:	ae 14       	cp	r10, r14
    43f2:	bf 04       	cpc	r11, r15
    43f4:	c0 06       	cpc	r12, r16
    43f6:	d1 06       	cpc	r13, r17
    43f8:	10 f4       	brcc	.+4      	; 0x43fe <__scheduleUpdate+0x1ac>
    43fa:	86 01       	movw	r16, r12
    43fc:	75 01       	movw	r14, r10
    43fe:	80 91 41 03 	lds	r24, 0x0341
    4402:	90 91 42 03 	lds	r25, 0x0342
    4406:	0e 94 22 1a 	call	0x3444	; 0x3444 <timerGetTOP>
    440a:	8c 01       	movw	r16, r24
    440c:	80 91 41 03 	lds	r24, 0x0341
    4410:	90 91 42 03 	lds	r25, 0x0342
    4414:	0e 94 34 17 	call	0x2e68	; 0x2e68 <timerGetCounter>
    4418:	8e 0d       	add	r24, r14
    441a:	9f 1d       	adc	r25, r15
    441c:	b8 01       	movw	r22, r16
    441e:	0e 94 ec 25 	call	0x4bd8	; 0x4bd8 <__udivmodhi4>
    4422:	ac 01       	movw	r20, r24
    4424:	88 85       	ldd	r24, Y+8	; 0x08
    4426:	99 85       	ldd	r25, Y+9	; 0x09
    4428:	69 e2       	ldi	r22, 0x29	; 41
    442a:	71 e2       	ldi	r23, 0x21	; 33
    442c:	20 e0       	ldi	r18, 0x00	; 0
    442e:	30 e0       	ldi	r19, 0x00	; 0
    4430:	0e 94 9d 1c 	call	0x393a	; 0x393a <compareAttach>
    4434:	ff 81       	ldd	r31, Y+7	; 0x07
    4436:	ff bf       	out	0x3f, r31	; 63
    4438:	29 96       	adiw	r28, 0x09	; 9
    443a:	0f b6       	in	r0, 0x3f	; 63
    443c:	f8 94       	cli
    443e:	de bf       	out	0x3e, r29	; 62
    4440:	0f be       	out	0x3f, r0	; 63
    4442:	cd bf       	out	0x3d, r28	; 61
    4444:	cf 91       	pop	r28
    4446:	df 91       	pop	r29
    4448:	1f 91       	pop	r17
    444a:	0f 91       	pop	r16
    444c:	ff 90       	pop	r15
    444e:	ef 90       	pop	r14
    4450:	df 90       	pop	r13
    4452:	cf 90       	pop	r12
    4454:	bf 90       	pop	r11
    4456:	af 90       	pop	r10
    4458:	9f 90       	pop	r9
    445a:	8f 90       	pop	r8
    445c:	7f 90       	pop	r7
    445e:	6f 90       	pop	r6
    4460:	5f 90       	pop	r5
    4462:	4f 90       	pop	r4
    4464:	3f 90       	pop	r3
    4466:	2f 90       	pop	r2
    4468:	08 95       	ret

0000446a <scheduleJob>:
    446a:	2f 92       	push	r2
    446c:	3f 92       	push	r3
    446e:	4f 92       	push	r4
    4470:	5f 92       	push	r5
    4472:	6f 92       	push	r6
    4474:	7f 92       	push	r7
    4476:	8f 92       	push	r8
    4478:	9f 92       	push	r9
    447a:	af 92       	push	r10
    447c:	bf 92       	push	r11
    447e:	cf 92       	push	r12
    4480:	df 92       	push	r13
    4482:	ef 92       	push	r14
    4484:	ff 92       	push	r15
    4486:	0f 93       	push	r16
    4488:	1f 93       	push	r17
    448a:	df 93       	push	r29
    448c:	cf 93       	push	r28
    448e:	00 d0       	rcall	.+0      	; 0x4490 <scheduleJob+0x26>
    4490:	00 d0       	rcall	.+0      	; 0x4492 <scheduleJob+0x28>
    4492:	cd b7       	in	r28, 0x3d	; 61
    4494:	de b7       	in	r29, 0x3e	; 62
    4496:	1c 01       	movw	r2, r24
    4498:	2b 01       	movw	r4, r22
    449a:	49 01       	movw	r8, r18
    449c:	5a 01       	movw	r10, r20
    449e:	67 01       	movw	r12, r14
    44a0:	78 01       	movw	r14, r16
    44a2:	88 ee       	ldi	r24, 0xE8	; 232
    44a4:	c8 16       	cp	r12, r24
    44a6:	83 e0       	ldi	r24, 0x03	; 3
    44a8:	d8 06       	cpc	r13, r24
    44aa:	80 e0       	ldi	r24, 0x00	; 0
    44ac:	e8 06       	cpc	r14, r24
    44ae:	80 e0       	ldi	r24, 0x00	; 0
    44b0:	f8 06       	cpc	r15, r24
    44b2:	38 f4       	brcc	.+14     	; 0x44c2 <scheduleJob+0x58>
    44b4:	80 91 47 03 	lds	r24, 0x0347
    44b8:	88 23       	and	r24, r24
    44ba:	c1 f1       	breq	.+112    	; 0x452c <scheduleJob+0xc2>
    44bc:	8f ef       	ldi	r24, 0xFF	; 255
    44be:	80 93 46 03 	sts	0x0346, r24
    44c2:	6f b7       	in	r22, 0x3f	; 63
    44c4:	f8 94       	cli
    44c6:	80 91 08 02 	lds	r24, 0x0208
    44ca:	48 2f       	mov	r20, r24
    44cc:	50 e0       	ldi	r21, 0x00	; 0
    44ce:	a0 e0       	ldi	r26, 0x00	; 0
    44d0:	b3 e0       	ldi	r27, 0x03	; 3
    44d2:	20 e0       	ldi	r18, 0x00	; 0
    44d4:	30 e0       	ldi	r19, 0x00	; 0
    44d6:	20 c0       	rjmp	.+64     	; 0x4518 <scheduleJob+0xae>
    44d8:	fd 01       	movw	r30, r26
    44da:	8c 91       	ld	r24, X
    44dc:	1d 96       	adiw	r26, 0x0d	; 13
    44de:	88 23       	and	r24, r24
    44e0:	c9 f4       	brne	.+50     	; 0x4514 <scheduleJob+0xaa>
    44e2:	8f ef       	ldi	r24, 0xFF	; 255
    44e4:	80 83       	st	Z, r24
    44e6:	32 82       	std	Z+2, r3	; 0x02
    44e8:	21 82       	std	Z+1, r2	; 0x01
    44ea:	54 82       	std	Z+4, r5	; 0x04
    44ec:	43 82       	std	Z+3, r4	; 0x03
    44ee:	81 86       	std	Z+9, r8	; 0x09
    44f0:	92 86       	std	Z+10, r9	; 0x0a
    44f2:	a3 86       	std	Z+11, r10	; 0x0b
    44f4:	b4 86       	std	Z+12, r11	; 0x0c
    44f6:	c5 82       	std	Z+5, r12	; 0x05
    44f8:	d6 82       	std	Z+6, r13	; 0x06
    44fa:	e7 82       	std	Z+7, r14	; 0x07
    44fc:	f0 86       	std	Z+8, r15	; 0x08
    44fe:	80 91 44 03 	lds	r24, 0x0344
    4502:	90 91 45 03 	lds	r25, 0x0345
    4506:	01 96       	adiw	r24, 0x01	; 1
    4508:	90 93 45 03 	sts	0x0345, r25
    450c:	80 93 44 03 	sts	0x0344, r24
    4510:	8f ef       	ldi	r24, 0xFF	; 255
    4512:	06 c0       	rjmp	.+12     	; 0x4520 <scheduleJob+0xb6>
    4514:	2f 5f       	subi	r18, 0xFF	; 255
    4516:	3f 4f       	sbci	r19, 0xFF	; 255
    4518:	24 17       	cp	r18, r20
    451a:	35 07       	cpc	r19, r21
    451c:	ec f2       	brlt	.-70     	; 0x44d8 <scheduleJob+0x6e>
    451e:	80 e0       	ldi	r24, 0x00	; 0
    4520:	6f bf       	out	0x3f, r22	; 63
    4522:	88 23       	and	r24, r24
    4524:	59 f5       	brne	.+86     	; 0x457c <scheduleJob+0x112>
    4526:	8f ef       	ldi	r24, 0xFF	; 255
    4528:	0e 94 30 19 	call	0x3260	; 0x3260 <setError>
    452c:	3e 01       	movw	r6, r28
    452e:	08 94       	sec
    4530:	61 1c       	adc	r6, r1
    4532:	71 1c       	adc	r7, r1
    4534:	c5 01       	movw	r24, r10
    4536:	b4 01       	movw	r22, r8
    4538:	a7 01       	movw	r20, r14
    453a:	96 01       	movw	r18, r12
    453c:	83 01       	movw	r16, r6
    453e:	0e 94 35 1e 	call	0x3c6a	; 0x3c6a <clockHasElapsedGetOverflow>
    4542:	88 23       	and	r24, r24
    4544:	b9 f3       	breq	.-18     	; 0x4534 <scheduleJob+0xca>
    4546:	c8 0c       	add	r12, r8
    4548:	d9 1c       	adc	r13, r9
    454a:	ea 1c       	adc	r14, r10
    454c:	fb 1c       	adc	r15, r11
    454e:	09 81       	ldd	r16, Y+1	; 0x01
    4550:	1a 81       	ldd	r17, Y+2	; 0x02
    4552:	2b 81       	ldd	r18, Y+3	; 0x03
    4554:	3c 81       	ldd	r19, Y+4	; 0x04
    4556:	c2 01       	movw	r24, r4
    4558:	b7 01       	movw	r22, r14
    455a:	a6 01       	movw	r20, r12
    455c:	f1 01       	movw	r30, r2
    455e:	09 95       	icall
    4560:	11 c0       	rjmp	.+34     	; 0x4584 <scheduleJob+0x11a>
    4562:	e0 91 41 03 	lds	r30, 0x0341
    4566:	f0 91 42 03 	lds	r31, 0x0342
    456a:	77 96       	adiw	r30, 0x17	; 23
    456c:	85 91       	lpm	r24, Z+
    456e:	94 91       	lpm	r25, Z+
    4570:	40 96       	adiw	r24, 0x10	; 16
    4572:	60 e0       	ldi	r22, 0x00	; 0
    4574:	70 e0       	ldi	r23, 0x00	; 0
    4576:	0e 94 29 21 	call	0x4252	; 0x4252 <__scheduleUpdate>
    457a:	04 c0       	rjmp	.+8      	; 0x4584 <scheduleJob+0x11a>
    457c:	80 91 47 03 	lds	r24, 0x0347
    4580:	88 23       	and	r24, r24
    4582:	79 f3       	breq	.-34     	; 0x4562 <scheduleJob+0xf8>
    4584:	0f 90       	pop	r0
    4586:	0f 90       	pop	r0
    4588:	0f 90       	pop	r0
    458a:	0f 90       	pop	r0
    458c:	cf 91       	pop	r28
    458e:	df 91       	pop	r29
    4590:	1f 91       	pop	r17
    4592:	0f 91       	pop	r16
    4594:	ff 90       	pop	r15
    4596:	ef 90       	pop	r14
    4598:	df 90       	pop	r13
    459a:	cf 90       	pop	r12
    459c:	bf 90       	pop	r11
    459e:	af 90       	pop	r10
    45a0:	9f 90       	pop	r9
    45a2:	8f 90       	pop	r8
    45a4:	7f 90       	pop	r7
    45a6:	6f 90       	pop	r6
    45a8:	5f 90       	pop	r5
    45aa:	4f 90       	pop	r4
    45ac:	3f 90       	pop	r3
    45ae:	2f 90       	pop	r2
    45b0:	08 95       	ret

000045b2 <exit>:
    45b2:	f8 94       	cli
    45b4:	0c 94 56 26 	jmp	0x4cac	; 0x4cac <_exit>

000045b8 <__subsf3>:
    45b8:	50 58       	subi	r21, 0x80	; 128

000045ba <__addsf3>:
    45ba:	bb 27       	eor	r27, r27
    45bc:	aa 27       	eor	r26, r26
    45be:	0e d0       	rcall	.+28     	; 0x45dc <__addsf3x>
    45c0:	e3 c1       	rjmp	.+966    	; 0x4988 <__fp_round>
    45c2:	d4 d1       	rcall	.+936    	; 0x496c <__fp_pscA>
    45c4:	30 f0       	brcs	.+12     	; 0x45d2 <__addsf3+0x18>
    45c6:	d9 d1       	rcall	.+946    	; 0x497a <__fp_pscB>
    45c8:	20 f0       	brcs	.+8      	; 0x45d2 <__addsf3+0x18>
    45ca:	31 f4       	brne	.+12     	; 0x45d8 <__addsf3+0x1e>
    45cc:	9f 3f       	cpi	r25, 0xFF	; 255
    45ce:	11 f4       	brne	.+4      	; 0x45d4 <__addsf3+0x1a>
    45d0:	1e f4       	brtc	.+6      	; 0x45d8 <__addsf3+0x1e>
    45d2:	93 c1       	rjmp	.+806    	; 0x48fa <__fp_nan>
    45d4:	0e f4       	brtc	.+2      	; 0x45d8 <__addsf3+0x1e>
    45d6:	e0 95       	com	r30
    45d8:	e7 fb       	bst	r30, 7
    45da:	89 c1       	rjmp	.+786    	; 0x48ee <__fp_inf>

000045dc <__addsf3x>:
    45dc:	e9 2f       	mov	r30, r25
    45de:	e5 d1       	rcall	.+970    	; 0x49aa <__fp_split3>
    45e0:	80 f3       	brcs	.-32     	; 0x45c2 <__addsf3+0x8>
    45e2:	ba 17       	cp	r27, r26
    45e4:	62 07       	cpc	r22, r18
    45e6:	73 07       	cpc	r23, r19
    45e8:	84 07       	cpc	r24, r20
    45ea:	95 07       	cpc	r25, r21
    45ec:	18 f0       	brcs	.+6      	; 0x45f4 <__addsf3x+0x18>
    45ee:	71 f4       	brne	.+28     	; 0x460c <__addsf3x+0x30>
    45f0:	9e f5       	brtc	.+102    	; 0x4658 <__addsf3x+0x7c>
    45f2:	fd c1       	rjmp	.+1018   	; 0x49ee <__fp_zero>
    45f4:	0e f4       	brtc	.+2      	; 0x45f8 <__addsf3x+0x1c>
    45f6:	e0 95       	com	r30
    45f8:	0b 2e       	mov	r0, r27
    45fa:	ba 2f       	mov	r27, r26
    45fc:	a0 2d       	mov	r26, r0
    45fe:	0b 01       	movw	r0, r22
    4600:	b9 01       	movw	r22, r18
    4602:	90 01       	movw	r18, r0
    4604:	0c 01       	movw	r0, r24
    4606:	ca 01       	movw	r24, r20
    4608:	a0 01       	movw	r20, r0
    460a:	11 24       	eor	r1, r1
    460c:	ff 27       	eor	r31, r31
    460e:	59 1b       	sub	r21, r25
    4610:	99 f0       	breq	.+38     	; 0x4638 <__addsf3x+0x5c>
    4612:	59 3f       	cpi	r21, 0xF9	; 249
    4614:	50 f4       	brcc	.+20     	; 0x462a <__addsf3x+0x4e>
    4616:	50 3e       	cpi	r21, 0xE0	; 224
    4618:	68 f1       	brcs	.+90     	; 0x4674 <__addsf3x+0x98>
    461a:	1a 16       	cp	r1, r26
    461c:	f0 40       	sbci	r31, 0x00	; 0
    461e:	a2 2f       	mov	r26, r18
    4620:	23 2f       	mov	r18, r19
    4622:	34 2f       	mov	r19, r20
    4624:	44 27       	eor	r20, r20
    4626:	58 5f       	subi	r21, 0xF8	; 248
    4628:	f3 cf       	rjmp	.-26     	; 0x4610 <__addsf3x+0x34>
    462a:	46 95       	lsr	r20
    462c:	37 95       	ror	r19
    462e:	27 95       	ror	r18
    4630:	a7 95       	ror	r26
    4632:	f0 40       	sbci	r31, 0x00	; 0
    4634:	53 95       	inc	r21
    4636:	c9 f7       	brne	.-14     	; 0x462a <__addsf3x+0x4e>
    4638:	7e f4       	brtc	.+30     	; 0x4658 <__addsf3x+0x7c>
    463a:	1f 16       	cp	r1, r31
    463c:	ba 0b       	sbc	r27, r26
    463e:	62 0b       	sbc	r22, r18
    4640:	73 0b       	sbc	r23, r19
    4642:	84 0b       	sbc	r24, r20
    4644:	ba f0       	brmi	.+46     	; 0x4674 <__addsf3x+0x98>
    4646:	91 50       	subi	r25, 0x01	; 1
    4648:	a1 f0       	breq	.+40     	; 0x4672 <__addsf3x+0x96>
    464a:	ff 0f       	add	r31, r31
    464c:	bb 1f       	adc	r27, r27
    464e:	66 1f       	adc	r22, r22
    4650:	77 1f       	adc	r23, r23
    4652:	88 1f       	adc	r24, r24
    4654:	c2 f7       	brpl	.-16     	; 0x4646 <__addsf3x+0x6a>
    4656:	0e c0       	rjmp	.+28     	; 0x4674 <__addsf3x+0x98>
    4658:	ba 0f       	add	r27, r26
    465a:	62 1f       	adc	r22, r18
    465c:	73 1f       	adc	r23, r19
    465e:	84 1f       	adc	r24, r20
    4660:	48 f4       	brcc	.+18     	; 0x4674 <__addsf3x+0x98>
    4662:	87 95       	ror	r24
    4664:	77 95       	ror	r23
    4666:	67 95       	ror	r22
    4668:	b7 95       	ror	r27
    466a:	f7 95       	ror	r31
    466c:	9e 3f       	cpi	r25, 0xFE	; 254
    466e:	08 f0       	brcs	.+2      	; 0x4672 <__addsf3x+0x96>
    4670:	b3 cf       	rjmp	.-154    	; 0x45d8 <__addsf3+0x1e>
    4672:	93 95       	inc	r25
    4674:	88 0f       	add	r24, r24
    4676:	08 f0       	brcs	.+2      	; 0x467a <__addsf3x+0x9e>
    4678:	99 27       	eor	r25, r25
    467a:	ee 0f       	add	r30, r30
    467c:	97 95       	ror	r25
    467e:	87 95       	ror	r24
    4680:	08 95       	ret

00004682 <asin>:
    4682:	9f 93       	push	r25
    4684:	9f 77       	andi	r25, 0x7F	; 127
    4686:	ee e3       	ldi	r30, 0x3E	; 62
    4688:	89 37       	cpi	r24, 0x79	; 121
    468a:	9e 07       	cpc	r25, r30
    468c:	20 f4       	brcc	.+8      	; 0x4696 <asin+0x14>
    468e:	e4 ee       	ldi	r30, 0xE4	; 228
    4690:	f0 e0       	ldi	r31, 0x00	; 0
    4692:	5b d1       	rcall	.+694    	; 0x494a <__fp_powsodd>
    4694:	09 c0       	rjmp	.+18     	; 0x46a8 <asin+0x26>
    4696:	ec d0       	rcall	.+472    	; 0x4870 <__fp_arccos>
    4698:	90 58       	subi	r25, 0x80	; 128
    469a:	a2 ea       	ldi	r26, 0xA2	; 162
    469c:	2a ed       	ldi	r18, 0xDA	; 218
    469e:	3f e0       	ldi	r19, 0x0F	; 15
    46a0:	49 ec       	ldi	r20, 0xC9	; 201
    46a2:	5f e3       	ldi	r21, 0x3F	; 63
    46a4:	9b df       	rcall	.-202    	; 0x45dc <__addsf3x>
    46a6:	70 d1       	rcall	.+736    	; 0x4988 <__fp_round>
    46a8:	0f 90       	pop	r0
    46aa:	07 fc       	sbrc	r0, 7
    46ac:	90 58       	subi	r25, 0x80	; 128
    46ae:	08 95       	ret

000046b0 <__cmpsf2>:
    46b0:	fa d0       	rcall	.+500    	; 0x48a6 <__fp_cmp>
    46b2:	08 f4       	brcc	.+2      	; 0x46b6 <__cmpsf2+0x6>
    46b4:	81 e0       	ldi	r24, 0x01	; 1
    46b6:	08 95       	ret

000046b8 <__divsf3>:
    46b8:	0c d0       	rcall	.+24     	; 0x46d2 <__divsf3x>
    46ba:	66 c1       	rjmp	.+716    	; 0x4988 <__fp_round>
    46bc:	5e d1       	rcall	.+700    	; 0x497a <__fp_pscB>
    46be:	40 f0       	brcs	.+16     	; 0x46d0 <__divsf3+0x18>
    46c0:	55 d1       	rcall	.+682    	; 0x496c <__fp_pscA>
    46c2:	30 f0       	brcs	.+12     	; 0x46d0 <__divsf3+0x18>
    46c4:	21 f4       	brne	.+8      	; 0x46ce <__divsf3+0x16>
    46c6:	5f 3f       	cpi	r21, 0xFF	; 255
    46c8:	19 f0       	breq	.+6      	; 0x46d0 <__divsf3+0x18>
    46ca:	11 c1       	rjmp	.+546    	; 0x48ee <__fp_inf>
    46cc:	51 11       	cpse	r21, r1
    46ce:	90 c1       	rjmp	.+800    	; 0x49f0 <__fp_szero>
    46d0:	14 c1       	rjmp	.+552    	; 0x48fa <__fp_nan>

000046d2 <__divsf3x>:
    46d2:	6b d1       	rcall	.+726    	; 0x49aa <__fp_split3>
    46d4:	98 f3       	brcs	.-26     	; 0x46bc <__divsf3+0x4>

000046d6 <__divsf3_pse>:
    46d6:	99 23       	and	r25, r25
    46d8:	c9 f3       	breq	.-14     	; 0x46cc <__divsf3+0x14>
    46da:	55 23       	and	r21, r21
    46dc:	b1 f3       	breq	.-20     	; 0x46ca <__divsf3+0x12>
    46de:	95 1b       	sub	r25, r21
    46e0:	55 0b       	sbc	r21, r21
    46e2:	bb 27       	eor	r27, r27
    46e4:	aa 27       	eor	r26, r26
    46e6:	62 17       	cp	r22, r18
    46e8:	73 07       	cpc	r23, r19
    46ea:	84 07       	cpc	r24, r20
    46ec:	38 f0       	brcs	.+14     	; 0x46fc <__divsf3_pse+0x26>
    46ee:	9f 5f       	subi	r25, 0xFF	; 255
    46f0:	5f 4f       	sbci	r21, 0xFF	; 255
    46f2:	22 0f       	add	r18, r18
    46f4:	33 1f       	adc	r19, r19
    46f6:	44 1f       	adc	r20, r20
    46f8:	aa 1f       	adc	r26, r26
    46fa:	a9 f3       	breq	.-22     	; 0x46e6 <__divsf3_pse+0x10>
    46fc:	33 d0       	rcall	.+102    	; 0x4764 <__divsf3_pse+0x8e>
    46fe:	0e 2e       	mov	r0, r30
    4700:	3a f0       	brmi	.+14     	; 0x4710 <__divsf3_pse+0x3a>
    4702:	e0 e8       	ldi	r30, 0x80	; 128
    4704:	30 d0       	rcall	.+96     	; 0x4766 <__divsf3_pse+0x90>
    4706:	91 50       	subi	r25, 0x01	; 1
    4708:	50 40       	sbci	r21, 0x00	; 0
    470a:	e6 95       	lsr	r30
    470c:	00 1c       	adc	r0, r0
    470e:	ca f7       	brpl	.-14     	; 0x4702 <__divsf3_pse+0x2c>
    4710:	29 d0       	rcall	.+82     	; 0x4764 <__divsf3_pse+0x8e>
    4712:	fe 2f       	mov	r31, r30
    4714:	27 d0       	rcall	.+78     	; 0x4764 <__divsf3_pse+0x8e>
    4716:	66 0f       	add	r22, r22
    4718:	77 1f       	adc	r23, r23
    471a:	88 1f       	adc	r24, r24
    471c:	bb 1f       	adc	r27, r27
    471e:	26 17       	cp	r18, r22
    4720:	37 07       	cpc	r19, r23
    4722:	48 07       	cpc	r20, r24
    4724:	ab 07       	cpc	r26, r27
    4726:	b0 e8       	ldi	r27, 0x80	; 128
    4728:	09 f0       	breq	.+2      	; 0x472c <__divsf3_pse+0x56>
    472a:	bb 0b       	sbc	r27, r27
    472c:	80 2d       	mov	r24, r0
    472e:	bf 01       	movw	r22, r30
    4730:	ff 27       	eor	r31, r31
    4732:	93 58       	subi	r25, 0x83	; 131
    4734:	5f 4f       	sbci	r21, 0xFF	; 255
    4736:	2a f0       	brmi	.+10     	; 0x4742 <__divsf3_pse+0x6c>
    4738:	9e 3f       	cpi	r25, 0xFE	; 254
    473a:	51 05       	cpc	r21, r1
    473c:	68 f0       	brcs	.+26     	; 0x4758 <__divsf3_pse+0x82>
    473e:	d7 c0       	rjmp	.+430    	; 0x48ee <__fp_inf>
    4740:	57 c1       	rjmp	.+686    	; 0x49f0 <__fp_szero>
    4742:	5f 3f       	cpi	r21, 0xFF	; 255
    4744:	ec f3       	brlt	.-6      	; 0x4740 <__divsf3_pse+0x6a>
    4746:	98 3e       	cpi	r25, 0xE8	; 232
    4748:	dc f3       	brlt	.-10     	; 0x4740 <__divsf3_pse+0x6a>
    474a:	86 95       	lsr	r24
    474c:	77 95       	ror	r23
    474e:	67 95       	ror	r22
    4750:	b7 95       	ror	r27
    4752:	f7 95       	ror	r31
    4754:	9f 5f       	subi	r25, 0xFF	; 255
    4756:	c9 f7       	brne	.-14     	; 0x474a <__divsf3_pse+0x74>
    4758:	88 0f       	add	r24, r24
    475a:	91 1d       	adc	r25, r1
    475c:	96 95       	lsr	r25
    475e:	87 95       	ror	r24
    4760:	97 f9       	bld	r25, 7
    4762:	08 95       	ret
    4764:	e1 e0       	ldi	r30, 0x01	; 1
    4766:	66 0f       	add	r22, r22
    4768:	77 1f       	adc	r23, r23
    476a:	88 1f       	adc	r24, r24
    476c:	bb 1f       	adc	r27, r27
    476e:	62 17       	cp	r22, r18
    4770:	73 07       	cpc	r23, r19
    4772:	84 07       	cpc	r24, r20
    4774:	ba 07       	cpc	r27, r26
    4776:	20 f0       	brcs	.+8      	; 0x4780 <__divsf3_pse+0xaa>
    4778:	62 1b       	sub	r22, r18
    477a:	73 0b       	sbc	r23, r19
    477c:	84 0b       	sbc	r24, r20
    477e:	ba 0b       	sbc	r27, r26
    4780:	ee 1f       	adc	r30, r30
    4782:	88 f7       	brcc	.-30     	; 0x4766 <__divsf3_pse+0x90>
    4784:	e0 95       	com	r30
    4786:	08 95       	ret

00004788 <__fixsfsi>:
    4788:	04 d0       	rcall	.+8      	; 0x4792 <__fixunssfsi>
    478a:	68 94       	set
    478c:	b1 11       	cpse	r27, r1
    478e:	30 c1       	rjmp	.+608    	; 0x49f0 <__fp_szero>
    4790:	08 95       	ret

00004792 <__fixunssfsi>:
    4792:	13 d1       	rcall	.+550    	; 0x49ba <__fp_splitA>
    4794:	88 f0       	brcs	.+34     	; 0x47b8 <__fixunssfsi+0x26>
    4796:	9f 57       	subi	r25, 0x7F	; 127
    4798:	90 f0       	brcs	.+36     	; 0x47be <__fixunssfsi+0x2c>
    479a:	b9 2f       	mov	r27, r25
    479c:	99 27       	eor	r25, r25
    479e:	b7 51       	subi	r27, 0x17	; 23
    47a0:	a0 f0       	brcs	.+40     	; 0x47ca <__fixunssfsi+0x38>
    47a2:	d1 f0       	breq	.+52     	; 0x47d8 <__fixunssfsi+0x46>
    47a4:	66 0f       	add	r22, r22
    47a6:	77 1f       	adc	r23, r23
    47a8:	88 1f       	adc	r24, r24
    47aa:	99 1f       	adc	r25, r25
    47ac:	1a f0       	brmi	.+6      	; 0x47b4 <__fixunssfsi+0x22>
    47ae:	ba 95       	dec	r27
    47b0:	c9 f7       	brne	.-14     	; 0x47a4 <__fixunssfsi+0x12>
    47b2:	12 c0       	rjmp	.+36     	; 0x47d8 <__fixunssfsi+0x46>
    47b4:	b1 30       	cpi	r27, 0x01	; 1
    47b6:	81 f0       	breq	.+32     	; 0x47d8 <__fixunssfsi+0x46>
    47b8:	1a d1       	rcall	.+564    	; 0x49ee <__fp_zero>
    47ba:	b1 e0       	ldi	r27, 0x01	; 1
    47bc:	08 95       	ret
    47be:	17 c1       	rjmp	.+558    	; 0x49ee <__fp_zero>
    47c0:	67 2f       	mov	r22, r23
    47c2:	78 2f       	mov	r23, r24
    47c4:	88 27       	eor	r24, r24
    47c6:	b8 5f       	subi	r27, 0xF8	; 248
    47c8:	39 f0       	breq	.+14     	; 0x47d8 <__fixunssfsi+0x46>
    47ca:	b9 3f       	cpi	r27, 0xF9	; 249
    47cc:	cc f3       	brlt	.-14     	; 0x47c0 <__fixunssfsi+0x2e>
    47ce:	86 95       	lsr	r24
    47d0:	77 95       	ror	r23
    47d2:	67 95       	ror	r22
    47d4:	b3 95       	inc	r27
    47d6:	d9 f7       	brne	.-10     	; 0x47ce <__fixunssfsi+0x3c>
    47d8:	3e f4       	brtc	.+14     	; 0x47e8 <__fixunssfsi+0x56>
    47da:	90 95       	com	r25
    47dc:	80 95       	com	r24
    47de:	70 95       	com	r23
    47e0:	61 95       	neg	r22
    47e2:	7f 4f       	sbci	r23, 0xFF	; 255
    47e4:	8f 4f       	sbci	r24, 0xFF	; 255
    47e6:	9f 4f       	sbci	r25, 0xFF	; 255
    47e8:	08 95       	ret

000047ea <__floatunsisf>:
    47ea:	e8 94       	clt
    47ec:	09 c0       	rjmp	.+18     	; 0x4800 <__floatsisf+0x12>

000047ee <__floatsisf>:
    47ee:	97 fb       	bst	r25, 7
    47f0:	3e f4       	brtc	.+14     	; 0x4800 <__floatsisf+0x12>
    47f2:	90 95       	com	r25
    47f4:	80 95       	com	r24
    47f6:	70 95       	com	r23
    47f8:	61 95       	neg	r22
    47fa:	7f 4f       	sbci	r23, 0xFF	; 255
    47fc:	8f 4f       	sbci	r24, 0xFF	; 255
    47fe:	9f 4f       	sbci	r25, 0xFF	; 255
    4800:	99 23       	and	r25, r25
    4802:	a9 f0       	breq	.+42     	; 0x482e <__floatsisf+0x40>
    4804:	f9 2f       	mov	r31, r25
    4806:	96 e9       	ldi	r25, 0x96	; 150
    4808:	bb 27       	eor	r27, r27
    480a:	93 95       	inc	r25
    480c:	f6 95       	lsr	r31
    480e:	87 95       	ror	r24
    4810:	77 95       	ror	r23
    4812:	67 95       	ror	r22
    4814:	b7 95       	ror	r27
    4816:	f1 11       	cpse	r31, r1
    4818:	f8 cf       	rjmp	.-16     	; 0x480a <__floatsisf+0x1c>
    481a:	fa f4       	brpl	.+62     	; 0x485a <__floatsisf+0x6c>
    481c:	bb 0f       	add	r27, r27
    481e:	11 f4       	brne	.+4      	; 0x4824 <__floatsisf+0x36>
    4820:	60 ff       	sbrs	r22, 0
    4822:	1b c0       	rjmp	.+54     	; 0x485a <__floatsisf+0x6c>
    4824:	6f 5f       	subi	r22, 0xFF	; 255
    4826:	7f 4f       	sbci	r23, 0xFF	; 255
    4828:	8f 4f       	sbci	r24, 0xFF	; 255
    482a:	9f 4f       	sbci	r25, 0xFF	; 255
    482c:	16 c0       	rjmp	.+44     	; 0x485a <__floatsisf+0x6c>
    482e:	88 23       	and	r24, r24
    4830:	11 f0       	breq	.+4      	; 0x4836 <__floatsisf+0x48>
    4832:	96 e9       	ldi	r25, 0x96	; 150
    4834:	11 c0       	rjmp	.+34     	; 0x4858 <__floatsisf+0x6a>
    4836:	77 23       	and	r23, r23
    4838:	21 f0       	breq	.+8      	; 0x4842 <__floatsisf+0x54>
    483a:	9e e8       	ldi	r25, 0x8E	; 142
    483c:	87 2f       	mov	r24, r23
    483e:	76 2f       	mov	r23, r22
    4840:	05 c0       	rjmp	.+10     	; 0x484c <__floatsisf+0x5e>
    4842:	66 23       	and	r22, r22
    4844:	71 f0       	breq	.+28     	; 0x4862 <__floatsisf+0x74>
    4846:	96 e8       	ldi	r25, 0x86	; 134
    4848:	86 2f       	mov	r24, r22
    484a:	70 e0       	ldi	r23, 0x00	; 0
    484c:	60 e0       	ldi	r22, 0x00	; 0
    484e:	2a f0       	brmi	.+10     	; 0x485a <__floatsisf+0x6c>
    4850:	9a 95       	dec	r25
    4852:	66 0f       	add	r22, r22
    4854:	77 1f       	adc	r23, r23
    4856:	88 1f       	adc	r24, r24
    4858:	da f7       	brpl	.-10     	; 0x4850 <__floatsisf+0x62>
    485a:	88 0f       	add	r24, r24
    485c:	96 95       	lsr	r25
    485e:	87 95       	ror	r24
    4860:	97 f9       	bld	r25, 7
    4862:	08 95       	ret

00004864 <fma>:
    4864:	db d0       	rcall	.+438    	; 0x4a1c <__mulsf3x>
    4866:	97 01       	movw	r18, r14
    4868:	a8 01       	movw	r20, r16
    486a:	aa 27       	eor	r26, r26
    486c:	b7 de       	rcall	.-658    	; 0x45dc <__addsf3x>
    486e:	8c c0       	rjmp	.+280    	; 0x4988 <__fp_round>

00004870 <__fp_arccos>:
    4870:	df 93       	push	r29
    4872:	cf 93       	push	r28
    4874:	1f 93       	push	r17
    4876:	0f 93       	push	r16
    4878:	8b 01       	movw	r16, r22
    487a:	ec 01       	movw	r28, r24
    487c:	e8 ef       	ldi	r30, 0xF8	; 248
    487e:	f0 e0       	ldi	r31, 0x00	; 0
    4880:	3f d0       	rcall	.+126    	; 0x4900 <__fp_powser>
    4882:	82 d0       	rcall	.+260    	; 0x4988 <__fp_round>
    4884:	98 01       	movw	r18, r16
    4886:	ae 01       	movw	r20, r28
    4888:	8b 01       	movw	r16, r22
    488a:	ec 01       	movw	r28, r24
    488c:	60 e0       	ldi	r22, 0x00	; 0
    488e:	70 e0       	ldi	r23, 0x00	; 0
    4890:	80 e8       	ldi	r24, 0x80	; 128
    4892:	9f e3       	ldi	r25, 0x3F	; 63
    4894:	91 de       	rcall	.-734    	; 0x45b8 <__subsf3>
    4896:	1d d1       	rcall	.+570    	; 0x4ad2 <sqrt>
    4898:	98 01       	movw	r18, r16
    489a:	ae 01       	movw	r20, r28
    489c:	0f 91       	pop	r16
    489e:	1f 91       	pop	r17
    48a0:	cf 91       	pop	r28
    48a2:	df 91       	pop	r29
    48a4:	bb c0       	rjmp	.+374    	; 0x4a1c <__mulsf3x>

000048a6 <__fp_cmp>:
    48a6:	99 0f       	add	r25, r25
    48a8:	00 08       	sbc	r0, r0
    48aa:	55 0f       	add	r21, r21
    48ac:	aa 0b       	sbc	r26, r26
    48ae:	e0 e8       	ldi	r30, 0x80	; 128
    48b0:	fe ef       	ldi	r31, 0xFE	; 254
    48b2:	16 16       	cp	r1, r22
    48b4:	17 06       	cpc	r1, r23
    48b6:	e8 07       	cpc	r30, r24
    48b8:	f9 07       	cpc	r31, r25
    48ba:	c0 f0       	brcs	.+48     	; 0x48ec <__fp_cmp+0x46>
    48bc:	12 16       	cp	r1, r18
    48be:	13 06       	cpc	r1, r19
    48c0:	e4 07       	cpc	r30, r20
    48c2:	f5 07       	cpc	r31, r21
    48c4:	98 f0       	brcs	.+38     	; 0x48ec <__fp_cmp+0x46>
    48c6:	62 1b       	sub	r22, r18
    48c8:	73 0b       	sbc	r23, r19
    48ca:	84 0b       	sbc	r24, r20
    48cc:	95 0b       	sbc	r25, r21
    48ce:	39 f4       	brne	.+14     	; 0x48de <__fp_cmp+0x38>
    48d0:	0a 26       	eor	r0, r26
    48d2:	61 f0       	breq	.+24     	; 0x48ec <__fp_cmp+0x46>
    48d4:	23 2b       	or	r18, r19
    48d6:	24 2b       	or	r18, r20
    48d8:	25 2b       	or	r18, r21
    48da:	21 f4       	brne	.+8      	; 0x48e4 <__fp_cmp+0x3e>
    48dc:	08 95       	ret
    48de:	0a 26       	eor	r0, r26
    48e0:	09 f4       	brne	.+2      	; 0x48e4 <__fp_cmp+0x3e>
    48e2:	a1 40       	sbci	r26, 0x01	; 1
    48e4:	a6 95       	lsr	r26
    48e6:	8f ef       	ldi	r24, 0xFF	; 255
    48e8:	81 1d       	adc	r24, r1
    48ea:	81 1d       	adc	r24, r1
    48ec:	08 95       	ret

000048ee <__fp_inf>:
    48ee:	97 f9       	bld	r25, 7
    48f0:	9f 67       	ori	r25, 0x7F	; 127
    48f2:	80 e8       	ldi	r24, 0x80	; 128
    48f4:	70 e0       	ldi	r23, 0x00	; 0
    48f6:	60 e0       	ldi	r22, 0x00	; 0
    48f8:	08 95       	ret

000048fa <__fp_nan>:
    48fa:	9f ef       	ldi	r25, 0xFF	; 255
    48fc:	80 ec       	ldi	r24, 0xC0	; 192
    48fe:	08 95       	ret

00004900 <__fp_powser>:
    4900:	df 93       	push	r29
    4902:	cf 93       	push	r28
    4904:	1f 93       	push	r17
    4906:	0f 93       	push	r16
    4908:	ff 92       	push	r15
    490a:	ef 92       	push	r14
    490c:	df 92       	push	r13
    490e:	7b 01       	movw	r14, r22
    4910:	8c 01       	movw	r16, r24
    4912:	68 94       	set
    4914:	05 c0       	rjmp	.+10     	; 0x4920 <__fp_powser+0x20>
    4916:	da 2e       	mov	r13, r26
    4918:	ef 01       	movw	r28, r30
    491a:	80 d0       	rcall	.+256    	; 0x4a1c <__mulsf3x>
    491c:	fe 01       	movw	r30, r28
    491e:	e8 94       	clt
    4920:	a5 91       	lpm	r26, Z+
    4922:	25 91       	lpm	r18, Z+
    4924:	35 91       	lpm	r19, Z+
    4926:	45 91       	lpm	r20, Z+
    4928:	55 91       	lpm	r21, Z+
    492a:	ae f3       	brts	.-22     	; 0x4916 <__fp_powser+0x16>
    492c:	ef 01       	movw	r28, r30
    492e:	56 de       	rcall	.-852    	; 0x45dc <__addsf3x>
    4930:	fe 01       	movw	r30, r28
    4932:	97 01       	movw	r18, r14
    4934:	a8 01       	movw	r20, r16
    4936:	da 94       	dec	r13
    4938:	79 f7       	brne	.-34     	; 0x4918 <__fp_powser+0x18>
    493a:	df 90       	pop	r13
    493c:	ef 90       	pop	r14
    493e:	ff 90       	pop	r15
    4940:	0f 91       	pop	r16
    4942:	1f 91       	pop	r17
    4944:	cf 91       	pop	r28
    4946:	df 91       	pop	r29
    4948:	08 95       	ret

0000494a <__fp_powsodd>:
    494a:	9f 93       	push	r25
    494c:	8f 93       	push	r24
    494e:	7f 93       	push	r23
    4950:	6f 93       	push	r22
    4952:	ff 93       	push	r31
    4954:	ef 93       	push	r30
    4956:	9b 01       	movw	r18, r22
    4958:	ac 01       	movw	r20, r24
    495a:	54 d0       	rcall	.+168    	; 0x4a04 <__mulsf3>
    495c:	ef 91       	pop	r30
    495e:	ff 91       	pop	r31
    4960:	cf df       	rcall	.-98     	; 0x4900 <__fp_powser>
    4962:	2f 91       	pop	r18
    4964:	3f 91       	pop	r19
    4966:	4f 91       	pop	r20
    4968:	5f 91       	pop	r21
    496a:	4c c0       	rjmp	.+152    	; 0x4a04 <__mulsf3>

0000496c <__fp_pscA>:
    496c:	00 24       	eor	r0, r0
    496e:	0a 94       	dec	r0
    4970:	16 16       	cp	r1, r22
    4972:	17 06       	cpc	r1, r23
    4974:	18 06       	cpc	r1, r24
    4976:	09 06       	cpc	r0, r25
    4978:	08 95       	ret

0000497a <__fp_pscB>:
    497a:	00 24       	eor	r0, r0
    497c:	0a 94       	dec	r0
    497e:	12 16       	cp	r1, r18
    4980:	13 06       	cpc	r1, r19
    4982:	14 06       	cpc	r1, r20
    4984:	05 06       	cpc	r0, r21
    4986:	08 95       	ret

00004988 <__fp_round>:
    4988:	09 2e       	mov	r0, r25
    498a:	03 94       	inc	r0
    498c:	00 0c       	add	r0, r0
    498e:	11 f4       	brne	.+4      	; 0x4994 <__fp_round+0xc>
    4990:	88 23       	and	r24, r24
    4992:	52 f0       	brmi	.+20     	; 0x49a8 <__fp_round+0x20>
    4994:	bb 0f       	add	r27, r27
    4996:	40 f4       	brcc	.+16     	; 0x49a8 <__fp_round+0x20>
    4998:	bf 2b       	or	r27, r31
    499a:	11 f4       	brne	.+4      	; 0x49a0 <__fp_round+0x18>
    499c:	60 ff       	sbrs	r22, 0
    499e:	04 c0       	rjmp	.+8      	; 0x49a8 <__fp_round+0x20>
    49a0:	6f 5f       	subi	r22, 0xFF	; 255
    49a2:	7f 4f       	sbci	r23, 0xFF	; 255
    49a4:	8f 4f       	sbci	r24, 0xFF	; 255
    49a6:	9f 4f       	sbci	r25, 0xFF	; 255
    49a8:	08 95       	ret

000049aa <__fp_split3>:
    49aa:	57 fd       	sbrc	r21, 7
    49ac:	90 58       	subi	r25, 0x80	; 128
    49ae:	44 0f       	add	r20, r20
    49b0:	55 1f       	adc	r21, r21
    49b2:	59 f0       	breq	.+22     	; 0x49ca <__fp_splitA+0x10>
    49b4:	5f 3f       	cpi	r21, 0xFF	; 255
    49b6:	71 f0       	breq	.+28     	; 0x49d4 <__fp_splitA+0x1a>
    49b8:	47 95       	ror	r20

000049ba <__fp_splitA>:
    49ba:	88 0f       	add	r24, r24
    49bc:	97 fb       	bst	r25, 7
    49be:	99 1f       	adc	r25, r25
    49c0:	61 f0       	breq	.+24     	; 0x49da <__fp_splitA+0x20>
    49c2:	9f 3f       	cpi	r25, 0xFF	; 255
    49c4:	79 f0       	breq	.+30     	; 0x49e4 <__fp_splitA+0x2a>
    49c6:	87 95       	ror	r24
    49c8:	08 95       	ret
    49ca:	12 16       	cp	r1, r18
    49cc:	13 06       	cpc	r1, r19
    49ce:	14 06       	cpc	r1, r20
    49d0:	55 1f       	adc	r21, r21
    49d2:	f2 cf       	rjmp	.-28     	; 0x49b8 <__fp_split3+0xe>
    49d4:	46 95       	lsr	r20
    49d6:	f1 df       	rcall	.-30     	; 0x49ba <__fp_splitA>
    49d8:	08 c0       	rjmp	.+16     	; 0x49ea <__fp_splitA+0x30>
    49da:	16 16       	cp	r1, r22
    49dc:	17 06       	cpc	r1, r23
    49de:	18 06       	cpc	r1, r24
    49e0:	99 1f       	adc	r25, r25
    49e2:	f1 cf       	rjmp	.-30     	; 0x49c6 <__fp_splitA+0xc>
    49e4:	86 95       	lsr	r24
    49e6:	71 05       	cpc	r23, r1
    49e8:	61 05       	cpc	r22, r1
    49ea:	08 94       	sec
    49ec:	08 95       	ret

000049ee <__fp_zero>:
    49ee:	e8 94       	clt

000049f0 <__fp_szero>:
    49f0:	bb 27       	eor	r27, r27
    49f2:	66 27       	eor	r22, r22
    49f4:	77 27       	eor	r23, r23
    49f6:	cb 01       	movw	r24, r22
    49f8:	97 f9       	bld	r25, 7
    49fa:	08 95       	ret

000049fc <__gesf2>:
    49fc:	54 df       	rcall	.-344    	; 0x48a6 <__fp_cmp>
    49fe:	08 f4       	brcc	.+2      	; 0x4a02 <__gesf2+0x6>
    4a00:	8f ef       	ldi	r24, 0xFF	; 255
    4a02:	08 95       	ret

00004a04 <__mulsf3>:
    4a04:	0b d0       	rcall	.+22     	; 0x4a1c <__mulsf3x>
    4a06:	c0 cf       	rjmp	.-128    	; 0x4988 <__fp_round>
    4a08:	b1 df       	rcall	.-158    	; 0x496c <__fp_pscA>
    4a0a:	28 f0       	brcs	.+10     	; 0x4a16 <__mulsf3+0x12>
    4a0c:	b6 df       	rcall	.-148    	; 0x497a <__fp_pscB>
    4a0e:	18 f0       	brcs	.+6      	; 0x4a16 <__mulsf3+0x12>
    4a10:	95 23       	and	r25, r21
    4a12:	09 f0       	breq	.+2      	; 0x4a16 <__mulsf3+0x12>
    4a14:	6c cf       	rjmp	.-296    	; 0x48ee <__fp_inf>
    4a16:	71 cf       	rjmp	.-286    	; 0x48fa <__fp_nan>
    4a18:	11 24       	eor	r1, r1
    4a1a:	ea cf       	rjmp	.-44     	; 0x49f0 <__fp_szero>

00004a1c <__mulsf3x>:
    4a1c:	c6 df       	rcall	.-116    	; 0x49aa <__fp_split3>
    4a1e:	a0 f3       	brcs	.-24     	; 0x4a08 <__mulsf3+0x4>

00004a20 <__mulsf3_pse>:
    4a20:	95 9f       	mul	r25, r21
    4a22:	d1 f3       	breq	.-12     	; 0x4a18 <__mulsf3+0x14>
    4a24:	95 0f       	add	r25, r21
    4a26:	50 e0       	ldi	r21, 0x00	; 0
    4a28:	55 1f       	adc	r21, r21
    4a2a:	62 9f       	mul	r22, r18
    4a2c:	f0 01       	movw	r30, r0
    4a2e:	72 9f       	mul	r23, r18
    4a30:	bb 27       	eor	r27, r27
    4a32:	f0 0d       	add	r31, r0
    4a34:	b1 1d       	adc	r27, r1
    4a36:	63 9f       	mul	r22, r19
    4a38:	aa 27       	eor	r26, r26
    4a3a:	f0 0d       	add	r31, r0
    4a3c:	b1 1d       	adc	r27, r1
    4a3e:	aa 1f       	adc	r26, r26
    4a40:	64 9f       	mul	r22, r20
    4a42:	66 27       	eor	r22, r22
    4a44:	b0 0d       	add	r27, r0
    4a46:	a1 1d       	adc	r26, r1
    4a48:	66 1f       	adc	r22, r22
    4a4a:	82 9f       	mul	r24, r18
    4a4c:	22 27       	eor	r18, r18
    4a4e:	b0 0d       	add	r27, r0
    4a50:	a1 1d       	adc	r26, r1
    4a52:	62 1f       	adc	r22, r18
    4a54:	73 9f       	mul	r23, r19
    4a56:	b0 0d       	add	r27, r0
    4a58:	a1 1d       	adc	r26, r1
    4a5a:	62 1f       	adc	r22, r18
    4a5c:	83 9f       	mul	r24, r19
    4a5e:	a0 0d       	add	r26, r0
    4a60:	61 1d       	adc	r22, r1
    4a62:	22 1f       	adc	r18, r18
    4a64:	74 9f       	mul	r23, r20
    4a66:	33 27       	eor	r19, r19
    4a68:	a0 0d       	add	r26, r0
    4a6a:	61 1d       	adc	r22, r1
    4a6c:	23 1f       	adc	r18, r19
    4a6e:	84 9f       	mul	r24, r20
    4a70:	60 0d       	add	r22, r0
    4a72:	21 1d       	adc	r18, r1
    4a74:	82 2f       	mov	r24, r18
    4a76:	76 2f       	mov	r23, r22
    4a78:	6a 2f       	mov	r22, r26
    4a7a:	11 24       	eor	r1, r1
    4a7c:	9f 57       	subi	r25, 0x7F	; 127
    4a7e:	50 40       	sbci	r21, 0x00	; 0
    4a80:	8a f0       	brmi	.+34     	; 0x4aa4 <__mulsf3_pse+0x84>
    4a82:	e1 f0       	breq	.+56     	; 0x4abc <__mulsf3_pse+0x9c>
    4a84:	88 23       	and	r24, r24
    4a86:	4a f0       	brmi	.+18     	; 0x4a9a <__mulsf3_pse+0x7a>
    4a88:	ee 0f       	add	r30, r30
    4a8a:	ff 1f       	adc	r31, r31
    4a8c:	bb 1f       	adc	r27, r27
    4a8e:	66 1f       	adc	r22, r22
    4a90:	77 1f       	adc	r23, r23
    4a92:	88 1f       	adc	r24, r24
    4a94:	91 50       	subi	r25, 0x01	; 1
    4a96:	50 40       	sbci	r21, 0x00	; 0
    4a98:	a9 f7       	brne	.-22     	; 0x4a84 <__mulsf3_pse+0x64>
    4a9a:	9e 3f       	cpi	r25, 0xFE	; 254
    4a9c:	51 05       	cpc	r21, r1
    4a9e:	70 f0       	brcs	.+28     	; 0x4abc <__mulsf3_pse+0x9c>
    4aa0:	26 cf       	rjmp	.-436    	; 0x48ee <__fp_inf>
    4aa2:	a6 cf       	rjmp	.-180    	; 0x49f0 <__fp_szero>
    4aa4:	5f 3f       	cpi	r21, 0xFF	; 255
    4aa6:	ec f3       	brlt	.-6      	; 0x4aa2 <__mulsf3_pse+0x82>
    4aa8:	98 3e       	cpi	r25, 0xE8	; 232
    4aaa:	dc f3       	brlt	.-10     	; 0x4aa2 <__mulsf3_pse+0x82>
    4aac:	86 95       	lsr	r24
    4aae:	77 95       	ror	r23
    4ab0:	67 95       	ror	r22
    4ab2:	b7 95       	ror	r27
    4ab4:	f7 95       	ror	r31
    4ab6:	e7 95       	ror	r30
    4ab8:	9f 5f       	subi	r25, 0xFF	; 255
    4aba:	c1 f7       	brne	.-16     	; 0x4aac <__mulsf3_pse+0x8c>
    4abc:	fe 2b       	or	r31, r30
    4abe:	88 0f       	add	r24, r24
    4ac0:	91 1d       	adc	r25, r1
    4ac2:	96 95       	lsr	r25
    4ac4:	87 95       	ror	r24
    4ac6:	97 f9       	bld	r25, 7
    4ac8:	08 95       	ret
    4aca:	11 f4       	brne	.+4      	; 0x4ad0 <__mulsf3_pse+0xb0>
    4acc:	0e f4       	brtc	.+2      	; 0x4ad0 <__mulsf3_pse+0xb0>
    4ace:	15 cf       	rjmp	.-470    	; 0x48fa <__fp_nan>
    4ad0:	4d c0       	rjmp	.+154    	; 0x4b6c <__fp_mpack>

00004ad2 <sqrt>:
    4ad2:	73 df       	rcall	.-282    	; 0x49ba <__fp_splitA>
    4ad4:	d0 f3       	brcs	.-12     	; 0x4aca <__mulsf3_pse+0xaa>
    4ad6:	99 23       	and	r25, r25
    4ad8:	d9 f3       	breq	.-10     	; 0x4ad0 <__mulsf3_pse+0xb0>
    4ada:	ce f3       	brts	.-14     	; 0x4ace <__mulsf3_pse+0xae>
    4adc:	9f 57       	subi	r25, 0x7F	; 127
    4ade:	55 0b       	sbc	r21, r21
    4ae0:	87 ff       	sbrs	r24, 7
    4ae2:	54 d0       	rcall	.+168    	; 0x4b8c <__fp_norm2>
    4ae4:	56 95       	lsr	r21
    4ae6:	97 95       	ror	r25
    4ae8:	b0 e0       	ldi	r27, 0x00	; 0
    4aea:	20 f4       	brcc	.+8      	; 0x4af4 <sqrt+0x22>
    4aec:	66 0f       	add	r22, r22
    4aee:	77 1f       	adc	r23, r23
    4af0:	88 1f       	adc	r24, r24
    4af2:	bb 1f       	adc	r27, r27
    4af4:	1f 93       	push	r17
    4af6:	0f 93       	push	r16
    4af8:	00 24       	eor	r0, r0
    4afa:	90 01       	movw	r18, r0
    4afc:	a0 01       	movw	r20, r0
    4afe:	80 01       	movw	r16, r0
    4b00:	f0 01       	movw	r30, r0
    4b02:	a0 e8       	ldi	r26, 0x80	; 128
    4b04:	0e 0f       	add	r16, r30
    4b06:	1f 1f       	adc	r17, r31
    4b08:	0a 1e       	adc	r0, r26
    4b0a:	51 1d       	adc	r21, r1
    4b0c:	60 1b       	sub	r22, r16
    4b0e:	71 0b       	sbc	r23, r17
    4b10:	80 09       	sbc	r24, r0
    4b12:	b5 0b       	sbc	r27, r21
    4b14:	48 f4       	brcc	.+18     	; 0x4b28 <sqrt+0x56>
    4b16:	60 0f       	add	r22, r16
    4b18:	71 1f       	adc	r23, r17
    4b1a:	80 1d       	adc	r24, r0
    4b1c:	b5 1f       	adc	r27, r21
    4b1e:	0e 1b       	sub	r16, r30
    4b20:	1f 0b       	sbc	r17, r31
    4b22:	0a 0a       	sbc	r0, r26
    4b24:	51 09       	sbc	r21, r1
    4b26:	07 c0       	rjmp	.+14     	; 0x4b36 <sqrt+0x64>
    4b28:	2e 0f       	add	r18, r30
    4b2a:	3f 1f       	adc	r19, r31
    4b2c:	4a 1f       	adc	r20, r26
    4b2e:	0e 0f       	add	r16, r30
    4b30:	1f 1f       	adc	r17, r31
    4b32:	0a 1e       	adc	r0, r26
    4b34:	51 1d       	adc	r21, r1
    4b36:	66 0f       	add	r22, r22
    4b38:	77 1f       	adc	r23, r23
    4b3a:	88 1f       	adc	r24, r24
    4b3c:	bb 1f       	adc	r27, r27
    4b3e:	a6 95       	lsr	r26
    4b40:	f7 95       	ror	r31
    4b42:	e7 95       	ror	r30
    4b44:	f8 f6       	brcc	.-66     	; 0x4b04 <sqrt+0x32>
    4b46:	06 17       	cp	r16, r22
    4b48:	17 07       	cpc	r17, r23
    4b4a:	08 06       	cpc	r0, r24
    4b4c:	5b 07       	cpc	r21, r27
    4b4e:	21 1d       	adc	r18, r1
    4b50:	31 1d       	adc	r19, r1
    4b52:	41 1d       	adc	r20, r1
    4b54:	0f 91       	pop	r16
    4b56:	1f 91       	pop	r17
    4b58:	b9 01       	movw	r22, r18
    4b5a:	84 2f       	mov	r24, r20
    4b5c:	91 58       	subi	r25, 0x81	; 129
    4b5e:	88 0f       	add	r24, r24
    4b60:	96 95       	lsr	r25
    4b62:	87 95       	ror	r24
    4b64:	08 95       	ret

00004b66 <square>:
    4b66:	9b 01       	movw	r18, r22
    4b68:	ac 01       	movw	r20, r24
    4b6a:	4c cf       	rjmp	.-360    	; 0x4a04 <__mulsf3>

00004b6c <__fp_mpack>:
    4b6c:	9f 3f       	cpi	r25, 0xFF	; 255
    4b6e:	49 f0       	breq	.+18     	; 0x4b82 <__fp_mpack+0x16>
    4b70:	91 50       	subi	r25, 0x01	; 1
    4b72:	28 f4       	brcc	.+10     	; 0x4b7e <__fp_mpack+0x12>
    4b74:	86 95       	lsr	r24
    4b76:	77 95       	ror	r23
    4b78:	67 95       	ror	r22
    4b7a:	b7 95       	ror	r27
    4b7c:	9f 5f       	subi	r25, 0xFF	; 255
    4b7e:	80 38       	cpi	r24, 0x80	; 128
    4b80:	9f 4f       	sbci	r25, 0xFF	; 255
    4b82:	88 0f       	add	r24, r24
    4b84:	96 95       	lsr	r25
    4b86:	87 95       	ror	r24
    4b88:	97 f9       	bld	r25, 7
    4b8a:	08 95       	ret

00004b8c <__fp_norm2>:
    4b8c:	91 50       	subi	r25, 0x01	; 1
    4b8e:	50 40       	sbci	r21, 0x00	; 0
    4b90:	66 0f       	add	r22, r22
    4b92:	77 1f       	adc	r23, r23
    4b94:	88 1f       	adc	r24, r24
    4b96:	d2 f7       	brpl	.-12     	; 0x4b8c <__fp_norm2>
    4b98:	08 95       	ret

00004b9a <__mulsi3>:
    4b9a:	62 9f       	mul	r22, r18
    4b9c:	d0 01       	movw	r26, r0
    4b9e:	73 9f       	mul	r23, r19
    4ba0:	f0 01       	movw	r30, r0
    4ba2:	82 9f       	mul	r24, r18
    4ba4:	e0 0d       	add	r30, r0
    4ba6:	f1 1d       	adc	r31, r1
    4ba8:	64 9f       	mul	r22, r20
    4baa:	e0 0d       	add	r30, r0
    4bac:	f1 1d       	adc	r31, r1
    4bae:	92 9f       	mul	r25, r18
    4bb0:	f0 0d       	add	r31, r0
    4bb2:	83 9f       	mul	r24, r19
    4bb4:	f0 0d       	add	r31, r0
    4bb6:	74 9f       	mul	r23, r20
    4bb8:	f0 0d       	add	r31, r0
    4bba:	65 9f       	mul	r22, r21
    4bbc:	f0 0d       	add	r31, r0
    4bbe:	99 27       	eor	r25, r25
    4bc0:	72 9f       	mul	r23, r18
    4bc2:	b0 0d       	add	r27, r0
    4bc4:	e1 1d       	adc	r30, r1
    4bc6:	f9 1f       	adc	r31, r25
    4bc8:	63 9f       	mul	r22, r19
    4bca:	b0 0d       	add	r27, r0
    4bcc:	e1 1d       	adc	r30, r1
    4bce:	f9 1f       	adc	r31, r25
    4bd0:	bd 01       	movw	r22, r26
    4bd2:	cf 01       	movw	r24, r30
    4bd4:	11 24       	eor	r1, r1
    4bd6:	08 95       	ret

00004bd8 <__udivmodhi4>:
    4bd8:	aa 1b       	sub	r26, r26
    4bda:	bb 1b       	sub	r27, r27
    4bdc:	51 e1       	ldi	r21, 0x11	; 17
    4bde:	07 c0       	rjmp	.+14     	; 0x4bee <__udivmodhi4_ep>

00004be0 <__udivmodhi4_loop>:
    4be0:	aa 1f       	adc	r26, r26
    4be2:	bb 1f       	adc	r27, r27
    4be4:	a6 17       	cp	r26, r22
    4be6:	b7 07       	cpc	r27, r23
    4be8:	10 f0       	brcs	.+4      	; 0x4bee <__udivmodhi4_ep>
    4bea:	a6 1b       	sub	r26, r22
    4bec:	b7 0b       	sbc	r27, r23

00004bee <__udivmodhi4_ep>:
    4bee:	88 1f       	adc	r24, r24
    4bf0:	99 1f       	adc	r25, r25
    4bf2:	5a 95       	dec	r21
    4bf4:	a9 f7       	brne	.-22     	; 0x4be0 <__udivmodhi4_loop>
    4bf6:	80 95       	com	r24
    4bf8:	90 95       	com	r25
    4bfa:	bc 01       	movw	r22, r24
    4bfc:	cd 01       	movw	r24, r26
    4bfe:	08 95       	ret

00004c00 <__divmodhi4>:
    4c00:	97 fb       	bst	r25, 7
    4c02:	09 2e       	mov	r0, r25
    4c04:	07 26       	eor	r0, r23
    4c06:	0a d0       	rcall	.+20     	; 0x4c1c <__divmodhi4_neg1>
    4c08:	77 fd       	sbrc	r23, 7
    4c0a:	04 d0       	rcall	.+8      	; 0x4c14 <__divmodhi4_neg2>
    4c0c:	e5 df       	rcall	.-54     	; 0x4bd8 <__udivmodhi4>
    4c0e:	06 d0       	rcall	.+12     	; 0x4c1c <__divmodhi4_neg1>
    4c10:	00 20       	and	r0, r0
    4c12:	1a f4       	brpl	.+6      	; 0x4c1a <__divmodhi4_exit>

00004c14 <__divmodhi4_neg2>:
    4c14:	70 95       	com	r23
    4c16:	61 95       	neg	r22
    4c18:	7f 4f       	sbci	r23, 0xFF	; 255

00004c1a <__divmodhi4_exit>:
    4c1a:	08 95       	ret

00004c1c <__divmodhi4_neg1>:
    4c1c:	f6 f7       	brtc	.-4      	; 0x4c1a <__divmodhi4_exit>
    4c1e:	90 95       	com	r25
    4c20:	81 95       	neg	r24
    4c22:	9f 4f       	sbci	r25, 0xFF	; 255
    4c24:	08 95       	ret

00004c26 <__udivmodsi4>:
    4c26:	a1 e2       	ldi	r26, 0x21	; 33
    4c28:	1a 2e       	mov	r1, r26
    4c2a:	aa 1b       	sub	r26, r26
    4c2c:	bb 1b       	sub	r27, r27
    4c2e:	fd 01       	movw	r30, r26
    4c30:	0d c0       	rjmp	.+26     	; 0x4c4c <__udivmodsi4_ep>

00004c32 <__udivmodsi4_loop>:
    4c32:	aa 1f       	adc	r26, r26
    4c34:	bb 1f       	adc	r27, r27
    4c36:	ee 1f       	adc	r30, r30
    4c38:	ff 1f       	adc	r31, r31
    4c3a:	a2 17       	cp	r26, r18
    4c3c:	b3 07       	cpc	r27, r19
    4c3e:	e4 07       	cpc	r30, r20
    4c40:	f5 07       	cpc	r31, r21
    4c42:	20 f0       	brcs	.+8      	; 0x4c4c <__udivmodsi4_ep>
    4c44:	a2 1b       	sub	r26, r18
    4c46:	b3 0b       	sbc	r27, r19
    4c48:	e4 0b       	sbc	r30, r20
    4c4a:	f5 0b       	sbc	r31, r21

00004c4c <__udivmodsi4_ep>:
    4c4c:	66 1f       	adc	r22, r22
    4c4e:	77 1f       	adc	r23, r23
    4c50:	88 1f       	adc	r24, r24
    4c52:	99 1f       	adc	r25, r25
    4c54:	1a 94       	dec	r1
    4c56:	69 f7       	brne	.-38     	; 0x4c32 <__udivmodsi4_loop>
    4c58:	60 95       	com	r22
    4c5a:	70 95       	com	r23
    4c5c:	80 95       	com	r24
    4c5e:	90 95       	com	r25
    4c60:	9b 01       	movw	r18, r22
    4c62:	ac 01       	movw	r20, r24
    4c64:	bd 01       	movw	r22, r26
    4c66:	cf 01       	movw	r24, r30
    4c68:	08 95       	ret

00004c6a <__divmodsi4>:
    4c6a:	97 fb       	bst	r25, 7
    4c6c:	09 2e       	mov	r0, r25
    4c6e:	05 26       	eor	r0, r21
    4c70:	0e d0       	rcall	.+28     	; 0x4c8e <__divmodsi4_neg1>
    4c72:	57 fd       	sbrc	r21, 7
    4c74:	04 d0       	rcall	.+8      	; 0x4c7e <__divmodsi4_neg2>
    4c76:	d7 df       	rcall	.-82     	; 0x4c26 <__udivmodsi4>
    4c78:	0a d0       	rcall	.+20     	; 0x4c8e <__divmodsi4_neg1>
    4c7a:	00 1c       	adc	r0, r0
    4c7c:	38 f4       	brcc	.+14     	; 0x4c8c <__divmodsi4_exit>

00004c7e <__divmodsi4_neg2>:
    4c7e:	50 95       	com	r21
    4c80:	40 95       	com	r20
    4c82:	30 95       	com	r19
    4c84:	21 95       	neg	r18
    4c86:	3f 4f       	sbci	r19, 0xFF	; 255
    4c88:	4f 4f       	sbci	r20, 0xFF	; 255
    4c8a:	5f 4f       	sbci	r21, 0xFF	; 255

00004c8c <__divmodsi4_exit>:
    4c8c:	08 95       	ret

00004c8e <__divmodsi4_neg1>:
    4c8e:	f6 f7       	brtc	.-4      	; 0x4c8c <__divmodsi4_exit>
    4c90:	90 95       	com	r25
    4c92:	80 95       	com	r24
    4c94:	70 95       	com	r23
    4c96:	61 95       	neg	r22
    4c98:	7f 4f       	sbci	r23, 0xFF	; 255
    4c9a:	8f 4f       	sbci	r24, 0xFF	; 255
    4c9c:	9f 4f       	sbci	r25, 0xFF	; 255
    4c9e:	08 95       	ret

00004ca0 <__tablejump2__>:
    4ca0:	ee 0f       	add	r30, r30
    4ca2:	ff 1f       	adc	r31, r31

00004ca4 <__tablejump__>:
    4ca4:	05 90       	lpm	r0, Z+
    4ca6:	f4 91       	lpm	r31, Z+
    4ca8:	e0 2d       	mov	r30, r0
    4caa:	09 94       	ijmp

00004cac <_exit>:
    4cac:	f8 94       	cli

00004cae <__stop_program>:
    4cae:	ff cf       	rjmp	.-2      	; 0x4cae <__stop_program>
